Return-Path: <linux-nvdimm-bounces@lists.01.org>
X-Original-To: lists+linux-nvdimm@lfdr.de
Delivered-To: lists+linux-nvdimm@lfdr.de
Received: from ml01.01.org (ml01.01.org [198.145.21.10])
	by mail.lfdr.de (Postfix) with ESMTPS id 5EDB3307EFA
	for <lists+linux-nvdimm@lfdr.de>; Thu, 28 Jan 2021 20:55:11 +0100 (CET)
Received: from ml01.vlan13.01.org (localhost [IPv6:::1])
	by ml01.01.org (Postfix) with ESMTP id 73F39100EAB53;
	Thu, 28 Jan 2021 11:55:09 -0800 (PST)
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=51.77.214.193; helo=minn-university.live; envelope-from=michelle@minn-university.live; receiver=<UNKNOWN> 
Received: from minn-university.live (minn-university.live [51.77.214.193])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits))
	(No client certificate requested)
	by ml01.01.org (Postfix) with ESMTPS id 3D2E7100EB34F
	for <linux-nvdimm@lists.01.org>; Thu, 28 Jan 2021 11:55:06 -0800 (PST)
Received: from minn-university.live (localhost [127.0.0.1])
	by minn-university.live (Postfix) with ESMTPS id 1A73183B89
	for <linux-nvdimm@lists.01.org>; Thu, 28 Jan 2021 19:55:04 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=minn-university.live;
	s=202100; t=1611863704;
	bh=oXHE2VI86QLRBbPdsCAlh5G0QCWhagN5eeqqhoSEMiE=;
	h=Date:Subject:From:Reply-To:To:List-Unsubscribe:List-Id:From;
	b=aX4Xay/BApi34kxxSYNz/AiiJIIMCusblN9R0+Va2xJZl5HI9Jm1Am+J2zP4GN28A
	 on6dQ3stGpLr6n9fCGfYq0pkDySor3xH4YwpvqGmla7yaJb2+GRLNc559SB3E1O9Ev
	 PSTv3/TM70q14+yavUu/NOOBf0Xl4jVvVqcU9n4ex4Xxe685iDkocruy1QqfVWPMNC
	 t7utWmM7EcZ9H1gDPHslutrA0jUjLPeDmiSwDdfOdNRAmiKUAtxbpWt7AUWn8Y8KEi
	 84u7pJQbVemXdB3ZzNCvEVQgplQkAfj4xCMEfBtirBvo+wL9AT6Ui6afcdoVD7k+yn
	 odjFKO1e9JGaQ==
Message-ID: <3897b5514f342546aa73f9dd57582a94@minn-university.live>
Date: Thu, 28 Jan 2021 19:55:04 +0000
Subject: Hey
From: Michelle Johnson <michelle@minn-university.live>
To: "linux-nvdimm@lists.01.org" <linux-nvdimm@lists.01.org>
MIME-Version: 1.0
X-Sender: michelle@minn-university.live
X-Report-Abuse: Please report abuse for this campaign here:
 http://minn-university.live/index.php/campaigns/bm335e3y12487/report-abuse/ey0387667hda8/vt239xhedb636
X-Receiver: linux-nvdimm@lists.01.org
X-Fklz-Tracking-Did: 0
X-Fklz-Subscriber-Uid: vt239xhedb636
X-Fklz-Mailer: SwiftMailer - 5.4.x
X-Fklz-EBS: http://minn-university.live/index.php/lists/block-address
X-Fklz-Delivery-Sid: 1
X-Fklz-Customer-Uid: qt929am9rabde
X-Fklz-Customer-Gid: 0
X-Fklz-Campaign-Uid: bm335e3y12487
Precedence: bulk
List-Unsubscribe-Post: List-Unsubscribe=One-Click
Feedback-ID: bm335e3y12487:vt239xhedb636:ey0387667hda8:qt929am9rabde
Message-ID-Hash: 5ZDXZ6XD3AEBOWGVJ43FAF4ZP7RVOT4V
X-Message-ID-Hash: 5ZDXZ6XD3AEBOWGVJ43FAF4ZP7RVOT4V
X-MailFrom: michelle@minn-university.live
X-Mailman-Rule-Hits: nonmember-moderation
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation
X-Content-Filtered-By: Mailman/MimeDel 3.1.1
X-Mailman-Version: 3.1.1
Reply-To: Michelle Johnson <michelle@minn-university.live>
List-Id: "Linux-nvdimm developer list." <linux-nvdimm.lists.01.org>
Archived-At: <https://lists.01.org/hyperkitty/list/linux-nvdimm@lists.01.org/message/5ZDXZ6XD3AEBOWGVJ43FAF4ZP7RVOT4V/>
List-Archive: <https://lists.01.org/hyperkitty/list/linux-nvdimm@lists.01.org/>
List-Help: <mailto:linux-nvdimm-request@lists.01.org?subject=help>
List-Post: <mailto:linux-nvdimm@lists.01.org>
List-Subscribe: <mailto:linux-nvdimm-join@lists.01.org>
List-Unsubscribe: <mailto:linux-nvdimm-leave@lists.01.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

R3JlZXRpbmdzLA0KSSB3YW50IHRvIHNoYXJlIGEgbWVzc2FnZSB0aGF0IGhhcyBiZWVuIHNwcmVh
ZGluZyBhbGwgb3ZlciB0aGUNCmludGVybmV0IHRoYXQgY29uY2VybnMgdGhlIHRpbWVzIHdlIGFy
ZSBsaXZpbmcgaW4uIFdoZXRoZXIgeW91IGJlbGlldmUNCmluIEdvZCBvciBub3QsIHRoaXMgaXMg
YSBtdXN0IHJlYWQgbWVzc2FnZSENCldlIGNhbiBzZWUgdGhyb3VnaG91dCB0aW1lIGhvdyB3ZSBo
YXZlIGJlZW4gc2xvd2x5IGNvbmRpdGlvbmVkIHRvDQpjb21lIHRvIHRoaXMgcG9pbnQgd2hlcmUg
d2UgYXJlIG9uIHRoZSB2ZXJnZSBvZiBhIGNhc2hsZXNzIHNvY2lldHkuDQpXb3VsZCBpdCBzdXJw
cmlzZSB5b3UgdG8ga25vdyB0aGF0IHRoZSBCaWJsZSBmb3JldG9sZCBvZiB0aGlzIGV2ZW50Pw0K
RG9uJ3QgYmVsaWV2ZSBtZT8gVGhpcyBtYXkgYmUgdGhlIG1vc3QgaW1wb3JhbnQgbWVzc2FnZSB5
b3Ugd2lsbCByZWFkDQppbiB0aGVzZSB0aW1lcy4uLnBsZWFzZSBkbyBub3QgaWdub3JlIHRoaXMh
DQpUaGlzIG1lc3NzYWdlIHJldmVhbHMgd2hhdCB0aGUgTWFyayBvZiB0aGUgQmVhc3QgaXMsIGFu
ZCB0aGUgbWVhbmluZw0KYmVoaW5kIGNvdW50aW5nIGEgbnVtYmVyIHBlb3BsZSBoYXZlIGJlZW4g
cG9uZGVyaW5nIGZvciBjZW50dXJpZXMsDQo2NjYuIFRoaXMgbWVzc2FnZSBhbHNvIHNoYXJlcyB3
aHkgQmFyYWNrIE9iYW1hIHdpbGwgYmUgdGhlIEFudGljaHJpc3QNCmFzIHdlbGwgYXMgdGhlIGdv
c3BlbCBtZXNzYWdlLiBUaGlzIGlzIHRydWx5IGEgbWVzc2FnZSBmcm9tIEdvZCENCkluIHRoZSBS
ZXZlbGF0aW9uIG9mIEplc3VzIENocmlzdCBnaXZlbiB0byB0aGUgYXBvc3RsZSBKb2huLCB3ZSBy
ZWFkOg0KLi4uLiJIZSAodGhlIGZhbHNlIHByb3BoZXQgd2hvIGRlY2VpdmVzIG1hbnkgYnkgaGlz
IG1pcmFjbGVzKSBmb3JjZXMNCmV2ZXJ5b25l4oCUdGhlIHNtYWxsIGFuZCBncmVhdCwgdGhlIHJp
Y2ggYW5kIHBvb3IsIHRoZSBmcmVlIGFuZA0Kc2xhdmVz4oCUdG8gaGF2ZSBhIG1hcmsgcHV0IG9u
IHRoZWlyIHJpZ2h0IGhhbmQgb3Igb24gdGhlaXIgZm9yZWhlYWQuDQpIZSB3aWxsIG5vdCBhbGxv
dyBhbnlvbmUgdG8gbWFrZSBhIHB1cmNoYXNlIG9yIHNlbGwgYW55dGhpbmcgdW5sZXNzDQp0aGUg
cGVyc29uIGhhcyB0aGUgbWFyayB3aXRoIHRoZSBiZWFzdOKAmXMgbmFtZSBvciB0aGUgbnVtYmVy
IG9mIGl0cw0KbmFtZS4gVGhpcyBjYWxscyBmb3Igd2lzZG9tLiBMZXQgdGhlIG9uZSB3aG8gdW5k
ZXJzdGFuZHMgY2FsY3VsYXRlIHRoZQ0KYmVhc3TigJlzIG51bWJlciwgZm9yIGl04oCZcyBhIGh1
bWFuIGJlaW5n4oCZcyBudW1iZXIuIEl0cyBudW1iZXIgaXMNCnNpeCBodW5kcmVkIHNpeHR5LXNp
eCIgKFJldmVsYXRpb24gMTM6MTYtMTggQ0VCKS4uLi4uDQpSZWZlcnJpbmcgdG8gdGhlIGxhc3Qg
Z2VuZXJhdGlvbiwgdGhpcyBjb3VsZCBvbmx5IGJlIHNwZWFraW5nIG9mIGENCmNhc2hsZXNzIG1v
bmV5IHNvY2lldHksIHdoaWNoIHdlIGhhdmUgeWV0IHRvIHNlZSwgYnV0IGFyZSBoZWFkaW5nDQp0
b3dhcmRzLiBXaHk/IFJldmVsYXRpb24gMTM6MTcgdGVsbHMgdXMgdGhhdCB3ZSBjYW5ub3QgYnV5
IG9yIHNlbGwNCnVubGVzcyB3ZSByZWNlaXZlIHRoZSBtYXJrIG9mIHRoZSBiZWFzdCBpbiBvdXIg
cmlnaHQtaGFuZCBvciBmb3JlaGVhZC4NCldlIGNvdWxkIHN0aWxsIGJ1eSBvciBzZWxsIGFtb25n
IG9uZSBhbm90aGVyIHdpdGhvdXQgcmVjZWl2aW5nIHRoZQ0KbWFyayBpZiBwaHlzaWNhbCBtb25l
eSB3YXMgc3RpbGwgY3VycmVuY3kuIEl0IGxvZ2ljYWxseSBkZWR1Y2VzIGl0c2VsZg0KdG8gdGhp
cyByZWFzb24uDQpUaGVzZSB2ZXJzZXMgY291bGQgbm90IGJlIHJlZmVycmluZyB0byBzb21ldGhp
bmcgc3Bpcml0dWFsIGJlY2F1c2UNCnRoZSB3b3JkIHJlZmVyZW5jZXMgdHdvIGRpZmZlcmVudCBw
aHlzaWNhbCBsb2NhdGlvbnMgKG91ciByaWdodC1oYW5kDQpvciBmb3JlaGVhZCkgc3RhdGluZyB0
aGUgbWFyayB3aWxsIGJlIG9uIG9uZSAiT1IiIHRoZSBvdGhlci4gSXQgb25jZQ0KYWdhaW4gbG9n
aWNhbGx5IGRlZHVjZXMgaXRzZWxmIHRvIHRoaXMgcmVhc29uLg0KSGVyZSBpcyB3aGVyZSBpdCBy
ZWFsbHkgc3RhcnRzIHRvIGNvbWUgdG9nZXRoZXIuIEl0IGlzIHNob2NraW5nIGhvdw0KYWNjdXJh
dGUgdGhlIEJpYmxlIGlzIGNvbmNlcm5pbmcgdGhlIFJGSUQgbWljcm9jaGlwLiBUaGVzZSBhcmUg
bm90ZXMNCmZyb20gYSBtYW4gbmFtZWQgQ2FybCBTYW5kZXJzIHdobyB3b3JrZWQgd2l0aCBhIHRl
YW0gb2YgZW5naW5lZXJzIHRvDQpoZWxwIGRldmVsb3AgdGhpcyBtaWNyb2NoaXAgaW4gdGhlIGxh
dGUgMTk2MCdzLg0KTXIuIENhcmwgU2FuZGVycyBhdHRlbmRlZCBzZXZlbnRlZW4gTmV3IFdvcmxk
IE9yZGVyIG1lZXRpbmdzIHdpdGgNCmhlYWRzLW9mLXN0YXRlIG9mZmljaWFscyBzdWNoIGFzIEhl
bnJ5IEtpc3NpbmdlciBhbmQgQm9iIEdhdGVzIG9mIHRoZQ0KQy5JLkEuIHRvIGRpc2N1c3MgcGxh
bnMgb24gaG93IHRvIGJyaW5nIGFib3V0IHRoaXMgb25lLXdvcmxkIHN5c3RlbS4NClRoZSBVUyBn
b3Zlcm5tZW50IGNvbW1pc3Npb25lZCBNci4gU2FuZGVycyB0byBpbnZlbnQgYSBtaWNyb2NoaXAg
Zm9yDQppZGVudGlmeWluZyBhbmQgY29udHJvbGxpbmcgdGhlIHBlb3BsZXMgb2YgdGhlIG5hdGlv
bnMtYSBtaWNyb2NoaXANCnRoYXQgY291bGQgYmUgaW5zZXJ0ZWQgYmVuZWF0aCB0aGUgc2tpbiB3
aXRoIGEgaHlwb2Rlcm1pYyBuZWVkbGUgKGENCmZhc3QsIGNvbnZlbmllbnQgcHJvY2VkdXJlIHRo
YXQgd291bGQgYmUgZ3JhZHVhbGx5IHJlY2VpdmVkIGJ5IHRoZQ0Kd29ybGQpLg0KTXIuIFNhbmRl
cnMsIGFsb25nIHdpdGggYSBncm91cCBvZiBlbmdpbmVlcnMgd2l0aCBoaW0sIHdpdGggVVMgZ3Jh
bnQNCm1vbmllcyBwcm92aWRlZCBieSBVUyB0YXggZG9sbGFycywgdG9vayBvbiB0aGlzIHByb2pl
Y3QgYW5kIGRlc2lnbmVkIGENClJGSUQgY2hpcCB3aGljaCBpcyBwb3dlcmVkIGJ5IGEgbGl0aGl1
bSBiYXR0ZXJ5LCByZWNoYXJnZWFibGUgYnkgd2F5DQpvZiB0aGUgdGVtcGVyYXR1cmUgY2hhbmdl
cyBpbiBvdXIgc2tpbi4gV2l0aG91dCB0aGUgdW5kZXJzdGFuZGluZyBvZg0KdGhlIGhvbHkgQmli
bGUgKFNhbmRlcnMgd2FzIG5vdCBhIGJlbGlldmVyIGF0IHRoZSB0aW1lKSwgdGhlc2UNCmVuZ2lu
ZWVycyBzcGVudCBvbmUtYW5kLWEtaGFsZi1taWxsaW9uIGRvbGxhcnMgZ2F0aGVyaW5nIGRhdGEg
b24gdGhlDQpiZXN0IGFuZCBtb3N0IGNvbnZlbmllbnQgcGxhY2UgdG8gaGF2ZSB0aGUgUkZJRCBj
aGlwIHBsYWNlZCB3aXRoaW4gdGhlDQpib2R5Lg0KR3Vlc3Mgd2hhdD8gVGhlc2UgcmVzZWFyY2hl
cnMgb2JzZXJ2ZWQgdGhhdCB0aGUgZm9yZWhlYWQgYW5kIHRoZSBiYWNrDQpvZiB0aGUgaGFuZCAo
dGhlIHR3byBzcG90cyBSZXZlbGF0aW9uIHNheXMgdGhlIG1hcmsgd2lsbCBnbykgYXJlIG5vdA0K
b25seSB0aGUgbW9zdCBjb252ZW5pZW50IHBsYWNlcywgYnV0IGFyZSBhbHNvIHRoZSBvbmx5IHZp
YWJsZSBzcG90cw0KZm9yIGZhc3QsIGNvbnNpc3RlbnQgdGVtcGVyYXR1cmUgY2hhbmdlcyB3aXRo
aW4gdGhlIHNraW4gdG8gcmVjaGFyZ2UNCnRoZSBsaXRoaXVtIGJhdHRlcnkuIFRoZSBSRklEIGNo
aXAgaXMgYXJvdW5kIHNldmVuIG1pbGxpbWV0ZXJzIGluDQpsZW5ndGgsIC43NSBtaWxsaW1ldGVy
cyBpbiBkaWFtZXRlciwgYWJvdXQgdGhlIHNpemUgb2YgYSBncmFpbiBvZg0KcmljZS4gSXQgaXMg
Y2FwYWJsZSBvZiBob2xkaW5nIHBhZ2VzIG9mIGRldGFpbHMgYWJvdXQgeW91LiBBbGwgeW91cg0K
YmFzaWMgZGF0YSwgd29yayBkYXRhLCBjcmltZSBpbmZvcm1hdGlvbiwgaGVhbHRoIGluZm9ybWF0
aW9uLCBhbmQNCmZpbmFuY2lhbCByZWNvcmRzIGNhbiBiZSBzYXZlZCBvbiB0aGlzIG1pY3JvY2hp
cC4NCkJyb3RoZXIgU2FuZGVycyBiZWxpZXZlcyB0aGF0IHRoaXMgUkZJRCBjaGlwLCB3aGljaCBo
ZSByZWdyZXRmdWxseQ0KaGVscGVkIGRlc2lnbiwgaXMgdGhlICJtYXJrIG9mIHRoZSBiZWFzdCIg
c3Bva2VuIGFib3V0IGluIFJldmVsYXRpb24NCjEzOjE2LTE4LiBUaGUgR3JlZWsgd29yZCBmb3Ig
Im1hcmsiIGlzICJjaGFyYWdtYSwiIHdoaWNoIG1lYW5zIGENCiJzY3JhdGNoIG9yIGV0Y2hpbmcu
IiBBZGRpdGlvbmFsbHkgaXQgaXMgaW50ZXJlc3RpbmcgdG8gb2JzZXJ2ZSB0aGF0DQp0aGUgbnVt
YmVyIDY2NiBpcyBpbiBmYWN0IGEgd29yZCBpbiB0aGUgb3JpZ2luYWwgR3JlZWsuIFRoZSB3b3Jk
IGlzDQoiY2hpIHhpIHN0aWdtYSwiIHdpdGggdGhlIGZpbmFsIHBhcnQsICJzdGlnbWEsIiBhbHNv
IG1lYW5pbmcgInRvIHN0aWNrDQpvciBwcmljay4gQ2FybCBiZWxpZXZlcyB0aGF0IGlzIHJlZmVy
ZW5jaW5nIHRvIHVzaW5nIGEgaHlwb2Rlcm1pYw0KbmVlZGxlIGJlaW5nIHBva2VkIGludG8gYSBw
ZXJzb24gdG8gaW5zZXJ0IHRoZSBSRklEIGNoaXAuIg0KQ2FybCBTYW5kZXJzIGFza2VkIGEgQm9z
dG9uIE1lZGljYWwgQ2VudGVyIGRvY3RvciB3aGF0IHdvdWxkIGhhcHBlbg0KaWYgdGhlIGxpdGhp
dW0gY29udGFpbmVkIHdpdGhpbiB0aGUgUkZJRCBtaWNyb2NoaXAgbGVha2VkIGludG8gdGhlDQpi
b2R5LiBUaGUgZG9jdG9yIHJlc3BvbmRlZCB0aGF0IGlmIHRoZSBtaWNyb2NoaXAgYnJva2UgaW5z
aWRlIGEgaHVtYW4NCmJvZHksIHRoZSBsaXRoaXVtIHdvdWxkIGNhdXNlIGEgc2V2ZXJlIGFuZCBw
YWluZnVsIHdvdW5kIGZpbGxlZCB3aXRoDQpwdXMuIFRoaXMgaXMgd2hhdCB0aGUgYm9vayBvZiBS
ZXZlbGF0aW9uIGhhcyB0byBzYXk6DQoiU28gdGhlIGZpcnN0IGFuZ2VsIHBvdXJlZCBoaXMgYm93
bCBvbiB0aGUgZWFydGgsIGFuZCBhIG5hc3R5IGFuZA0KdGVycmlibGUgc29yZSBhcHBlYXJlZCBv
biB0aGUgcGVvcGxlIHdobyBoYWQgdGhlIGJlYXN04oCZcyBtYXJrIGFuZA0Kd29yc2hpcHBlZCBp
dHMgaW1hZ2UiIChSZXZlbGF0aW9uIDE2OjIgQ0VCKS4NClRIRSBISURERU4gTUVBTklORyBCRUhJ
TkQgVEhFIE5VTUJFUiA2NjYgUkVWRUFMRUQhDQpXaGF0IEkgZmlyc3Qgd2FudCB0byBtZW50aW9u
LCBiZWZvcmUgSSBzaGFyZSB3aGF0IHRoZSBIb2x5IFNwaXJpdCBoYXMNCnJldmVhbGVkIHRvIG1l
IGNvbmNlcm5pbmcgdGhlIG51bWJlciBvZiB0aGUgYmVhc3QsIGlzIHRoYXQgR29kDQpjb25maXJt
cyBpbiB0aHJlZXMuIFdlIGNhbiBzZWUgdGhpcyB0aHJvdWdob3V0IHNjcmlwdHVyZToNCiJGb3Ig
dGhlcmUgYXJlIHRocmVlIHRoYXQgYmVhciB3aXRuZXNzIGluIGhlYXZlbjogdGhlIEZhdGhlciwg
dGhlDQpXb3JkLCBhbmQgdGhlIEhvbHkgU3Bpcml0OyBhbmQgdGhlc2UgdGhyZWUgYXJlIG9uZSIg
KDEgSm9obiA1OjcgTktKVikuDQoiYW5kIHRoYXQgSGUgd2FzIGJ1cmllZCwgYW5kIHRoYXQgSGUg
cm9zZSBhZ2FpbiB0aGUgdGhpcmQgZGF5DQphY2NvcmRpbmcgdG8gdGhlIFNjcmlwdHVyZXMiICgx
IENvcmludGhpYW5zIDE1OjQgTktKVikuDQoiLi4uSG9seSwgaG9seSwgaG9seSwgTG9yZCBHb2Qg
QWxtaWdodHksIFdobyB3YXMgYW5kIGlzIGFuZCBpcyB0bw0KY29tZSEiIChSZXZlbGF0aW9uIDQ6
OCBOS0pWKS4NClRoZXJlIGFyZSBtYW55IG1vcmUgZXhhbXBsZXMsIGJ1dCBJIHRob3VnaHQgSSB3
b3VsZCBqdXN0IHNoYXJlIHRocmVlDQpvZiB0aGVtIHRvIG1ha2UgdGhlIHBvaW50Lg0KRXhhbWlu
aW5nIFJldmVsYXRpb24gMTM6MTYsMTcsMTgsIHRoZSBmaXJzdCBncm91cCBvZiB0aHJlZSBJIHdv
dWxkDQpsaWtlIHRvIHBvaW50IG91dCBpcyB0aGF0IHRoZSBtYXJrIG9mIHRoZSBiZWFzdCBpcyBk
ZXNjcmliZWQgaW4gdGhyZWUNCnNlcGFyYXRlIHZlcnNlcywgMTYsIDE3IGFuZCAxOC4NClRoZSBu
ZXh0IHRocmVlIEkgc2VlIGlzIGluIHZlcnNlIDE2LCAiSGUgY2F1c2VzIGFsbC4uLiIgaXMgZm9s
bG93ZWQNCmJ5IHRocmVlIGNvbnRyYXN0aW5nIGNhdGVnb3JpZXMgb2YgcGVvcGxlLA0KMSAtICJi
b3RoIHNtYWxsIGFuZCBncmVhdCwNCjIgLSByaWNoIGFuZCBwb29yLA0KMyAtIGZyZWUgYW5kIHNs
YXZlLi4uIi4NClRoZW4gdW50byB2ZXJzZSAxNywgaXQgb3BlbnMgd2l0aCwgImFuZCB0aGF0IG5v
IG9uZSBtYXkgYnV5IG9yIHNlbGwNCmV4Y2VwdCBvbmUgd2hvIGhhcy4uLiIsIGZvbGxvd2VkIGJ5
IHRocmVlIGV4cGxhbmF0aW9ucyBvZiB3aGF0IG9uZQ0KbXVzdCBoYXZlIHRvIGJ1eSBvciBzZWxs
LA0KMSAtICIuLi50aGUgbWFyaw0KMiAtIG9yIHRoZSBuYW1lIG9mIHRoZSBiZWFzdCwNCjMgLSBv
ciB0aGUgbnVtYmVyIG9mIGhpcyBuYW1lIi4NCk5vdyB1bnRvIHZlcnNlIDE4LCB3ZSByZWFkICJM
ZXQgaGltIHdobyBoYXMgdW5kZXJzdGFuZGluZw0KY2FsY3VsYXRlLi4uIiwgd2hpY2ggaXMgZm9s
bG93ZWQgYnksDQoxIC0gInRoZSBudW1iZXIgb2YgdGhlIGJlYXN0LA0KMiAtIGZvciBpdCBpcyB0
aGUgbnVtYmVyIG9mIGEgbWFuOg0KMyAtIEhpcyBudW1iZXIgaXMgNjY2Ii4NClRoZSBsYXN0IHRo
cmVlIEkgc2VlIGlzIHRoZSBudW1iZXIgIjYiIGJlaW5nIHVzZWQgdGhyZWUgdGltZXMgaW4gYQ0K
cm93LiBUaGUgcmVhc29uIEknbSBtYWtpbmcgdGhpcyBwb2ludCBhYm91dCBHb2QgY29uZmlybWlu
ZyBpbiB0aHJlZSBpcw0KYmVjYXVzZSBpdCBpcyB0aGUga2V5IHRvIHVubG9ja2luZyBob3cgdG8g
Y2FsY3VsYXRlIHRoZSBudW1iZXIgNjY2Lg0KVGhyb3VnaG91dCB0aGUgY2VudHVyaWVzIHRoZXJl
IGhhdmUgYmVlbiBwZW9wbGUgdHJ5aW5nIHRvIGNhbGN1bGF0ZQ0KbnVtYmVycyBiYXNlZCBvbiB0
aXRsZXMgYW5kIG5hbWVzIHRoYXQgY29tZSB1cCB0byB0aGUgbnVtYmVyIDY2NiB0bw0KaWRlbnRp
Znkgb25lIHBlcnNvbiwgdGhlIEFudGljaHJpc3Q7IGJ1dCBmcm9tIFJldmVsYXRpb24gMTM6MTgs
IEkgZG8NCm5vdCBzZWUgd2hlcmUgR29kIGlzIHRlbGxpbmcgdXMgdG8gY291bnQgdXAgdG8gNjY2
LCBidXQgcmF0aGVyIHRvDQpjb3VudCB0aGUgbnVtYmVyIG9mIHRoZSBiZWFzdC4gVGhpcyBudW1i
ZXIgaXMgaWRlbnRpZmllZCBhcyA2NjYuIFNvDQp0aGUgdmVyc2UgaXMgdGVsbGluZyB1cyB0byBj
b3VudCB0aGUgbnVtYmVyIDY2Ni4NCldoYXQgZG9lcyBpdCBtZWFuIHRvIGNvdW50PyBJdCBtZWFu
cyB0byBhZGQgdXAuIFNvIGhvdyBjb3VsZCB3ZSBhZGQNCnVwIDY2Nj8gUmVtZW1iZXIgbXkgcHJl
dmlvdXMgcG9pbnQgYWJvdXQgR29kIGNvbmZpcm1pbmcgaW4gdGhyZWVzIGlzDQprZXkgdG8gdW5s
b2NraW5nIHRoZSBudW1iZXIgNjY2LiBTbyBsb2dpY2FsbHksIHdoYXQgd291bGQgYmUgdGhlIGJl
c3QNCndheSB0byBjb3VudCB0aGUgbnVtYmVyIDY2Nj8gVG8gY291bnQgaXQgZXF1YWxseSBieSB1
c2luZyB0aGUgcnVsZSBvZg0KdGhyZWUgYmFzZWQgb2ZmIHRoZSBudW1iZXIuDQpXZSBjYW5ub3Qg
Y291bnQgaXQgZXF1YWxseSBhcyA2MDArNjArNiwgdGhpcyB3b3VsZCBhbHNvIGJyaW5nIHVzIGJh
Y2sNCnRvIHRoZSBzdGFydC4NCldlIGNhbm5vdCBjb3VudCBpdCBhcyA2MDArNjAwKzYwMCwgb3Ig
NjArNjArNjAgYmVjYXVzZSB0aGVyZSBhcmUgbm8NCnplcm9lcyBpbiBiZXR3ZWVuIG9yIGF0IHRo
ZSBlbmQgb2YgNjY2Lg0KVGhlIG9ubHkgbG9naWNhbCBvcHRpb24gaXMgNis2KzY9MTguDQpXaGF0
IGlzIGludGVyZXN0aW5nIGlzIHRoYXQgdGhlIHZlcnNlIHRoYXQgcmV2ZWFscyBmb3IgdXMgdG8g
Y291bnQNCnRoZSBudW1iZXIgaXRzZWxmIGlzIHZlcnNlIDE4ICh0aGVyZSBhIHRvdGFsIG9mIDE4
IHZlcnNlcyBpbg0KUmV2ZWxhdGlvbiBDaGFwdGVyIDEzKSwgYmVpbmcgdGhlIHRoaXJkIHZlcnNl
IG91dCBvZiB0aGUgdGhyZWUgdmVyc2VzDQp0aGF0IGRlc2NyaWJlIHRoZSBtYXJrIG9mIHRoZSBi
ZWFzdCBpbiBSZXZlbGF0aW9uIDEzOjE2LDE3LDE4LiBXaGF0IGlzDQoxOCBkaXZpZGVkIGJ5IDM/
IDYuIFNvIDN4Nj0xOCwgb3IgNis2KzY9MTguDQpBbm90aGVyIGludGVyZXN0aW5nIHBvaW50IGlz
IHRoZSBvbmx5IHR3byBvdGhlciBjb21iaW5hdGlvbnMgKG1ha2luZw0KYSB0b3RhbCBvZiB0aHJl
ZSBwb3NzaWJsZSBjb21iaW5hdGlvbnMpIGZvciBwbGFjaW5nIGEgIisiIHN5bWJvbCBpbg0KYmV0
d2VlbiA2NjYgYXJlOg0K4oCiIDY2KzY9NzIgYW5kIDYrNjY9NzIuDQrigKIgQWRkIGJvdGggNzIn
cyB0b2dldGhlciBhbmQgeW91IGdldCAxNDQuDQpXaHkgdGhlIG51bWJlciAxNDQgaXMgd29ydGgg
b3VyIGF0dGVudGlvbiBpcyBiZWNhdXNlIHRoZSB2ZXJzZQ0KZm9sbG93aW5nIFJldmVsYXRpb24g
MTM6MTggaXMgdGhlIGZpcnN0IHRpbWUgaW4gdGhlIEJpYmxlIHdoZXJlIHRoZQ0KMTQ0LDAwMCBh
cmUgYmVpbmcgZGVzY3JpYmVkIGluIGRldGFpbDoNCiJUaGVuIEkgbG9va2VkLCBhbmQgYmVob2xk
LCBhIExhbWIgc3RhbmRpbmcgb24gTW91bnQgWmlvbiwgYW5kIHdpdGgNCkhpbSBvbmUgaHVuZHJl
ZCBhbmQgZm9ydHktZm91ciB0aG91c2FuZCwgaGF2aW5nIEhpcyBGYXRoZXLigJlzIG5hbWUNCndy
aXR0ZW4gb24gdGhlaXIgZm9yZWhlYWRzLi4uIiAoUmV2ZWxhdGlvbiAxNDoxKS4NCk5vdyBpZiB5
b3UgYWRkIHVwIGFsbCB0aHJlZSBudW1iZXJzIGZyb20gY291bnRpbmcgNjY2IGJ5IG1vdmluZyB0
aGUNCiIrIiBzeW1ib2wgYXJvdW5kLCBpdCB3b3VsZCBiZSA3Mis3MisxOD0xNjIuIFdoYXQgaXMg
Y29tcGVsbGluZyBhYm91dA0KdGhlIG51bWJlciAxNjIsIGlzLCBpZiB5b3UgZGl2aWRlIDE0NCww
MDAgYnkgMTYyLCB5b3UgZ2V0IDg4OC4gVGhlDQpuYW1lIG9mIEplc3VzIGluIEdyZWVrIGdlbWF0
cmlhIGFkZHMgdXAgdG8gODg4LiBUaGUgTmV3IFRlc3RhbWVudCB3YXMNCm9yaWdpbmFsbHkgd3Jp
dHRlbiBpbiB0aGUgR3JlZWsgbGFuZ3VhZ2UuIFJldmVsYXRpb24gMTQ6MSBub3Qgb25seQ0KbWVu
dGlvbnMgdGhlIDE0NCwwMDAsIGJ1dCBhbHNvIHRoZSBMYW1iIHdobyBpcyBKZXN1cy4NCk5vdyB3
aGF0IGlzIGludGVyZXN0aW5nIGFib3V0IHRoZSBudW1iZXIgZm9yIEplc3VzLCA4ODgsIGlzIHRo
YXQgaWYNCnlvdSBhcHBseSB0aGUgc2FtZSBmb3JtdWxhIHRoYXQgd2FzIHVzZWQgdG8gY291bnQg
NjY2LCB5b3UgZ2V0DQo4KzgrOD0yNC4gV2h5IHRoZSBudW1iZXIgMjQ/IFJldmVsYXRpb24gY2hh
cHRlciA0IHRlbGxzIHVzIHRoZXJlIGFyZQ0KMjQgZWxkZXJzIHNlYXRlZCBhcm91bmQgdGhlIHRo
cm9uZSBvZiBHb2QuIFRoaXMgaXMgdGhlIHNhbWUgdGhyb25lDQp3aGVyZSBKZXN1cyBzaXRzLg0K
Tm93IGlmIHlvdSB0YWtlOg0K4oCiIDgrOCs4PTI0DQrigKIgOCs4OD05Ng0K4oCiIDg4Kzg9OTYN
CnlvdSBnZXQgMjQrOTYrOTY9MjE2Lg0KVGFrZSAxNDQsMDAwIGRpdmlkZWQgYnkgMjE2IGFuZCB5
b3UgZ2V0IDY2Ni4NClJlbWVtYmVyIHRoYXQgdGhpcyB3YXMgdGhlIHNhbWUgZXhhY3QgZm9ybXVs
YSB3ZSB1c2VkIHRvIGNvdW50IHRoZQ0KbnVtYmVyIDY2NiB0aGF0IHVsdGltYXRlbHkgYnJvdWdo
dCBmb3J0aCB0aGUgbnVtYmVyIDg4OC4NCkhlcmUgaXMgYSBxdWljayByZWNhcCB0byBkZW1vbnN0
cmF0ZSBob3cgdGhpcyBmb3JtdWxhIGNvbmZpcm1zIGl0c2VsZg0KYXMgYmVpbmcgdGhlIHRydWUg
d2F5IHRvIGNvdW50IDY2NjoNCjE6IDYrNis2PTE4IMK7IDY2KzY9NzIgwrsgNis2Nj03MiDCuyAx
OCs3Mis3Mj0xNjINCjI6IDE0NCwwMDAgZGl2aWRlZCBieSAxNjI9ODg4DQozOiA4KzgrOD0yNCDC
uyA4OCs4PTk2IMK7IDgrODg9OTYgwrsgMjQrOTYrOTY9MjE2DQo0OiAxNDQsMDAwIGRpdmlkZWQg
YnkgMjE2PTY2Ng0KMTogNis2KzY9MTggwrsgNjYrNj03Mi4uLg0KQXMgeW91IGNhbiBzZWUsIGl0
IGlzIHBlcnBldHVhbC4gQW5kIHJlbWVtYmVyIHRoYXQgd2UgY29uc2lzdGVudGx5DQp1c2VkIGEg
Zm9ybXVsYSB0aGF0IHdvcmtlZCBpbiB0aHJlZXMgYmVpbmcgdGhlIG51bWJlciB0aGF0IEdvZCB1
c2VzDQpmb3IgY29uZmlybWF0aW9uLg0KQnkgbWFraW5nIHVzZSBvZiB0aGUgc2FtZSBmb3JtdWxh
dGlvbiBvZiBjb3VudGluZyBieSBpbmNsdWRpbmcgdGhlDQoiKyIgc3ltYm9sIGluIGJldHdlZW4g
dGhlIG51bWJlcnMsIHdoeSBkbyBhbGwgdGhlc2UgbnVtYmVycyByZWxhdGUgaW4NCnN1Y2ggYSB3
YXk/DQpUaGUgYm9vayBvZiBSZXZlbGF0aW9uIGNvbnRhaW5zIHRoZSB1c2Ugb2YgdGhlIG51bWJl
ciA3IGluIHZhcmlvdXMNCmZvcm1zLiBGb3IgaW5zdGFuY2UgNyBzZWFscywgNyB0cnVtcGV0cywg
YW5kIDcgYm93bHMuIFdoYXQgaXMNCmludGVyZXN0aW5nIGFib3V0IHRoZSBudW1iZXIgMzcgKHRo
cmVlIHNldmVucykgaXMgaWYgaWYgeW91IGRpdmlkZSBhbnkNCm51bWJlciB0aGF0IGNvbnRhaW5z
IHRoZSBzYW1lIHNpbmdsZSBkaWdpdCB0aHJlZSB0aW1lcyBpbiBhIHJvdywgc3VjaA0KYXMgMTEx
IHRvIDk5OSwgaXQgY29tZXMgb3V0IHRvIHRoZSB2YWx1ZSBvZiBpZiB5b3Ugd2VyZSB0byBhZGQg
YWxsDQp0aHJlZSBudW1iZXJzIHVwLiBGb3IgZXhhbXBsZSA4ODggZGl2aWRlZCBieSAzNyBlcXVh
bHMgMjQuIFNvDQo4KzgrOD0yNC4gT3IgNjY2IGRpdmlkZWQgYnkgMzcgZXF1YWxzIDE4LiBTbyA2
KzYrNj0xOC4gQ291bGQgdGhpcyBiZQ0KYW5vdGhlciB3YXkgb2YgR29kJ3Mgd29yZCBjb25maXJt
aW5nIGl0c2VsZiB0aGF0IHRoZSBteXN0ZXJ5IGJlaGluZA0KY2FsY3VsYXRpbmcgdGhlIG51bWJl
ciA2NjYgaW5kZWVkIGlzIDE4Pw0KWWV0IGFub3RoZXIgaW50ZXJlc3RpbmcgcG9pbnQgdG8gb2Jz
ZXJ2ZSBpcyB0aGF0IGlmIHlvdSBhZGQgdXAgYWxsIG9mDQp0aGUgbnVtYmVycyBmcm9tIDEgdG8g
MzYgKDErMiszLi4uKzM2KSwgaXQgdG90YWxzIDY2Ni4gVGhlIG51bWJlciAzNiwNCmFzIGluIHRo
cmVlIHNpeGVzPyBNYXkgdGhpcyBiZSBhIHNpZ24gdGhhdCB3ZSBzaG91bGQgYWRkIHVwIHRocmVl
DQpzaXhlcyBhcyBvcHBvc2VkIHRvIHBlcmNlaXZpbmcgdGhlIG51bWJlciBhcyBzaXgtaHVuZHJl
ZCBzaXh0eSBzaXg/DQpTbyB3aGF0IG1pZ2h0IHRoaXMgbWVhbj8gV2VsbCB3ZSBrbm93IGluIHRo
aXMgd29ybGQgd2UncmUgaWRlbnRpZmllZA0KYnkgbnVtYmVycyBpbiBudW1lcm91cyBmb3Jtcy4g
RnJvbSBvdXIgYmlydGggY2VydGlmaWNhdGUgdG8gc29jaWFsDQpzZWN1cml0eSwgYWxzbyB3aXRo
IG91ciBkcml2ZXJzIGxpY2Vuc2UsIGJlaW5nIGlkZW50aWZpZWQgZm91bmRlZCBvbiBhDQpzeXN0
ZW0gb2YgcnVsZXIgc2hpcC4gU28gaXQgaXMgcGxhdXNpYmxlIHRoYXQgdGhpcyBSRklEIGNoaXAg
d2lsbA0KY29udGFpbiBhIG5ldyBpZGVudGlmaWNhdGlvbiB0aGF0IGhhcyBhIGNvbXBsZXRlIHRv
dGFsIG9mIDE4DQpjaGFyYWN0ZXJzLg0KImhlcmUgdGhlIHdpc2RvbSBpcywgdGhlIG9uZSBoYXZp
bmcgdGhlIG1pbmQgbGV0IGhpbSBjYWxjdWxhdGUgdGhlDQpudW1iZXIgb2YgdGhlIHdpbGQgYmVh
c3QsIG51bWJlciBmb3IgIm9mIGh1bWFuIiBpdCBpcywgYW5kIHRoZSBudW1iZXINCm9mIGl0IDY2
NiIgKFJldmVsYXRpb24gMTM6MSwgR3JlZWsgVHJhbnNsYXRpb24pLg0KVGhlIEdyZWVrIHdvcmQg
ImFudGhyxY1wb3MiIGJlaW5nIHVzZWQgaW4gdmVyc2UgMTggd2hlcmUgaXQgc2F5cyAib2YNCmh1
bWFuIiBpcyB0aGUgR3JlZWsgc3Ryb25ncyBjb25jb3JkYW5jZSBHNDQ0LiBUaGUgZmlyc3QgdHdv
DQpkZWZpbml0aW9ucyBvZiB0aGUgd29yZCBhcmUgImEgaHVtYW4gYmVpbmcsIHdoZXRoZXIgbWFs
ZSBvciBmZW1hbGUiLA0KYW5kLCAiZ2VuZXJpY2FsbHksIHRvIGluY2x1ZGUgYWxsIGh1bWFuIGlu
ZGl2aWR1YWxzIi4gQ291bGQgdGhlIG51bWJlcg0Kb2YgdGhlIGJlYXN0IGFwcGx5IHRvIGFsbCBt
YW5raW5kPw0KSW4gdGhlIEdyZWVrICh0aGUgTmV3IFRlc3RhbWVudCB3YXMgb3JpZ2luYWxseSB3
cml0dGVuIGluIHRoZSBHcmVlaw0KbGFuZ3VhZ2UpLCBhbmQgb3RoZXIgdHJhbnNsYXRpb25zLCB5
b3Ugd2lsbCBub3RpY2UgdGhlIGJlYXN0IGlzDQpkZXNjcmliZWQgYXMgYW4gIml0IiwgaW5zdGVh
ZCBvZiAiaGltIi4gVGhlIHJlYXNvbiBJJ20gbWFraW5nIHRoaXMNCnBvaW50IGlzIGJlY2F1c2Ug
d2hlbiBhIHRyYW5zbGF0aW9uIHNheXMgIkhpcyBudW1iZXIgaXMgNjY2IiwgdGhpcw0Kd291bGQg
aW1wbHkgYSBzaW5ndWxhciBwZXJzb24sIHRoZSBBbnRpY2hyaXN0LiBCdXQgYnkgc2F5aW5nICJ0
aGUNCm51bWJlciBvZiBpdCA2NjYiLCBpbXBsaWVzIHRoYXQgaXQgaXMgb2YgdGhlIGJlYXN0IHN5
c3RlbSBhcyBhIHdob2xlLg0KV2UgY2FuIGtub3cgdGhlIG51bWJlciBvZiB0aGUgYmVhc3QgY2Fu
bm90IGJlIHRvIGlkZW50aWZ5IHByb2R1Y3RzDQoobGlrZSBhIG5ldyBiYXJjb2RlKSB0byBidXkg
b3Igc2VsbCBiZWNhdXNlIHNjcmlwdHVyZSBzYXlzIHdlIGNhbm5vdA0KYnV5IG9yIHNlbGwgd2l0
aG91dCB0aGUgbnVtYmVyIG9mIHRoZSBiZWFzdC4gV2hhdCBhbSBJIGdldHRpbmcgYXQ/DQpUaGVy
ZSB3aWxsIGJlIGluc3RhbmNlcyB3aGVyZSB5b3UgY291bGQgYnV5IHNvbWV0aGluZyBzb21lb25l
IG1hZGUNCnRoZW1zZWx2ZXMgYW5kIGl0IHdvdWxkbid0IGhhdmUgYSBzdG9yZSBicmFuZGVkIGlk
ZW50aWZpY2F0aW9uIG9uIGl0Lg0KQnV0IGZvciB0aGlzIG51bWJlciB0byBiZSBpbiBvdXIgY2hp
cHMsIHRoYXQgaXMgd2hlcmUgaXQgbXVzdCBiZSB0bw0KY29uY2x1ZGUgdWx0aW1hdGVseSB0aGF0
IHdlIGNhbm5vdCBidXkgb3Igc2VsbCB3aXRob3V0IGhhdmluZyB0aGUNCm51bWJlciBvZiB0aGUg
YmVhc3QuIEFzIHByZXZpb3VzbHkgbWVudGlvbmVkIGluIFJldmVsYXRpb24gMTM6MTgsIHRoZQ0K
bnVtYmVyIG9mIHRoZSBiZWFzdCAoNis2KzY9MTgpIGlzIGEgImh1bWFuIG51bWJlciIsIGRlZmlu
aXRpb24NCiJnZW5lcmljYWxseSwgdG8gaW5jbHVkZSBhbGwgaHVtYW4gaW5kaXZpZHVhbHMiLg0K
TWF5IHRoaXMgYmUgdGhlIGlkZW50aWZpY2F0aW9uIG9mIHRoZSBiZWFzdCwgdGhlIG51bWJlciBv
ZiBpdHMgbmFtZT8NClRoZSBvbmUtd29ybGQgYmVhc3Qgc3lzdGVtIHRoYXQgaXMgaWRlbnRpZmll
ZCBieSAxOCBjaGFyYWN0ZXJzPyBUaGlzDQp3b3VsZCBtYXRjaCB0aGUgc2NyaXB0dXJlcyB0aGF0
IHNwZWFrcyBvZiBhIG1hcmsgdGhhdCB3ZSBvdWdodCB0byBoYXZlDQp0byBidXkgb3Igc2VsbCBp
biBvdXIgcmlnaHQgaGFuZCBvciBmb3JlaGVhZCwgYW5kIHRoYXQgaXQgYWxzbw0KY29uc2lzdHMg
b2YgdGhlIG51bWJlciBvZiB0aGUgYmVhc3QsIGluIHRoZSBjb3Vyc2Ugb2YgYSBmdXR1cmUNCmNh
c2hsZXNzIG1vbmV5IHNvY2lldHkuDQpHbyB0bzogaHR0cDovL2JpYmxlLWZyZWVkb20ub3JnDQpo
dHRwOi8vbWlubi11bml2ZXJzaXR5LmxpdmUvaW5kZXgucGhwL2NhbXBhaWduc1tDQU1QQUlHTl9V
SUQvdHJhY2stdXJsL3Z0MjM5eGhlZGI2MzYvODk1OTA1YmY0ZTk5MWJiYzA3ZDA4Nzg4ODliNTg5
ZDNiM2NkYzYzOHxodHRwOi8vdm9pY2UtdHJ1dGgub3JnDQpodHRwOi8vbWlubi11bml2ZXJzaXR5
LmxpdmUvaW5kZXgucGhwL2NhbXBhaWducy9ibTMzNWUzeTEyNDg3L3RyYWNrLXVybC92dDIzOXho
ZWRiNjM2L2M4OTA5ODAzNjExNWMwYjNiMzYzYjBkMjYzNWM3OTMzYmYxZDQ2MGZ8aHR0cDovL3Jl
dm9sdXRpb25iaWJsZS5vcmcNCmh0dHA6Ly9taW5uLXVuaXZlcnNpdHkubGl2ZS9pbmRleC5waHAv
Y2FtcGFpZ25zL2JtMzM1ZTN5MTI0ODcvdHJhY2stdXJsL3Z0MjM5eGhlZGI2MzYvMGI3MTFmNGM2
ZGE5OGE0NzIzYTJkYzRhNmEzNzYyNTk5MTM2ZDFiNl0NCnRvIHNlZSBhbGwgdGhlIHByb29mIQ0K
VGhlIEJpYmxlIHdhcm5zIHVzIGluIHRoZSBlbmQgdGltZXMgdGhhdCBhIGZhbHNlIHByb3BoZXQg
d2lsbCByaXNlIHVwDQpkb2luZyBtaXJhY3Vsb3VzIHNpZ25zIHRvIGRlY2VpdmUgbWFueSB0byBy
ZWNlaXZlIHRoaXMgbWFyazoNCi4uLi4iYW5kIHRoZSBiZWFzdCB3YXMgdGFrZW4sIGFuZCB3aXRo
IGhpbSB0aGUgZmFsc2UgcHJvcGhldCB3aG8gZGlkDQp0aGUgc2lnbnMgYmVmb3JlIGhpbSwgaW4g
d2hpY2ggaGUgbGVkIGFzdHJheSB0aG9zZSB3aG8gZGlkIHJlY2VpdmUgdGhlDQptYXJrIG9mIHRo
ZSBiZWFzdCwgYW5kIHRob3NlIHdobyBkaWQgYm93IGJlZm9yZSBoaXMgaW1hZ2U7IGxpdmluZyB0
aGV5DQp3ZXJlIGNhc3QgLS0gdGhlIHR3byAtLSB0byB0aGUgbGFrZSBvZiB0aGUgZmlyZSwgdGhh
dCBpcyBidXJuaW5nIHdpdGgNCmJyaW1zdG9uZSIgKFJldmVsYXRpb24gMTk6MjAgWUxUKS4uLi4N
CkF0IEFMTCBDT1NUUywgcmVzaXN0IHRoZSBtYXJrIQ0KIlRoZW4gYSB0aGlyZCBhbmdlbCBmb2xs
b3dlZCB0aGVtLCBzYXlpbmcgd2l0aCBhIGxvdWQgdm9pY2UsICJJZg0KYW55b25lIHdvcnNoaXBz
IHRoZSBiZWFzdCBhbmQgaGlzIGltYWdlLCBhbmQgcmVjZWl2ZXMgaGlzIG1hcmsgb24gaGlzDQpm
b3JlaGVhZCBvciBvbiBoaXMgaGFuZCwgaGUgaGltc2VsZiBzaGFsbCBhbHNvIGRyaW5rIG9mIHRo
ZSB3aW5lIG9mDQp0aGUgd3JhdGggb2YgR29kLCB3aGljaCBpcyBwb3VyZWQgb3V0IGZ1bGwgc3Ry
ZW5ndGggaW50byB0aGUgY3VwIG9mDQpIaXMgaW5kaWduYXRpb24uIEhlIHNoYWxsIGJlIHRvcm1l
bnRlZCB3aXRoIGZpcmUgYW5kIGJyaW1zdG9uZSBpbiB0aGUNCnByZXNlbmNlIG9mIHRoZSBob2x5
IGFuZ2VscyBhbmQgaW4gdGhlIHByZXNlbmNlIG9mIHRoZSBMYW1iLiBBbmQgdGhlDQpzbW9rZSBv
ZiB0aGVpciB0b3JtZW50IGFzY2VuZHMgZm9yZXZlciBhbmQgZXZlcjsgYW5kIHRoZXkgaGF2ZSBu
byByZXN0DQpkYXkgb3IgbmlnaHQsIHdobyB3b3JzaGlwIHRoZSBiZWFzdCBhbmQgaGlzIGltYWdl
LCBhbmQgd2hvZXZlcg0KcmVjZWl2ZXMgdGhlIG1hcmsgb2YgaGlzIG5hbWUiIChSZXZlbGF0aW9u
IDE0OjktMTEpLg0KV2UgYXJlIHJlc2lkaW5nIGluIHZlcnkgcHJvcGhldGljIHRpbWVzIHdpdGgg
bWFqb3IgQmlibGljYWwNCnByb3BoZWNpZXMgYmVpbmcgZnVsZmlsbGVkLg0KV2hlbiBEb25hbGQg
VHJ1bXAgYWNrbm93bGVkZ2VkIEplcnVzYWxlbSBhcyBjYXBpdGFsIG9mIElzcmFlbCBpbg0KRGVj
ZW1iZXIgb2YgMjAxNywgdGhpcyB3YXMgYSBsYXJnZSBzdGVwIHRvIGJyaW5nIGFib3V0IHRoZSBU
aGlyZA0KVGVtcGxlIGZvcmV0b2xkIHdpdGhpbiB0aGUgd29yZHMgb2YgR29kLg0KR29kJ3MgaG9s
eSBXb3JkJ3MgdGVsbHMgdXMgdGhhdCB0aGUgQW50aWNocmlzdCB3aWxsIHNlYXQgaGltc2VsZiBp
bg0KdGhpcyB0ZW1wbGU6DQoiLi4uYW5kIHRoZSBtYW4gb2Ygc2luIGlzIHJldmVhbGVkLCB0aGUg
c29uIG9mIHBlcmRpdGlvbiwgd2hvIG9wcG9zZXMNCmFuZCBleGFsdHMgaGltc2VsZiBhYm92ZSBh
bGwgdGhhdCBpcyBjYWxsZWQgR29kIG9yIHRoYXQgaXMgd29yc2hpcGVkLA0Kc28gdGhhdCBoZSBz
aXRzIGFzIEdvZCBpbiB0aGUgdGVtcGxlIG9mIEdvZCwgc2hvd2luZyBoaW1zZWxmIHRoYXQgaGUN
CmlzIEdvZCIgKDIgVGhlc3NhbG9uaWFucyAyOjMtNCkuDQpXaXRoaW4gdGhlIElzbGFtaWMgZmFp
dGgsIHRoZXkgaGF2ZSBhIGZpZ3VyZSBrbm93biBhcyB0aGUgTWFoZGksDQprbm93biBhcyB0aGVp
ciBtZXNzaWFoIHdobyB0aGV5J3JlIHdhaXRpbmcgdG8gYXBwZWFyLiBUaGVyZSBhcmUNCnZhcmlv
dXMgdGVzdGltb25pZXMgZnJvbSBwZW9wbGUgb24gbGluZSB3aG8gaW1hZ2luZSB0aGlzIG1hbiBz
aGFsbCBiZQ0KQmFyYWNrIE9iYW1hIHdobyBpcyB0byBiZSB0aGUgYmlibGljYWwgQW50aWNocmlz
dC4gSSBwZXJzb25hbGx5IGhhdmUNCmhhZCBzdHJhbmdlIGRyZWFtcyBjb25jZXJuaW5nIE9iYW1h
LiBIZSBjYW1lIG9uIHN0YWdlIGRlY2xhcmluZw0KaGltc2VsZiB0byBiZSBhIENocmlzdGlhbiB3
aXRoIG5vIGFmZmlsaWF0aW9uIHRvIHRoZSBNdXNsaW0gZmFpdGgsDQpob3dldmVyIGl0IHdhcyBs
YXRlciByZXZlYWxlZCBieSBoaXMgb3duIGZhbWlseSBtZW1iZXJzIHRoYXQgaGUgaW5kZWVkDQpp
cyBhIGZhaXRoZnVsIE11c2xpbS4NClNvIHdoYXQncyBpbiB0aGUgbmFtZT8gVGhlIG1lYW5pbmcg
b2Ygc29tZW9uZXMgbmFtZSBjYW4gc2F5IGEgbG90DQphYm91dCBhIHBlcnNvbi4gR29kIHRocm91
Z2hvdXQgaGlzdG9yeSBoYXMgZ2l2ZW4gbmFtZXMgdG8gcGVvcGxlIHRoYXQNCmhhdmUgYSBzcGVj
aWZpYyBtZWFuaW5nIHRpZWQgdG8gdGhlaXIgbGl2ZXMuIEhvdyBhYm91dCB0aGUgbmFtZSBCYXJh
Y2sNCk9iYW1hPyBMZXQgdXMgdGFrZSBhIGxvb2sgYXQgd2hhdCBtYXkgYmUgaGlkaW5nIGJlbmVh
dGggdGhlIHN1cmZhY2UuLi4NCkplc3VzIHNheXMsICJBbmQgSGUgc2FpZCB0byB0aGVtLCAnSSBz
YXcgU2F0YW4gZmFsbCBsaWtlIGxpZ2h0bmluZw0KZnJvbSBoZWF2ZW4nIiAoTHVrZSAxMDoxOCku
DQpJbiBIZWJyZXcsIHRoZSB3b3JkICJCYXJhY2siIG1lYW5zICJsaWdodGluZyIsIGFuZCB0aGUg
dXNlIG9mICJCYW1hIg0KKFN0cm9uZ3MgSGVicmV3IHdvcmQgMTExNikgaXMgdXNlZCB0byBtZWFu
IHRoZSAiaGVpZ2h0cyIgb2YgaGVhdmVuLg0KwqANClRoZSBmb2xsb3dpbmcgZGF5IGFmdGVyIHRo
ZSBlbGVjdGlvbiBvZiBCYXJhY2sgT2JhbWEgKDExLzA0LzA4KSwgdGhlDQp3aW5uaW5nIHBpY2sg
dGhyZWUgbG90dG8gbnVtYmVycyBpbiBJbGxpbm9pcyAoT2JhbWHigJlzIGRvbWVzdGljDQpzdGF0
ZSkgZm9yIDExLzUvMDggd2VyZSA2NjYuDQpPYmFtYSB3YXMgYSBVLlMuIHNlbmF0b3IgZm9yIEls
bGlub2lzLCBhbmQgaGlzIHppcCBjb2RlIHdhcyA2MDYwNi4NClJlZ2FyZGxlc3MsIHdob2V2ZXIg
c2VhdHMgaGltc2VsZiBpbiB0aGUgVGhpcmQgVGVtcGxlIGluIEplcnVzYWxlbSwNCmRlY2xhcmlu
ZyBoaW1zZWxmIHRvIGJlIEdvZCBJUyBUSEUgQU5USUNIUklTVC4gTkVWRVIgRk9SR0VULg0KV2h5
IGRvIHdlIG5lZWQgSmVzdXMgQ2hyaXN0Pw0KImZvciBhbGwgaGF2ZSBzaW5uZWQgYW5kIGZhbGwg
c2hvcnQgb2YgdGhlIGdsb3J5IG9mIEdvZCIgKFJvbWFucw0KMjoyMykuDQoiRm9yIHRoZSB3YWdl
cyBvZiBzaW4gaXMgZGVhdGgsIGJ1dCB0aGUgZ2lmdCBvZiBHb2QgaXMgZXRlcm5hbCBsaWZlDQpp
biBDaHJpc3QgSmVzdXMgb3VyIExvcmQiIChSb21hbnMgNjoyMykuDQpPdXIgb3duIHdvcmtzIGNh
bm5vdCBzYXZlIG91ciBzb3Vscy4gSWYgd2Ugc3RlcCBiZWZvcmUgYSBqdWRnZSwgYmVpbmcNCnJl
c3BvbnNpYmxlIG9mIGEgY3JpbWUsIHRoZSBqdWRnZSBpcyBub3QgZ29pbmcgdG8ganVkZ2UgdXMg
YnkgdGhlIGdvb2QNCnRoYXQgd2UgaGF2ZSBhY2NvbXBsaXNoZWQsIGJ1dCByYXRoZXIgdGhlIGNy
aW1lcyB3ZSBoYXZlIGNvbW1pdHRlZC4gSWYNCndlIGFzIGZhbGxlbiBodW1hbml0eSwgY3JlYXRl
ZCBpbiBHb2QncyBpbWFnZSwgcG9zZSB0aGlzIHR5cGUgb2YNCmp1c3RpY2UsIGhvdyBtdWNoIG1v
cmUgYSBwZXJmZWN0LCByaWdodGVvdXMsIGFuZCBIb2x5IGNyZWF0b3I/DQpHb2QgaGFzIGRlbGl2
ZXJlZCB0byB1cyBIaXMgZXRoaWNhbCByZWd1bGF0aW9uJ3MgYnkgdGhlIHRlbg0KY29tbWFuZG1l
bnRzIGhhbmRlZCB0byBNb3NlcyBhdCBNdC4gU2lhbmkuIFRoZXNlIGxhd3Mgd2VyZSBub3QgZ2l2
ZW4NCnNvIHdlIGNhbiBiZSBqdXN0aWZpZWQsIGhvd2V2ZXIgc28gdGhhdCB3ZSBtYXkgc2VlIHRo
ZSBuZWVkIGZvciB0aGUNCnNhdmlvci4gVGhleSBhcmUgdGhlIG1pcnJvciBvZiBHb2QncyBjaGFy
YWN0ZXIgb2Ygd2hhdCBIZSBoYXMgcHV0IGluDQplYWNoIG9mIHVzLCB3aXRoIG91ciBjb25zY2lv
dXMgYmVhcmluZyB3aXRuZXNzIHRoYXQgd2Uga25vdyB0aGF0IGl0IGlzDQphbiBvZmZlbnNlIHRv
IHN0ZWFsLCBsaWUsIGRpc2hvbm9yIG91ciBtb3RoZXIgYW5kIGZhdGhlciwgYW5kIHNvDQpmb3J0
aC4NCldlIGNhbiBhdHRlbXB0IHRvIG9ic2VydmUgYWxsIHRoZSBldGhpY2FsIGd1aWRlbGluZXMg
b2YgdGhlIHRlbg0KY29tbWFuZG1lbnRzLCBob3dldmVyIHdlJ2xsIGluIG5vIHdheSBjYXRjaCB1
cCB0byB0aGVtIHRvIGJlIGp1c3RpZmllZA0KYmVmb3JlIGEgSG9seSBHb2QuIFRoZSBzYW1lIHdv
cmQgb2YgdGhlIGxhdyByZWNlaXZlZCBieSBNb3NlcyBiZWNhbWUNCmZsZXNoIG92ZXIgMjAwMCB5
ZWFycyBhZ28gd2l0aGluIHRoZSBib2R5IG9mIEplc3VzIENocmlzdC4gSGUgY2FtZSB0bw0KYmUg
b3VyIGp1c3RpZmljYXRpb24gYnkgcGVyZmVjdGx5IGZ1bGZpbGxpbmcgdGhlIGNvbW1hbmRtZW50
cyBvZiBHb2QsDQpsaXZpbmcgYSBzaW5sZXNzIGxpZmUgdGhhdCBzb2xlbHkgR29kIG1heSBmdWxm
aWxsLg0KVGhlIGRpc3RhbmNlIGJldHdlZW4gdXMgYW5kIHRoZSBsYXcgb2YgR29kIGNhbiBpbiBu
byB3YXkgYmUNCnJlY29uY2lsZWQgYnkgb3VyIG93biBtZXJpdCwgaG93ZXZlciB0aGUgYXJtIG9m
IEplc3VzIGlzIHN0cmV0Y2hlZCBvdXQNCmJ5IHRoZSBncmFjZSBhbmQgbWVyY3kgb2YgR29kLiBB
bmQgaWYgd2UncmUgdG8gZ3JhYiBvbiwgYnkgZmFpdGggaW4NCkhpbSwgSGUnbGwgcHVsbCB1cyBm
b3J3YXJkIGJlaW5nIHRoZSBvbmUgdG8ganVzdGlmeSB1cy4gQXMgd2l0aGluIHRoZQ0KY291cnQg
b2YgbGF3LCBpZiBzb21lYm9keSBzdGVwcyBpbiBhbmQgcGF5cyB5b3VyIGZpbmUsIGRlc3BpdGUg
dGhlDQpmYWN0IHRoYXQgeW91J3JlIGd1aWx0eSwgdGhlIGp1ZGdlIGNhbiBkbyB3aGF0IGlzIGxl
Z2FsIGFuZCBqdXN0IGFuZA0KYWxsb3cgeW91IHRvIGdvIGZyZWUuIFRoaXMgaXMgd2hhdCBKZXN1
cyBkaWQgYWxtb3N0IDIwMDAgeWVhcnMgaW4gdGhlDQpwYXN0IG9uIHRoZSBjcm9zcy4gSXQgd2Fz
IGEgbGVnYWwgdHJhbnNhY3Rpb24gYmVpbmcgZnVsZmlsbGVkIHdpdGhpbg0KdGhlIHNwaXJpdHVh
bCByZWFsbSBieSB0aGUgc2hlZGRpbmcgb2YgSGlzIGJsb29kLCB3aXRoIEhpcyBsYXN0IHdvcmRz
DQpiZWluZywgIi4uLkl0IGlzIGZpbmlzaGVkIS4uLiIgKEpvaG4gMTk6MzApLg0KTm93IHdoeSBk
aWQgSmVzdXMgaGF2ZSB0byBkaWUgZm9yIHVzPw0KRHVlIHRvIHRoZSBmYWN0IHRoYXQgR29kIGlz
IEhvbHkgYW5kIGp1c3QsIHRoZSB3cmF0aCB0aGF0IGJlbG9uZ3MgdG8NCnVzIGNvdWxkIG5vdCBi
ZSBicnVzaGVkIGF3YXkuIFRocm91Z2ggdGhlIHBlcmZlY3QgcmlnaHRlb3VzbmVzcyBhbmQNCmp1
c3RpY2Ugb2YgR29kJ3MgY2hhcmFjdGVyLCBpdCBvdWdodCB0byBiZSByZWNvbmNpbGVkLCBpdCBv
dWdodCB0byBiZQ0KcXVlbmNoZWQgYW5kIHNhdGlzZmllZC4NCkZvciBHb2QgdGFrZXMgbm8gcGxl
YXN1cmUgaW4gdGhlIGR5aW5nIG9mIHRoZSB3aWNrZWQgKEV6ZWtpZWwgMTg6MjMpLg0KVGhpcyBp
cyB3aHkgaW4gSXNhaWFoIGNoYXB0ZXIgNTMsIHRoZSBwbGFjZSBpdCBzcGVha3Mgb2YgdGhlIGNv
bWluZw0KTWVzc2lhaCBhbmQgSGlzIHNvdWwgYmVpbmcgYSBzYWNyaWZpY2UgZm9yIG91ciBzaW5z
LCB3aHkgaXQgc2F5cyBpdA0KcGxlYXNlZCBHb2QgdG8gY3J1c2ggSGlzIG9ubHkgYmVnb3R0ZW4g
U29uLg0KVGhpcyBpcyBiZWNhdXNlIHRoZSB3cmF0aCB0aGF0IHdlIGRlc2VydmUgd2FzIGp1c3Rp
ZmllZCBieSBiZWluZw0KcG91cmVkIG91dCB1cG9uIEhpcyBTb24uIEZvciBpZiBpdCB3ZXJlIHRv
IGJlIHBvdXJlZCBvdXQgb24gdXMgd2hvJ3ZlDQplYXJuZWQgaXQsIHdlIHdvdWxkIGFsbCBkaWUg
YW5kIGdvIHRvIGhlbGwuIEdvZCBjcmVhdGVkIGEgbWVhbnMgb2YNCmVzY2FwZSBieSBwb3VyaW5n
IGl0IG91dCBvbiBIaXMgU29uIHdobydzIHNvdWwgY291bGQgbm90IGJlIGxlZnQgaW4NCkhhZGVz
LCBob3dldmVyIHdhcyByYWlzZWQgYW5kIHNlYXRlZCBvbiB0aGUgcmlnaHQgaGFuZCBvZiBHb2Qg
aW4NCnBvd2VyLg0KU28gbm93IG9uY2Ugd2UgcHV0IG9uIHRoZSBMb3JkIEplc3VzIENocmlzdCAo
Um9tYW5zIDEzOjE0KSwgR29kIG5vDQpsb25nZXIgbG9va3MgYXQgdGhlIGluZGl2aWR1YWwgd2hv
IGRlc2VydmVzIEhpcyB3cmF0aCwgYnV0IHJhdGhlciB0aGUNCmdsb3Jpb3VzIGltYWdlIG9mIEhp
cyBwZXJmZWN0IFNvbiBkd2VsbGluZyB3aXRoaW4sIGp1c3RpZnlpbmcgdXMgYXMgaWYNCndlIGFj
cXVpcmVkIHRoZSB3cmF0aCB3ZSBkZXNlcnZlLCBtYWtpbmcgYSBtZWFucyBvZiBlc2NhcGUgZnJv
bSB0aGUNCmN1cnNlIG9mIGRlYXRoLg0KTm93IHdoYXQgd2Ugb3VnaHQgdG8gZG8gaXMgcmVwZW50
IGFuZCB0cnVzdCBpbiB0aGUgc2F2aW9yLCBjb25mZXNzaW5nDQphbmQgZm9yc2FraW5nIG91ciBz
aW5zLiBUaGlzIGlzIG5vdCBqdXN0IGEgaGVhZCBrbm93bGVkZ2Ugb2YgYmVsaWV2aW5nDQppbiBK
ZXN1cywgaW5zdGVhZCByZWNlaXZpbmcgSGlzIHdvcmRzLCB0YWtpbmcgdGhlbSB0byBoZWFydC4g
V2hlcmUgd2UNCm5vIGxvbmdlciBsaXZlIHRvIGV4ZXJjaXNlIHNpbiwgaG93ZXZlciB0dXJuIGF3
YXkgZnJvbSBvdXIgc2lucyBhbmQNCmV4ZXJjaXNlIHJpZ2h0ZW91c25lc3M6DQoiRG8geW91IG5v
dCBrbm93IHRoYXQgdGhlIHVucmlnaHRlb3VzIHdpbGwgbm90IGluaGVyaXQgdGhlIGtpbmdkb20g
b2YNCkdvZD8gRG8gbm90IGJlIGRlY2VpdmVkLiBOZWl0aGVyIGZvcm5pY2F0b3JzLCBub3IgaWRv
bGF0ZXJzLCBub3INCmFkdWx0ZXJlcnMsIG5vciBob21vc2V4dWFscywgbm9yIHNvZG9taXRlcywg
bm9yIHRoaWV2ZXMsIG5vciBjb3ZldG91cywNCm5vciBkcnVua2FyZHMsIG5vciByZXZpbGVycywg
bm9yIGV4dG9ydGlvbmVycyB3aWxsIGluaGVyaXQgdGhlIGtpbmdkb20NCm9mIEdvZC4gQW5kIHN1
Y2ggd2VyZSBzb21lIG9mIHlvdS4gQnV0IHlvdSB3ZXJlIHdhc2hlZCwgYnV0IHlvdSB3ZXJlDQpz
YW5jdGlmaWVkLCBidXQgeW91IHdlcmUganVzdGlmaWVkIGluIHRoZSBuYW1lIG9mIHRoZSBMb3Jk
IEplc3VzIGFuZA0KYnkgdGhlIFNwaXJpdCBvZiBvdXIgR29kIiAoMSBDb3JpbnRoaWFucyA2Ojkt
MTEpLg0KQnkgZG9pbmcgc28gd2UgbWF5IGJlY29tZSB0cmFuc2Zvcm1lZCBpbnRvIHRoZSBpbWFn
ZSBvZiBHb2QgYnkgZmFpdGgNCmluIEhpcyBTb24gQ2hyaXN0IEplc3VzIFdobyBpcyB3aWxsaW5n
IHRvIG9mZmVyIHRoZSBIb2x5IFNwaXJpdCB0bw0Kd2hvZXZlciBhc2sgb2YgSGltOg0KIk1vc3Qg
YXNzdXJlZGx5LCBJIChKZXN1cykgc2F5IHRvIHlvdSwgdW5sZXNzIG9uZSBpcyBib3JuIG9mIHdh
dGVyDQphbmQgdGhlIFNwaXJpdCwgaGUgY2Fubm90IGVudGVyIHRoZSBraW5nZG9tIG9mIEdvZC4g
VGhhdCB3aGljaCBpcyBib3JuDQpvZiB0aGUgZmxlc2ggaXMgZmxlc2gsIGFuZCB0aGF0IHdoaWNo
IGlzIGJvcm4gb2YgdGhlIFNwaXJpdCBpcyBzcGlyaXQuDQpEbyBub3QgbWFydmVsIHRoYXQgSSBz
YWlkIHRvIHlvdSwgJ1lvdSBtdXN0IGJlIGJvcm4gYWdhaW4uJyAoSm9obg0KMzo1LTYpLg0KIkJ1
dCB5b3UgYXJlIG5vdCBpbiB0aGUgZmxlc2ggYnV0IGluIHRoZSBTcGlyaXQsIGlmIGluZGVlZCB0
aGUgU3Bpcml0DQpvZiBHb2QgZHdlbGxzIGluIHlvdS4gTm93IGlmIGFueW9uZSBkb2VzIG5vdCBo
YXZlIHRoZSBTcGlyaXQgb2YNCkNocmlzdCwgaGUgaXMgbm90IEhpcyIgKFJvbWFucyA4OjkpLg0K
V2hhdCBhcmUgeW91IHdhaXRpbmcgZm9yPyBPdXIgaGVhdmVubHkgRmF0aGVyIG9ubHkgd2lzaGVz
IHRoZSBiZXN0DQpmb3IgdXMgYWxsLCByZXN0b3JpbmcgYWxsIHRoZSBwaWVjZXMgdGhpcyB3b3Js
ZCBoYXMgc3RvbGVuIGZyb20gdXMuDQpUaGlzIGlzIHdoYXQgaXQgbWVhbnMgdG8gYmUgImhvbHki
LiBUbyBiZSBtYWRlIHdob2xlLg0KSGUgaXMgcmVhZHkgdG8gbGlzdGVuIHRvIHlvdS4gVGhhdCBH
b2QgZ2l2ZW4gdG9uZ3VlIHRvIHNwZWFrDQpsYW5ndWFnZSwgYnkgbWVhbnMgb2YgZmFpdGgsIHBy
YXkgdG8gSGltLCBhc2sgSGltIHRvIGZvcmdpdmUgeW91IGJ5DQpjb25mZXNzaW5nIHlvdXIgc2lu
cyBhbmQgYmUgd2lsbGluZyB0byBmb3JzYWtlIHRoZW07IHRoYXQgeW91IHJlY2VpdmUNCnRoZSBz
YWNyaWZpY2Ugb2YgSGlzIFNvbiBKZXN1cyBvbiB0aGUgY3Jvc3MsIGFuZCB0aGF0IHlvdSBuZWVk
IEhpcw0KSG9seSBTcGlyaXQgcmVzaWRpbmcgaW5zaWRlIHlvdSB0cmFuc2Zvcm1pbmcgeW91IGlu
dG8gYSBjaGlsZCBvZiBHb2QuDQpKZXN1cyBzYXlzLCAiYnV0IHdob2V2ZXIgZHJpbmtzIG9mIHRo
ZSB3YXRlciB0aGF0IEkgc2hhbGwgZ2l2ZSBoaW0NCih0aGUgSG9seSBTcGlyaXQpIHdpbGwgbmV2
ZXIgdGhpcnN0LiBCdXQgdGhlIHdhdGVyIHRoYXQgSSBzaGFsbCBnaXZlDQpoaW0gd2lsbCBiZWNv
bWUgaW4gaGltIGEgZm91bnRhaW4gb2Ygd2F0ZXIgc3ByaW5naW5nIHVwIGludG8NCmV2ZXJsYXN0
aW5nIGxpZmUuIg0KRGlkIHlvdSByZWFsaXplIHRoYXQgSmVzdXMgc3Bva2UgbW9yZSBhYm91dCBo
ZWxsIHRoYW4gYW55IG9uZSBpbg0KR29kJ3MgaG9seSB3b3JkLCBldmVuIG1vcmUgdGhhbiBIZSBz
cG9rZSBhYm91dCBoZWF2ZW4/ISBGb3IgdGhpcyB2ZXJ5DQpyZWFzb24gSGUgY2FtZSB0byBkaWUg
Zm9yIHVzLCB0byByZXNjdWUgdXMgZnJvbSB0aGlzIHBsYWNlIHRoYXQgd2UNCmRlc2VydmUuDQrC
oA0KSGUgZGVzY3JpYmVzIGhlbGwgYXMgYSByZWFsIHBsYWNlIHdoZXJlLA0KIlRoZWlyIHdvcm0g
ZG9lcyBub3QgZGllDQpBbmQgdGhlIGZpcmUgaXMgbm90IHF1ZW5jaGVkIiAoTWFyayA5OjQ0KS4N
CkFuZCB3aGVyZSwNCiJUaGVyZSB3aWxsIGJlIHdlZXBpbmcgYW5kIGduYXNoaW5nIG9mIHRlZXRo
Li4uIiAoTHVrZSAxMzoyOCkuDQpKZXN1cyB0ZWxscyB1cyB3aG8gdG8gZmVhciwNCiJBbmQgZG8g
bm90IGZlYXIgdGhvc2Ugd2hvIGtpbGwgdGhlIGJvZHkgYnV0IGNhbm5vdCBraWxsIHRoZSBzb3Vs
Lg0KQnV0IHJhdGhlciBmZWFyIEhpbSB3aG8gaXMgYWJsZSB0byBkZXN0cm95IGJvdGggc291bCBh
bmQgYm9keSBpbiBoZWxsIg0KKE1hdHRoZXcgMTA6MjgpLg0KIk5vdyBJIHNhdyBhIG5ldyBoZWF2
ZW4gYW5kIGEgbmV3IGVhcnRoLCBmb3IgdGhlIGZpcnN0IGhlYXZlbiBhbmQgdGhlDQpmaXJzdCBl
YXJ0aCBoYWQgcGFzc2VkIGF3YXkuIEFsc28gdGhlcmUgd2FzIG5vIG1vcmUgc2VhLiBUaGVuIEks
IEpvaG4sDQpzYXcgdGhlIGhvbHkgY2l0eSwgTmV3IEplcnVzYWxlbSwgY29taW5nIGRvd24gb3V0
IG9mIGhlYXZlbiBmcm9tIEdvZCwNCnByZXBhcmVkIGFzIGEgYnJpZGUgYWRvcm5lZCBmb3IgaGVy
IGh1c2JhbmQuIEFuZCBJIGhlYXJkIGEgbG91ZCB2b2ljZQ0KZnJvbSBoZWF2ZW4gc2F5aW5nLCAn
QmVob2xkLCB0aGUgdGFiZXJuYWNsZSBvZiBHb2QgaXMgd2l0aCBtZW4sIGFuZCBIZQ0Kd2lsbCBk
d2VsbCB3aXRoIHRoZW0sIGFuZCB0aGV5IHNoYWxsIGJlIEhpcyBwZW9wbGUuIEdvZCBIaW1zZWxm
IHdpbGwNCmJlIHdpdGggdGhlbSBhbmQgYmUgdGhlaXIgR29kLiBBbmQgR29kIHdpbGwgd2lwZSBh
d2F5IGV2ZXJ5IHRlYXIgZnJvbQ0KdGhlaXIgZXllczsgdGhlcmUgc2hhbGwgYmUgbm8gbW9yZSBk
ZWF0aCwgbm9yIHNvcnJvdywgbm9yIGNyeWluZy4NClRoZXJlIHNoYWxsIGJlIG5vIG1vcmUgcGFp
biwgZm9yIHRoZSBmb3JtZXIgdGhpbmdzIGhhdmUgcGFzc2VkIGF3YXkuJw0KVGhlbiBIZSB3aG8g
c2F0IG9uIHRoZSB0aHJvbmUgc2FpZCwgJ0JlaG9sZCwgSSBtYWtlIGFsbCB0aGluZ3MgbmV3LicN
CkFuZCBIZSBzYWlkIHRvIG1lLCAnV3JpdGUsIGZvciB0aGVzZSB3b3JkcyBhcmUgdHJ1ZSBhbmQg
ZmFpdGhmdWwuJw0KQW5kIEhlIHNhaWQgdG8gbWUsICdJdCBpcyBkb25lISBJIGFtIHRoZSBBbHBo
YSBhbmQgdGhlIE9tZWdhLCB0aGUNCkJlZ2lubmluZyBhbmQgdGhlIEVuZC4gSSB3aWxsIGdpdmUg
b2YgdGhlIGZvdW50YWluIG9mIHRoZSB3YXRlciBvZg0KbGlmZSBmcmVlbHkgdG8gaGltIHdobyB0
aGlyc3RzLiBIZSB3aG8gb3ZlcmNvbWVzIHNoYWxsIGluaGVyaXQgYWxsDQp0aGluZ3MsIGFuZCBJ
IHdpbGwgYmUgaGlzIEdvZCBhbmQgaGUgc2hhbGwgYmUgTXkgc29uLiBCdXQgdGhlDQpjb3dhcmRs
eSwgdW5iZWxpZXZpbmcsIGFib21pbmFibGUsIG11cmRlcmVycywgc2V4dWFsbHkgaW1tb3JhbCwN
CnNvcmNlcmVycywgaWRvbGF0ZXJzLCBhbmQgYWxsIGxpYXJzIHNoYWxsIGhhdmUgdGhlaXIgcGFy
dCBpbiB0aGUgbGFrZQ0Kd2hpY2ggYnVybnMgd2l0aCBmaXJlIGFuZCBicmltc3RvbmUsIHdoaWNo
IGlzIHRoZSBzZWNvbmQgZGVhdGguJyINCihSZXZlbGF0aW9uIDIxOjEtOCkuDQpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1udmRpbW0gbWFpbGlu
ZyBsaXN0IC0tIGxpbnV4LW52ZGltbUBsaXN0cy4wMS5vcmcKVG8gdW5zdWJzY3JpYmUgc2VuZCBh
biBlbWFpbCB0byBsaW51eC1udmRpbW0tbGVhdmVAbGlzdHMuMDEub3JnCg==
