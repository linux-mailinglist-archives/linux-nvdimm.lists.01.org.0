Return-Path: <linux-nvdimm-bounces@lists.01.org>
X-Original-To: lists+linux-nvdimm@lfdr.de
Delivered-To: lists+linux-nvdimm@lfdr.de
Received: from ml01.01.org (ml01.01.org [IPv6:2001:19d0:306:5::1])
	by mail.lfdr.de (Postfix) with ESMTPS id A6DAF212F37
	for <lists+linux-nvdimm@lfdr.de>; Fri,  3 Jul 2020 00:01:43 +0200 (CEST)
Received: from ml01.vlan13.01.org (localhost [IPv6:::1])
	by ml01.01.org (Postfix) with ESMTP id A05EC111E7BFB;
	Thu,  2 Jul 2020 15:01:40 -0700 (PDT)
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=93.157.62.211; helo=mail.k12-schools.org; envelope-from=grace_j@k12-schools.org; receiver=<UNKNOWN> 
Received: from mail.k12-schools.org (akuraschools.org [93.157.62.211])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ml01.01.org (Postfix) with ESMTPS id E1BD9111E7BFA
	for <linux-nvdimm@lists.01.org>; Thu,  2 Jul 2020 15:01:36 -0700 (PDT)
Received: from k12-schools.org (server.localhost.com [93.157.62.211])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(Client did not present a certificate)
	by mail.k12-schools.org (Postfix) with ESMTPSA id C75791280FC7
	for <linux-nvdimm@lists.01.org>; Thu,  2 Jul 2020 22:01:34 +0000 (UTC)
DKIM-Filter: OpenDKIM Filter v2.11.0 mail.k12-schools.org C75791280FC7
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=k12-schools.org;
	s=default; t=1593727294;
	bh=h80SAtP+CfslArbOn1lGmGLkHZAL7oT4i9AAE5n51Jw=;
	h=Date:Subject:From:Reply-To:To:List-Unsubscribe:List-Id:From;
	b=m+uvnRi154FC+ninCadEdRT6x0PSzENkp2E+jGlDjn1fbLt88V4czk3PEG4kYxQWU
	 GLDULshFfB02guIM1wqfend+XXbZvhiIO12pRaW9MtFB/ct+z7QAerwJoboQW8Hi+0
	 r77Zvge27OhwCqp9d6MjFiDGIMg3Mee5RKeK15IdZrnKEWUtGk6VXKkkJSklSERfS/
	 JI7ExTA18uPX+bceBin1qZgLNDjezgLsS/w0LXrqUCm2/d+VJ5ZvCr7iH1vpDR/BE8
	 3UsgspOmxzpwW4ZkbWaqA17l5qZvBxxJR/GC+Q9ArL1FVzht+2OG1EJ7oePFOH87yn
	 EVewLaAesbiJw==
Message-ID: <fabcb59ba3770644d392842e7a739e6b@k12-schools.org>
Date: Thu, 02 Jul 2020 22:01:34 +0000
Subject: Could you please look this over?
From: Grace Johnson <grace_j@k12-schools.org>
To: "linux-nvdimm@lists.01.org" <linux-nvdimm@lists.01.org>
MIME-Version: 1.0
X-Sender: grace_j@k12-schools.org
X-Report-Abuse: Please report abuse for this campaign here:
 http://k12-schools.org/index.php/campaigns/br46796k4v9d8/report-abuse/ob8434eev2e4c/th483gbgxh7d7
X-Receiver: linux-nvdimm@lists.01.org
X-Dxrq-Tracking-Did: 0
X-Dxrq-Subscriber-Uid: th483gbgxh7d7
X-Dxrq-Mailer: SwiftMailer - 5.4.x
X-Dxrq-EBS: http://k12-schools.org/index.php/lists/block-address
X-Dxrq-Delivery-Sid: 1
X-Dxrq-Customer-Uid: jx662oy7sw6ae
X-Dxrq-Customer-Gid: 0
X-Dxrq-Campaign-Uid: br46796k4v9d8
Precedence: bulk
Feedback-ID: br46796k4v9d8:th483gbgxh7d7:ob8434eev2e4c:jx662oy7sw6ae
Message-ID-Hash: 654Y2LOKBLH27WHHK5F2TNWME67PEPY5
X-Message-ID-Hash: 654Y2LOKBLH27WHHK5F2TNWME67PEPY5
X-MailFrom: grace_j@k12-schools.org
X-Mailman-Rule-Hits: nonmember-moderation
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation
X-Content-Filtered-By: Mailman/MimeDel 3.1.1
X-Mailman-Version: 3.1.1
Reply-To: Grace Johnson <grace_j@k12-schools.org>
List-Id: "Linux-nvdimm developer list." <linux-nvdimm.lists.01.org>
Archived-At: <https://lists.01.org/hyperkitty/list/linux-nvdimm@lists.01.org/message/654Y2LOKBLH27WHHK5F2TNWME67PEPY5/>
List-Archive: <https://lists.01.org/hyperkitty/list/linux-nvdimm@lists.01.org/>
List-Help: <mailto:linux-nvdimm-request@lists.01.org?subject=help>
List-Post: <mailto:linux-nvdimm@lists.01.org>
List-Subscribe: <mailto:linux-nvdimm-join@lists.01.org>
List-Unsubscribe: <mailto:linux-nvdimm-leave@lists.01.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

SGksDQpJIGhvcGUgeW91LCB5b3VyIGZhbWlseSwgYW5kIGZyaWVuZHMgc3RheSBzYWZlIGJ5IHRh
a2luZyB0aGUgcHJvcGVyDQpwcmVjdWF0aW9ucyBhcyB3ZSBlbnRlciBpbiB0byBjb25mdXNpbmcg
YW5kIHRyb3VibGluZyB0aW1lcyBhcyB3ZQ0Kd2F0Y2ggYSB3b3JsZHdpZGUgcGFuZGVtaWMgdW5m
b2xkIHdpdGggdGhpcyBDb3JvbmF2aXJ1cy4NCkNvdWxkIHRoZXJlIGJlIHNvbWV0aGluZyBtb3Jl
IGRlZXBlciBnb2luZyBvbiB3aXRoIGFsbCBvZiB0aGlzPyBDb3VsZA0Kd2UgYmUgc2VlaW5nIHRo
ZSBzaWducyBvZiB0aGUgdGltZXMgdW5mb2xkaW5nPyBDb3VsZCB0aGlzIGJlIGEgZG9vciBvZg0K
b3Bwb3J0dW5pdHkgZm9yIHBlb3BsZSB0byBvcGVuIHRoZWlyIGhlYXJ0cyB0byB3aGF0IEdvZCBo
YXMgdG8gc2F5Pw0KSmVzdXMgc2F5cyB0byBIaXMgZGlzY2lwbGVzIGNvbmNlcm5pbmcgdGhlIGxh
c3QgZGF5cywgIkZvciBuYXRpb24NCndpbGwgcmlzZSBhZ2FpbnN0IG5hdGlvbiwgYW5kIGtpbmdk
b20gYWdhaW5zdCBraW5nZG9tLiBBbmQgdGhlcmUgd2lsbA0KYmUgZmFtaW5lcywgcGVzdGlsZW5j
ZXMsIGFuZCBlYXJ0aHF1YWtlcyBpbiB2YXJpb3VzIHBsYWNlcy4gQWxsIHRoZXNlDQphcmUgdGhl
IGJlZ2lubmluZyBvZiBzb3Jyb3dzIiAoTWF0dGhldyAyNDo3LTgpLg0KV2UgaGF2ZSBiZWVuIHNl
ZWluZyBhIHJlY29yZCBzZXR0aW5nIGFtb3VudCBvZiBFYXJ0aHF1YWtlcyB3b3JsZC13aWRlDQpp
biB2YXJpb3VzIHBsYWNlcywgaW5jdWRpbmcgcGxhY2VzIHRoYXQgbm9ybWFsbHkgZG8gbm90IHJl
Y2VpdmUNCkVhcnRocXVha2VzLiBOb3cgd2l0aCB0aGlzIENvcm9uYXZpcnVzLCBjb3VsZCB0aGlz
IGJlIG9uZSBvZiB0aGUNCnBlc3RpbGVuY2VzIHRoYXQgd2lsbCBmYWxsIHVwb24gdXMgaW4gdGhl
IGxhc3QgZGF5cyBhcyBzcG9rZW4gYnkNCkplc3VzPyBXaGVyZSB3aWxsIGl0IGxlYXZlIG91ciBl
Y29ub215PyBEaWQgeW91IGtub3cgdGhlIEJpYmxlIHRlYWNoZXMNCnRoZXJlIHdpbGwgYmUgYSBj
YXNobGVzcyBzb2NpZXR5IGluIHRoZSBsYXN0IGRheXM/IFdpbGwgdGhpcyBiZSBhDQptYWpvciBz
dGVwcGluZyBzdG9uZSBpbiBicmluZ2luZyB0aGF0IGFib3V0Pw0KWW91IG1heSBoYXZlIHNlZW4g
b24gTkJDIG5ld3MganVzdCBtb250aHMgYWdvIGNvbmNlcm5pbmcgdGhlDQppbXBsYW50YWJsZSBS
RklEIG1pY3JvY2hpcCB0aGF0IGlzIGdhaW5pbmcgZ3JvdW5kIGluIFN3ZWRlbiB3aGVyZQ0KcGVv
cGxlIGFyZSBnZXR0aW5nIHRoaXMgbWljcm9jaGlwIGltcGxhbnRlZCBpbiB0aGVpciBoYW5kLg0K
V291bGQgeW91IGFsbG93IGEgbWljcm9jaGlwIHRvIGJlIHBsYWNlZCBpbnNpZGUgeW91ciBib2R5
IHRoYXQgaGFzDQp0aGUgYWJpbGl0eSB0byB0cmFjayB3aGVyZSB5b3UgZ28gYW5kIHdoYXQgeW91
IGRvPyBIb3cgYWJvdXQgaWYgeW91DQprbmV3IGl0IG1hdGNoZWQgcGVyZmVjdGx5IHdpdGggQmli
bGUgcHJvcGhlY3kgd2hlcmUgR29kIHdhcm5zIHVzIG5vdA0KdG8gdGFrZSBpdCBkdXJpbmcgdGhl
IGZ1dHVyZSByZWlnbiBvZiB0aGUgQW50aWNocmlzdCwgb3RoZXJ3aXNlIHdlDQp3aWxsIHJlY2Vp
dmUgdGhlIGZ1bGxuZXNzIG9mIEhpcyB3cmF0aCAoUmV2ZWxhdGlvbiAxNDo5LTExKT8NClRoaXMg
bWF5IGJlIHRoZSBtb3N0IGltcG9yYW50IG1lc3NhZ2UgeW91IHdpbGwgcmVhZCBpbiB0aGVzZQ0K
dGltZXMuLi5wbGVhc2UgZG8gbm90IGlnbm9yZSB0aGlzISBUaGlzIG1lc3NzYWdlIHJldmVhbHMg
d2hhdCB0aGUgTWFyaw0Kb2YgdGhlIEJlYXN0IGlzLCBhbmQgdGhlIG1lYW5pbmcgYmVoaW5kIGNv
dW50aW5nIGEgbnVtYmVyIHBlb3BsZSBoYXZlDQpiZWVuIHBvbmRlcmluZyBmb3IgY2VudHVyaWVz
LCA2NjYuIFRoaXMgaXMgdHJ1bHkgYSBtZXNzYWdlIGZyb20gR29kIQ0KSW4gdGhlIFJldmVsYXRp
b24gb2YgSmVzdXMgQ2hyaXN0IGdpdmVuIHRvIHRoZSBhcG9zdGxlIEpvaG4sIHdlIHJlYWQ6DQou
Li4iSGUgKHRoZSBmYWxzZSBwcm9waGV0IHdobyBkZWNlaXZlcyBtYW55IGJ5IGhpcyBtaXJhY2xl
cykgZm9yY2VzDQpldmVyeW9uZeKAlHRoZSBzbWFsbCBhbmQgZ3JlYXQsIHRoZSByaWNoIGFuZCBw
b29yLCB0aGUgZnJlZSBhbmQNCnNsYXZlc+KAlHRvIGhhdmUgYSBtYXJrIHB1dCBvbiB0aGVpciBy
aWdodCBoYW5kIG9yIG9uIHRoZWlyIGZvcmVoZWFkLg0KSGUgd2lsbCBub3QgYWxsb3cgYW55b25l
IHRvIG1ha2UgYSBwdXJjaGFzZSBvciBzZWxsIGFueXRoaW5nIHVubGVzcw0KdGhlIHBlcnNvbiBo
YXMgdGhlIG1hcmsgd2l0aCB0aGUgYmVhc3TigJlzIG5hbWUgb3IgdGhlIG51bWJlciBvZiBpdHMN
Cm5hbWUuIFRoaXMgY2FsbHMgZm9yIHdpc2RvbS4gTGV0IHRoZSBvbmUgd2hvIHVuZGVyc3RhbmRz
IGNhbGN1bGF0ZSB0aGUNCmJlYXN04oCZcyBudW1iZXIsIGZvciBpdOKAmXMgYSBodW1hbiBiZWlu
Z+KAmXMgbnVtYmVyLiBJdHMgbnVtYmVyIGlzDQpzaXggaHVuZHJlZCBzaXh0eS1zaXgiIChSZXZl
bGF0aW9uIDEzOjE2LTE4IENFQikuLi4uDQpTcGVha2luZyBvZiB0aGUgZmluYWwgZGF5cywgdGhp
cyBjb3VsZCBvbmx5IGJlIHNwZWFraW5nIG9mIGEgY2FzaGxlc3MNCm1vbmV5IHNvY2lldHksIHdo
aWNoIGhhcyB5ZXQgdG8gb2NjdXIsIGJ1dCB3ZSBhcmUgbWFraW5nIG91ciB3YXkNCnRvd2FyZHMu
IFdoeSBzbz8gT3RoZXJ3aXNlIHdlIGNvdWxkIHN0aWxsIGJ1eSBvciBzZWxsIHdpdGhvdXQNCmFj
Y2VwdGluZyB0aGUgbWFyayBvZiB0aGUgYmVhc3QgYW1vbmcgZWFjaCBvdGhlciBpZiBwaHlzaWNh
bCBjdXJyZW5jeQ0Kd2FzIHN0aWxsIGFyb3VuZC4gSXQgbG9naWNhbGx5IGRlZHVjZXMgaXRzZWxm
IHRvIHRoaXMgcmVhc29uLg0KVGhpcyBtYXJrIGNhbiBub3QgYmUgYW55dGhpbmcgc3Bpcml0dWFs
LCBiZWNhdXNlIHRoZSB3b3JkIHJlZmVyZW5jZXMNCnR3byBkaWZmZXJlbnQgcGh5c2ljYWwgcGxh
Y2VzLiBJZiBpdCB3ZXJlIHRvIGJlIHNwaXJpdHVhbCwgdGhlIHRleHQNCndvdWxkIG9ubHkgY29u
Y2x1ZGUgb25lIHBsYWNlLg0KSGVyZSBpcyB3aGVyZSBpdCByZWFsbHkgc3RhcnRzIHRvIGNvbWUg
dG9nZXRoZXIuIEl0IGlzIHNob2NraW5nIGhvdw0KYWNjdXJhdGUgdGhlIEJpYmxlIGlzIGNvbmNl
cm5pbmcgdGhlIFJGSUQgbWljcm9jaGlwLiBUaGVzZSBhcmUgbm90ZXMNCmZyb20gYSBtYW4gbmFt
ZWQgQ2FybCBTYW5kZXJzIHdobyB3b3JrZWQgd2l0aCBhIHRlYW0gb2YgZW5naW5lZXJzIHRvDQpo
ZWxwIGRldmVsb3AgdGhpcyBtaWNyb2NoaXAgaW4gdGhlIGxhdGUgMTk2MCdzLg0KQ2FybCBTYW5k
ZXJzIGF0dGVuZGVkIDE3IE5ldyBXb3JsZCBPcmRlciBjb25mZXJlbmNlcyB3aXRoIGhlYWRzIG9m
DQpzdGF0ZSBvZmZpY2lhbHMgc3VjaCBhcyBIZW5yeSBLaXNzaW5nZXIgYW5kIEJvYiBHYXRlcyBv
ZiB0aGUgQy5JLkEuIHRvDQpkaXNjdXNzIHRoZWlyIGFnZW5kYSBvbiBob3cgdG8gYnJpbmcgZm9y
dGggdGhpcyBvbmUtd29ybGQgc3lzdGVtLiBUaGUNClVTIGdvdmVybm1lbnQgY29tbWlzc2lvbmVk
IE1yLiBTYW5kZXJzIHRvIGludmVudCBhIG1pY3JvY2hpcCBmb3INCmlkZW50aWZ5aW5nIGFuZCBj
b250cm9sbGluZyB0aGUgcGVvcGxlcyBvZiB0aGUgd29ybGQtYSBtaWNyb2NoaXAgdGhhdA0KY291
bGQgYmUgcGxhY2VkIGJlbmVhdGggdGhlIHNraW4gd2l0aCBhIGh5cG9kZXJtaWMgbmVlZGxlIChh
IGZhc3QsDQpjb252ZW5pZW50IHN5c3RlbSB0aGF0IHdvdWxkIGJlIGdyYWR1YWxseSBhY2NlcHRl
ZCBieSBzb2NpZXR5KS4NCk1yLiBTYW5kZXJzLCBhbG9uZyB3aXRoIGEgZ3JvdXAgb2YgZW5naW5l
ZXJzIHdpdGggaGltLCB3aXRoIFUuUy4NCmdyYW50IG1vbmllcyBzdXBwbGllZCBieSBVUyB0YXgg
ZG9sbGFycywgdG9vayBvbiB0aGlzIHRhc2sgYW5kDQpwcm9kdWNlZCBhIFJGSUQgY2hpcCB0aGF0
IGlzIHBvd2VyZWQgYnkgYSBsaXRoaXVtIGJhdHRlcnksDQpyZWNoYXJnZWFibGUgd2l0aCB0aGUg
YWlkIG9mIHRoZSB0ZW1wZXJhdHVyZSBjaGFuZ2VzIGluIG91ciBza2luLg0KV2l0aG91dCBoYXZp
bmcgdW5kZXJzdGFuZGluZyBvZiB0aGUgaG9seSBCaWJsZSAoU2FuZGVycyB3YXMgbm90IGENCmZv
bGxvd2VyIG9mIENocmlzdCBhdCB0aGUgdGltZSksIHRoZXNlIG1lbiBzcGVudA0Kb25lLWFuZC1h
LWhhbGYtbWlsbGlvbiBkb2xsYXJzIGdhdGhlcmluZyBpbmZvcm1hdGlvbiBvbiB0aGUgYmVzdCBh
bmQNCm1vc3QgY29udmVuaWVudCBsb2NhdGlvbiB0byBoYXZlIHRoZSBSRklEIGNoaXAgaW5zZXJ0
ZWQgYmVsb3cgdGhlDQpza2luLg0KVGhlc2UgcmVzZWFyY2hlcnMgb2JzZXJ2ZWQgdGhhdCB0aGUg
Zm9yZWhlYWQgYW5kIHRoZSBiYWNrIG9mIHRoZSBoYW5kDQoodGhlIHR3byBzcG90cyBSZXZlbGF0
aW9uIHNheXMgdGhlIG1hcmsgd2lsbCBiZSByZWNlaXZlZCkgYXJlIG5vdCBqdXN0DQp0aGUgbW9z
dCBjb252ZW5pZW50IGxvY2F0aW9ucywgYnV0IGFyZSBhZGRpdGlvbmFsbHkgdGhlIG9ubHkgdmlh
YmxlDQpzcG90cyBmb3IgcmFwaWQsIGNvbnNpc3RlbnQgdGVtcGVyYXR1cmUgY2hhbmdlcyB3aXRo
aW4gdGhlIHNraW4gdG8NCnJlY2hhcmdlIHRoZSBsaXRoaXVtIGJhdHRlcnkuIFRoZSBSRklEIGNo
aXAgaXMgYXJvdW5kIHNldmVuDQptaWxsaW1ldGVycyBpbiBsZW5ndGgsIC43NSBtaWxsaW1ldGVy
cyBpbiBkaWFtZXRlciwgYWJvdXQgdGhlDQpkaW1lbnNpb25zIG9mIGEgZ3JhaW4gb2YgcmljZS4g
SXQncyBjYXBhYmxlIG9mIHN0b3JpbmcgbWFueSBwYWdlcyBvZg0KaW5mb3JtYXRpb24gYWJvdXQg
eW91LiBBbGwgb2YgeW91ciBzdGFuZGFyZCBoaXN0b3J5LCB3b3JrIHJlY29yZHMsDQpjcmltZSBy
ZWNvcmRzLCBoZWFsdGggcmVjb3JkcywgYW5kIGZpbmFuY2lhbCByZWNvcmRzIGNhbiBiZSBzYXZl
ZCBvbg0KdGhpcyBjaGlwLg0KTXIuIFNhbmRlcnMgYmVsaWV2ZXMgdGhhdCB0aGlzIFJGSUQgY2hp
cCwgd2hpY2ggaGUgcmVncmV0ZnVsbHkgaGVscGVkDQpwcm9kdWNlLCBpcyB0aGUgImJlYXN0J3Mg
bWFyayIgZGVzY3JpYmVkIGluIFJldmVsYXRpb24gMTM6MTYtMTguIFRoZQ0KR3JlZWsgd29yZCBm
b3IgIm1hcmsiIGlzICJjaGFyYWdtYSwiIHdoaWNoIG1lYW5zIGEgInNjcmF0Y2ggb3INCmV0Y2hp
bmcuIiBBZGRpdGlvbmFsbHkgaXQncyBmYXNjaW5hdGluZyB0byBvYnNlcnZlIHRoYXQgdGhlIG51
bWJlciA2NjYNCmlzIGEgd29yZCBpbiB0aGUgb3JpZ2luYWwgR3JlZWsuIFRoaXMgd29yZCBiZWlu
ZyAiY2hpIHhpIHN0aWdtYSwiIHdpdGgNCnRoZSBsYXN0IHBhcnQsICJzdGlnbWEsIiBhZGRpdGlv
bmFsbHkgbWVhbmluZyAidG8gc3RpY2sgb3IgcHJpY2suIENhcmwNCmJlbGlldmVzIHRoYXQgaXMg
cmVmZXJyaW5nIHRvIHRoZSB1c2Ugb2YgYSBoeXBvZGVybWljIG5lZWRsZSBiZWluZw0KcG9rZWQg
aW4gYSBwZXJzb24gdG8gaW5zZXJ0IHRoZSBSRklEIGNoaXAuIg0KQnJvdGhlciBTYW5kZXJzIGFz
a2VkIGEgQm9zdG9uIE1lZGljYWwgQ2VudGVyIGRvY3RvciB3aGF0IHdvdWxkDQpoYXBwZW4gaWYg
dGhlIGxpdGhpdW0gY29udGFpbmVkIHdpdGhpbiB0aGUgUkZJRCBtaWNyb2NoaXAgbGVha2VkIGlu
dG8NCnRoZSBib2R5LiBUaGUgZG9jdG9yIHJlc3BvbmRlZCB0aGF0IGlmIHRoZSBtaWNyb2NoaXAg
YnJva2UgaW5zaWRlIGENCmh1bWFuIGJvZHksIHRoZSBsaXRoaXVtIHdvdWxkIGNhdXNlIGEgc2V2
ZXJlIGFuZCBwYWluZnVsIHdvdW5kIGZpbGxlZA0Kd2l0aCBwdXMuIFRoaXMgaXMgd2hhdCB0aGUg
Ym9vayBvZiBSZXZlbGF0aW9uIGhhcyB0byBzYXk6DQoiU28gdGhlIGZpcnN0IGFuZ2VsIHBvdXJl
ZCBoaXMgYm93bCBvbiB0aGUgZWFydGgsIGFuZCBhIG5hc3R5IGFuZA0KdGVycmlibGUgc29yZSBh
cHBlYXJlZCBvbiB0aGUgcGVvcGxlIHdobyBoYWQgdGhlIGJlYXN04oCZcyBtYXJrIGFuZA0Kd29y
c2hpcHBlZCBpdHMgaW1hZ2UiIChSZXZlbGF0aW9uIDE2OjIgQ0VCKS4NClRIRSBISURERU4gTUVB
TklORyBCRUhJTkQgVEhFIE5VTUJFUiA2NjYgUkVWRUFMRUQhDQpHb2QncyB3b3JkIHRlbGxzIHVz
IHRoYXQgd2Ugd2lsbCBub3QgYmUgYWJsZSB0byBidXkgb3Igc2VsbCB3aXRob3V0DQpyZWNlaXZp
bmcgdGhlIG1hcmsgb2YgdGhlIGJlYXN0LCBvciB0aGUgbnVtYmVyIG9mIGl0cyBuYW1lLiBXaGlj
aCBpcw0KdGhlIG51bWJlciA2NjYuIFNjcmlwdHVyZSB0ZWxscyB1cyB0byBjYWxjdWxhdGUgdGhl
IG51bWJlciA2NjYuIEhvdyBkbw0Kd2UgY2FsY3VsYXRlIDY2Nj8NCkhlcmUgaXMgd2hlcmUgaXQg
Z2V0cyByZWFsbHkgaW50ZXJlc3RpbmcuIENhbGN1bGF0aW5nIHRoZSBudW1iZXIgNjY2DQpoYXMg
YmVlbiBsb25nIGRlYmF0ZWQgdGhyb3VnaG91dCB0aGUgaGlzdG9yeSBvZiB0aGUgd29ybGQsIGJ1
dCBoYXMNCmZpbmFsbHkgYmVlbiB1bnZlaWxlZCBpbiB0aGVzZSBsYXN0IHRpbWVzIGJ5IHRoZSBI
b2x5IFNwaXJpdC4gV2hhdA0KeW91J2xsIHNlZSBjb25maXJtcyBpdHNlbGYgd2l0aCB0aGUgd29y
ZCBvZiBHb2QgdGhlIHJlYWwgbWVhbmluZyB0bw0KY2FsY3VsYXRlIDY2Ni4NClRocm91Z2hvdXQg
dGhlIEJpYmxlLCBHb2QgdXNlcyB0aGUgbnVtYmVyIDMgZm9yIGNvbmZpcm1hdGlvbi4gQmVsb3cN
CmFyZSBhIGZldyBleGFtcGxlczoNCi4uLiJiZWNhdXNlIHRocmVlIGFyZSB3aG8gYXJlIHRlc3Rp
ZnlpbmcgaW4gdGhlIGhlYXZlbiwgdGhlIEZhdGhlciwNCnRoZSBXb3JkLCBhbmQgdGhlIEhvbHkg
U3Bpcml0LCBhbmQgdGhlc2UgLS0gdGhlIHRocmVlIC0tIGFyZSBvbmUiICgxDQpKb2huIDU6NyBZ
TFQpLi4uDQouLi4iVGhhdCBIZSB3YXMgYnVyaWVkLCB0aGF0IEhlIGFyb3NlIG9uIHRoZSB0aGly
ZCBkYXkgYXMgdGhlDQpTY3JpcHR1cmVzIGZvcmV0b2xkIiAoMSBDb3JpbnRoaWFucyAxNTo0IEFN
UEMpLi4uDQouLi4iSG9seSwgaG9seSwgaG9seSBpcyB0aGUgTG9yZCBHb2Qgb2YgSG9zdHMsIHdo
byB3YXMgYW5kIHdobyBpcyBhbmQNCndobyBpcyB0byBjb21lISIgKFJldmVsYXRpb24gNDo4IFRM
VikuLi4NCldoYXQncyBmYXNjaW5hdGluZyBpcyB0aGUgdGhlIG1hcmsgb2YgdGhlIGJlYXN0IGlz
IGV4cGxhaW5lZCBpbg0KZGV0YWlsIGluIDMgc2VwYXJhdGUgdmVyc2VzIChSZXZlbGF0aW9uIDEz
OjE2LDE3LDE4KSwgYW5kIGV2ZXJ5IHZlcnNlDQpsaXN0cyAzIGRpc3RpbmN0IGV4YW1wbGVzIG9m
IHRoZSBnaXZlbiB0b3BpYy4gVGhlIGZpbmFsIDMgYmVpbmcgdGhlDQpudW1iZXIgNiBiZWluZyB1
c2VkIDMgdGltZXMgaW4gYSByb3cuIEhlcmUgaXMgYSBrZXkgcG9pbnQgdG8NCmRlY2lwaGVyaW5n
IGhvdyB0byBjYWxjdWxhdGUgdGhlIG51bWJlciA2NjYuDQpXaGF0IGRvZXMgaXQgaW1wbHkgdG8g
Y2FsY3VsYXRlIHRoZSBudW1iZXIgb2YgdGhlIGJlYXN0LCA2NjY/IEl0DQptZWFucyB0byBhZGQg
dXAuIEhvdyBtYXkgd2UgYWRkIHVwIDY2Nj8gS2VlcCBpbiBtaW5kIG15IGVhcmxpZXIgcG9pbnQN
CmFib3V0IEdvZCBjb25maXJtaW5nIGluIDMncy4gU28gbG9naWNhbGx5LCB3aGF0IHdvdWxkIGJl
IHRoZSBtb3N0DQpyZWFzb25hYmxlIHdheSB0byBhZGQgdXAgdGhlIG51bWJlciA2NjY/IFRvIGFk
ZCBpdCB1cCBlcXVhbGx5IGluIDMncw0KYmFzZWQgb2ZmIHRoZSBudW1iZXIuIEl0IGlzIG5vdCBy
YXRpb25hbCB0byBjb3VudCBpdCBlcXVhbGx5IGFzDQo2MDArNjArNiwgdGhpcyB3b3VsZCBhbHNv
IHRha2UgdXMgYmFjayB0byB0aGUgc3RhcnQuIFdlIGFyZSBub3QgYWJsZQ0KdG8gYWRkIGl0IGFz
IDYwMCs2MDArNjAwLCBvciA2MCs2MCs2MCwgZm9yIHRoZXJlIGFyZSBubyB6ZXJvZXMgaW4NCmJl
dHdlZW4gb3IgYXQgdGhlIGVuZCBvZiA2NjYuIFRoZSBvbmx5IHJlYXNvbmFibGUgZXhwbGFuYXRp
b24gd2UgYXJlDQpsZWZ0IHdpdGggaXMgNis2KzY9MTguIFdoYXQncyBmYXNjaW5hdGluZyBpcyB0
aGF0IHRoZSB2ZXJzZSB0aGF0IHRlbGxzDQp1cyB0byBjb3VudCB0aGUgbnVtYmVyIG9mIHRoZSBi
ZWFzdCBpdHNlbGYgaXMgdmVyc2UgMTgsIGJlaW5nIHRoZQ0KdGhpcmQgdmVyc2Ugb3V0IG9mIDMg
dmVyc2VzIHRoYXQgZGVzY3JpYmUgdGhlIG1hcmsgb2YgdGhlIGJlYXN0LiBXaGF0DQppcyAxOCBk
aXZpZGVkIGJ5IDM/IDYuIFNvIDN4Nj0xOCwgb3IgNis2KzY9MTguDQpZZXQgYW5vdGhlciBmYXNj
aW5hdGluZyBwb2ludCBpcyB0aGF0IHRoZSB0d28gb3RoZXIgY29tYmluYXRpb25zDQoobWFraW5n
IGEgY29tYmluZWQgdG90YWwgb2YgMyBwb3NzaWJsZSBjb21iaW5hdGlvbnMpIGZvciBwbGFjaW5n
IGENCnBsdXMgc3ltYm9sIGluIGJldHdlZW4gdGhlIDYncyBhcmUgNjYrNj03MiwgYW5kIDYrNjY9
NzIuIENvdW50IHVwIGJvdGgNCjcyJ3MgdG9nZXRoZXIgYW5kIHlvdSBnZXQgMTQ0LiBXaHkgdGhl
IG51bWJlciAxNDQgaXMgaW50ZXJlc3RpbmcgaXMNCmJlY2F1c2UgdGhlIHZlcnNlIGZvbGxvd2lu
ZyBSZXZlbGF0aW9uIDEzOjE4IGlzIHRoZSBmaXJzdCB0aW1lIGluIHRoZQ0KSG9seSBCaWJsZSB3
aGVyZSB0aGUgMTQ0LDAwMCBhcmUgYmVpbmcgZGVzY3JpYmVkIGluIGRldGFpbDoNCi4uLiJUaGVu
IEkgbG9va2VkLCBhbmQgYmVob2xkLCBhIExhbWIgc3RhbmRpbmcgb24gTW91bnQgWmlvbiwgYW5k
DQp3aXRoIEhpbSBvbmUgaHVuZHJlZCBhbmQgZm9ydHktZm91ciB0aG91c2FuZCwgaGF2aW5nIEhp
cyBGYXRoZXLigJlzDQpuYW1lIHdyaXR0ZW4gb24gdGhlaXIgZm9yZWhlYWRzLi4uIiAoUmV2ZWxh
dGlvbiAxNDoxIE5LSlYpLi4uDQpJZiB3ZSBhZGQgdXAgYWxsIDMgdmFsdWVzIGJ5IGNvdW50aW5n
IDY2NiBieSBtb3ZpbmcgdGhlIHBsdXMgc3ltYm9sDQphcm91bmQgaW4gYWxsIDMgcG9zc2libGUg
Y29tYmluYXRpb25zLCBpdCB3b3VsZCBiZSA3Mis3MisxOD0xNjIuDQpXaGF0J3MgZmFzY2luYXRp
bmcgY29uY2VybmluZyB0aGUgbnVtYmVyIDE2MiwgaXMsIGlmIHlvdSBkaXZpZGUNCjE0NCwwMDAg
YnkgMTYyLCB5b3UgZ2V0IDg4OC4gVGhlIG5hbWUgZm9yIEplc3VzIGluIEdyZWVrIGdlbWF0cmlh
DQpjYWxjdWxhdGVzIHRvIDg4OC4gVGhlIE5ldyBUZXN0YW1lbnQgd2FzIGluaXRpYWxseSB3cml0
dGVuIGluIEdyZWVrLg0KUmV2ZWxhdGlvbiAxNDoxIG5vdCBvbmx5IG1lbnRpb25zIHRoZSAxNDQs
MDAwLCBidXQgYWRkaXRpb25hbGx5IHRoZQ0KTGFtYiB3aG8gaXMgdGhlIFNvbiBvZiBHb2QsIEpl
c3VzLg0KV2hhdCBpcyBmYXNjaW5hdGluZyBjb25jZXJuaW5nIHRoZSB0aGUgbnVtYmVyIGZvciBK
ZXN1cywgODg4LCBpcyB0aGF0DQppZiB5b3UgYXBwbHkgdGhpcyBzYW1lIHN5c3RlbSwgeW91IGdl
dCA4KzgrOD0yNC4gV2h5IHRoZSBudW1iZXIgMjQ/DQpSZXZlbGF0aW9uIGNoYXB0ZXIgNCB0ZWxs
cyB1cyB0aGVyZSBhcmUgMjQgZWxkZXJzIHNlYXRlZCBhcm91bmQgdGhlDQp0aHJvbmUgb2YgR29k
LiBUaGlzIGlzIHRoZSBzYW1lIHRocm9uZSB3aGVyZSBKZXN1cyBzaXRzOg0KIkltbWVkaWF0ZWx5
IEkgd2FzIGluIHRoZSBTcGlyaXQ7IGFuZCBiZWhvbGQsIGEgdGhyb25lIHNldCBpbiBoZWF2ZW4s
DQphbmQgT25lIHNhdCBvbiB0aGUgdGhyb25lLiBBbmQgSGUgd2hvIHNhdCB0aGVyZSB3YXMgbGlr
ZSBhIGphc3BlciBhbmQNCmEgc2FyZGl1cyBzdG9uZSBpbiBhcHBlYXJhbmNlOyBhbmQgdGhlcmUg
d2FzIGEgcmFpbmJvdyBhcm91bmQgdGhlDQp0aHJvbmUsIGluIGFwcGVhcmFuY2UgbGlrZSBhbiBl
bWVyYWxkLiBBcm91bmQgdGhlIHRocm9uZSB3ZXJlDQp0d2VudHktZm91ciB0aHJvbmVzLCBhbmQg
b24gdGhlIHRocm9uZXMgSSBzYXcgdHdlbnR5LWZvdXIgZWxkZXJzDQpzaXR0aW5nLCBjbG90aGVk
IGluIHdoaXRlIHJvYmVzOyBhbmQgdGhleSBoYWQgY3Jvd25zIG9mIGdvbGQgb24gdGhlaXINCmhl
YWRzIiAoUmV2ZWxhdGlvbiA0OjItNCkuDQpOb3cgaWYgeW91IHRha2UgOCs4Kzg9MjQsIGFuZCA4
Kzg4PTk2LCBhbmQgODgrOD05NiwgeW91IGdldA0KMjQrOTYrOTY9MjE2LiBUYWtlIDE0NCwwMDAg
ZGl2aWRlZCBieSAyMTYgYW5kIHlvdSBnZXQgNjY2LiBLZWVwIGluDQptaW5kIHRoYXQgdGhpcyB3
YXMgdGhlIHNhbWUgZXhhY3QgbWV0aG9kIHRvIGdldCB0aGUgbnVtYmVyIDE2MiBvdXQgb2YNCmNv
dW50aW5nIDY2NiB0aGF0IGJyb3VnaHQgZm9ydGggdGhlIG51bWJlciA4ODggd2hlbiBkaXZpZGlu
ZyAxNDQsMDAwDQpieSAxNjIuIEl0J3MgcGVycGV0dWFsLg0KV2l0aCB1dGlsaXppbmcgdGhlIHNh
bWUgZm9ybXVsYSBvZiBjb3VudGluZyBieSBhZGRpbmcgdGhlIHBsdXMgc3ltYm9sDQppbiBiZXR3
ZWVuIHRoZSBudW1iZXJzLCB3aHkgZG8gYWxsIHRoZXNlIG51bWJlcnMgcmVsYXRlIGluIHN1Y2gg
YQ0KbWFubmVyPw0KVGhlIGJvb2sgb2YgUmV2ZWxhdGlvbiBjb250YWlucyB0aGUgdXNlIG9mIHRo
ZSBudW1iZXIgNyBpbiB2YXJpb3VzDQpmb3Jtcy4gRm9yIGluc3RhbmNlIDcgc2VhbHMsIDcgdHJ1
bXBldHMsIGFuZCA3IGJvd2xzLiBXaGF0IGlzDQppbnRlcmVzdGluZyBhYm91dCB0aGUgbnVtYmVy
IDM3ICh0aHJlZSBzZXZlbnMpIGlzIGlmIGlmIHlvdSBkaXZpZGUgYW55DQpudW1iZXIgdGhhdCBj
b250YWlucyB0aGUgc2FtZSBzaW5nbGUgZGlnaXQgdGhyZWUgdGltZXMgaW4gYSByb3csIHN1Y2gN
CmFzIDExMSB0byA5OTksIGl0IGNvbWVzIG91dCB0byB0aGUgdmFsdWUgb2YgaWYgeW91IHdlcmUg
dG8gYWRkIGFsbA0KdGhyZWUgbnVtYmVycyB1cC4gRm9yIGV4YW1wbGUgODg4IGRpdmlkZWQgYnkg
MzcgZXF1YWxzIDI0LiBTbw0KOCs4Kzg9MjQuIE9yIDY2NiBkaXZpZGVkIGJ5IDM3IGVxdWFscyAx
OC4gU28gNis2KzY9MTguIENvdWxkIHRoaXMgYmUNCmFub3RoZXIgd2F5IG9mIEdvZCdzIHdvcmQg
Y29uZmlybWluZyBpdHNlbGYgdGhhdCB0aGUgbXlzdGVyeSBiZWhpbmQNCmNhbGN1bGF0aW5nIHRo
ZSBudW1iZXIgNjY2IGluZGVlZCBpcyAxOD8NCkFub3RoZXIgZmFzY2luYXRpbmcgZmFjdG9yIHRv
IG9ic2VydmUgaXMgdGhhdCBpZiB5b3UgYWRkIHVwIGFsbCBvZg0KdGhlIG51bWJlcnMgZnJvbSAx
IHRvIDM2ICgxKzIrMy4uLiszNiksIGl0IHRvdGFscyA2NjYuIFRoZSBudW1iZXIgMzYsDQphcyBp
biB0aHJlZSBzaXhlcz8gTWF5IHRoaXMgYmUgYSBoaW50IHRoYXQgd2UgbXVzdCBhZGQgdXAgdGhy
ZWUgc2l4ZXMNCmluc3RlYWQgb2YgcGVyY2VpdmluZyB0aGUgbnVtYmVyIGFzIHNpeC1odW5kcmVk
IHNpeHR5IHNpeD8NClNvIHdoYXQgbWF5IHRoaXMgaW1wbHk/IFdlIGFsbCBrbm93IGluIHRoaXMg
d29ybGQgd2UgYXJlIGlkZW50aWZpZWQNCmJ5IG51bWJlcnMgaW4gbnVtZXJvdXMgZm9ybXMuIEZy
b20gb3VyIGJpcnRoIGNlcnRpZmljYXRlcyB0byBzb2NpYWwNCnNlY3VyaXR5LCBhbHNvIHdpdGgg
b3VyIGRyaXZlcnMgbGljZW5zZSwgYmVpbmcgaWRlbnRpZmllZCBmb3VuZGVkIG9uIGENCnN5c3Rl
bSBvZiBydWxlciBzaGlwLiBTbyBpdCdzIHBvc3NpYmxlIHRoYXQgdGhpcyBSRklEIG1pY3JvY2hp
cCB3aWxsDQppbmNsdWRlIGEgYnJhbmQgbmV3IGlkZW50aWZpY2F0aW9uIHRoYXQgaGFzIGEgY29t
cGxldGUgdG90YWwgb2YgMTgNCmNoYXJhY3RlcnMuDQoiaGVyZSB0aGUgd2lzZG9tIGlzLCB0aGUg
b25lIGhhdmluZyB0aGUgbWluZCBsZXQgaGltIGNhbGN1bGF0ZSB0aGUNCm51bWJlciBvZiB0aGUg
d2lsZCBiZWFzdCwgbnVtYmVyIGZvciAib2YgaHVtYW4iIGl0IGlzLCBhbmQgdGhlIG51bWJlcg0K
b2YgaXQgNjY2IiAoUmV2ZWxhdGlvbiAxMzoxLCBHcmVlayBUcmFuc2xhdGlvbikuDQpUaGUgR3Jl
ZWsgd29yZCAiYW50aHLFjXBvcyIgYmVpbmcgdXNlZCBpbiB2ZXJzZSAxOCB3aGVyZSBpdCBzYXlz
ICJvZg0KaHVtYW4iIGlzIHRoZSBHcmVlayBzdHJvbmdzIGNvbmNvcmRhbmNlIEc0NDQuIFRoZSBm
aXJzdCB0d28NCmRlZmluaXRpb25zIG9mIHRoZSB3b3JkIGFyZSAiYSBodW1hbiBiZWluZywgd2hl
dGhlciBtYWxlIG9yIGZlbWFsZSIsDQphbmQsICJnZW5lcmljYWxseSwgdG8gaW5jbHVkZSBhbGwg
aHVtYW4gaW5kaXZpZHVhbHMiLiBDb3VsZCB0aGUgbnVtYmVyDQpvZiB0aGUgYmVhc3QgYXBwbHkg
dG8gYWxsIG1hbmtpbmQ/DQpJbiB0aGUgR3JlZWsgKHRoZSBOZXcgVGVzdGFtZW50IHdhcyBvcmln
aW5hbGx5IHdyaXR0ZW4gaW4gdGhlIEdyZWVrDQpsYW5ndWFnZSksIGFuZCBvdGhlciB0cmFuc2xh
dGlvbnMsIHlvdSB3aWxsIG5vdGljZSB0aGUgYmVhc3QgaXMNCmRlc2NyaWJlZCBhcyBhbiAiaXQi
LCBpbnN0ZWFkIG9mICJoaW0iLiBUaGUgcmVhc29uIEknbSBtYWtpbmcgdGhpcw0KcG9pbnQgaXMg
YmVjYXVzZSB3aGVuIGEgdHJhbnNsYXRpb24gc2F5cyAiSGlzIG51bWJlciBpcyA2NjYiLCB0aGlz
DQp3b3VsZCBpbXBseSBhIHNpbmd1bGFyIHBlcnNvbiwgdGhlIEFudGljaHJpc3QuIEJ1dCBieSBz
YXlpbmcgInRoZQ0KbnVtYmVyIG9mIGl0IDY2NiIsIGltcGxpZXMgdGhhdCBpdCBpcyBvZiB0aGUg
YmVhc3Qgc3lzdGVtIGFzIGEgd2hvbGUuDQpXZSBjYW4ga25vdyB0aGUgbnVtYmVyIG9mIHRoZSBi
ZWFzdCBjYW5ub3QgYmUgdG8gaWRlbnRpZnkgcHJvZHVjdHMNCihsaWtlIGEgbmV3IGJhcmNvZGUp
IHRvIGJ1eSBvciBzZWxsIGJlY2F1c2Ugc2NyaXB0dXJlIHNheXMgd2UgY2Fubm90DQpidXkgb3Ig
c2VsbCB3aXRob3V0IHRoZSBudW1iZXIgb2YgdGhlIGJlYXN0LiBXaGF0IGFtIEkgZ2V0dGluZyBh
dD8NClRoZXJlIHdpbGwgYmUgaW5zdGFuY2VzIHdoZXJlIHlvdSBjb3VsZCBidXkgc29tZXRoaW5n
IHNvbWVvbmUgbWFkZQ0KdGhlbXNlbHZlcyBhbmQgaXQgd291bGRuJ3QgaGF2ZSBhIHN0b3JlIGJy
YW5kZWQgaWRlbnRpZmljYXRpb24gb24gaXQuDQpCdXQgZm9yIHRoaXMgbnVtYmVyIHRvIGJlIGlu
IG91ciBjaGlwcywgdGhhdCBpcyB3aGVyZSBpdCBtdXN0IGJlIHRvDQpjb25jbHVkZSB1bHRpbWF0
ZWx5IHRoYXQgd2UgY2Fubm90IGJ1eSBvciBzZWxsIHdpdGhvdXQgaGF2aW5nIHRoZQ0KbnVtYmVy
IG9mIHRoZSBiZWFzdC4gQXMgcHJldmlvdXNseSBtZW50aW9uZWQgaW4gUmV2ZWxhdGlvbiAxMzox
OCwgdGhlDQpudW1iZXIgb2YgdGhlIGJlYXN0ICg2KzYrNj0xOCkgaXMgYSAiaHVtYW4gbnVtYmVy
IiwgZGVmaW5pdGlvbg0KImdlbmVyaWNhbGx5LCB0byBpbmNsdWRlIGFsbCBodW1hbiBpbmRpdmlk
dWFscyIuDQpNYXkgdGhpcyBiZSB0aGUgbmFtZSBvZiB0aGUgYmVhc3QsIHRoZSBudW1iZXIgb2Yg
aXRzIG5hbWU/IFRoZQ0Kb25lLXdvcmxkIGJlYXN0IHN5c3RlbSB3aGljaCBpcyBpZGVudGlmaWVk
IGJ5IDE4IGNoYXJhY3RlcnM/IFRoaXMgbWF5DQptYXRjaCB0aGUgc2NyaXB0dXJlcyB0aGF0IHNw
ZWFrcyBvZiBhIG1hcmsgdGhhdCB3ZSBtdXN0IGhhdmUgdG8gYnV5IG9yDQpzZWxsIGluIG91ciBy
aWdodC1oYW5kIG9yIGZvcmVoZWFkLCBhbmQgdGhhdCBpdCBhZGRpdGlvbmFsbHkgY2Fycmllcw0K
dGhlIG51bWJlciBvZiB0aGUgYmVhc3QsIGluIHRoZSBjb3Vyc2Ugb2YgYSBmdXR1cmUgY2FzaGxl
c3MgbW9uZXkNCnNvY2lldHkuDQpHbyB0bzogNjY2LXJldmVhbGVkLnZvaWNlLXRydXRoLmNvbQ0K
aHR0cDovL2sxMi1zY2hvb2xzLm9yZy9pbmRleC5waHAvY2FtcGFpZ25zW0NBTVBBSUdOX1VJRC90
cmFjay11cmwvdGg0ODNnYmd4aDdkNy8yMWUwNTQ5NWZkMWM5YzJhNTc3OWU4MjZlYjc2MGQ2MTRh
NDdkMzc3fGF3YWtlLnZvaWNlLXRydXRoLmNvbQ0KaHR0cDovL2sxMi1zY2hvb2xzLm9yZy9pbmRl
eC5waHAvY2FtcGFpZ25zL2JyNDY3OTZrNHY5ZDgvdHJhY2stdXJsL3RoNDgzZ2JneGg3ZDcvODkx
MmFkZGI2MjVjN2YxMWIwMjc2OTcyMDc5MjRkYjg5ODI5OWMzNnxibG9nLnZvaWNlLXRydXRoLmNv
bQ0KaHR0cDovL2sxMi1zY2hvb2xzLm9yZy9pbmRleC5waHAvY2FtcGFpZ25zL2JyNDY3OTZrNHY5
ZDgvdHJhY2stdXJsL3RoNDgzZ2JneGg3ZDcvZGJmNmZhZGJjNDRiYTU2YzhmZjIyNjg2ZmZjZDk0
NTVjN2I0NzNjN3xnby52b2ljZS10cnV0aC5jb20NCmh0dHA6Ly9rMTItc2Nob29scy5vcmcvaW5k
ZXgucGhwL2NhbXBhaWducy9icjQ2Nzk2azR2OWQ4L3RyYWNrLXVybC90aDQ4M2diZ3hoN2Q3L2Nk
ZjQ5OGMzN2NkNmIyYzcwODY3ZDNhNjE1MmNhNGVhMmQ0Y2IzNWN8aG9tZS52b2ljZS10cnV0aC5j
b20NCmh0dHA6Ly9rMTItc2Nob29scy5vcmcvaW5kZXgucGhwL2NhbXBhaWducy9icjQ2Nzk2azR2
OWQ4L3RyYWNrLXVybC90aDQ4M2diZ3hoN2Q3LzI5MGUwYzNhODgxNjBiOTZmMDUyNTI2NzI5YTYw
YWRmNzFjYWQ3ZTF8cmZpZC52b2ljZS10cnV0aC5jb20NCmh0dHA6Ly9rMTItc2Nob29scy5vcmcv
aW5kZXgucGhwL2NhbXBhaWducy9icjQ2Nzk2azR2OWQ4L3RyYWNrLXVybC90aDQ4M2diZ3hoN2Q3
L2IyMzVjZDlmZTJmYmJjYzg4ZThlNmU5ZGJiN2YzZjE4Y2I2OWFmNTZ8c3BlYWsudm9pY2UtdHJ1
dGguY29tDQpodHRwOi8vazEyLXNjaG9vbHMub3JnL2luZGV4LnBocC9jYW1wYWlnbnMvYnI0Njc5
Nms0djlkOC90cmFjay11cmwvdGg0ODNnYmd4aDdkNy8xNTYyY2ZlOWJkNTg2YTRjOWE2ODkxMDY0
NjhhNGIxN2JlODQ4ZmY1fG9uZS52b2ljZS10cnV0aC5jb20NCmh0dHA6Ly9rMTItc2Nob29scy5v
cmcvaW5kZXgucGhwL2NhbXBhaWducy9icjQ2Nzk2azR2OWQ4L3RyYWNrLXVybC90aDQ4M2diZ3ho
N2Q3LzNlNzFjYWQwODBmMDViNGM5Njc2NjQ4MDZhNzZmNGEyODEyYWZhMzV8aGVhci52b2ljZS10
cnV0aC5jb20NCmh0dHA6Ly9rMTItc2Nob29scy5vcmcvaW5kZXgucGhwL2NhbXBhaWducy9icjQ2
Nzk2azR2OWQ4L3RyYWNrLXVybC90aDQ4M2diZ3hoN2Q3L2JmN2Q1ZTExMmYxMzNlZDU2NjZlZTdk
ZTI3NjhjOWZkMTY4MjFkNWR8Z29kLnZvaWNlLXRydXRoLmNvbQ0KaHR0cDovL2sxMi1zY2hvb2xz
Lm9yZy9pbmRleC5waHAvY2FtcGFpZ25zL2JyNDY3OTZrNHY5ZDgvdHJhY2stdXJsL3RoNDgzZ2Jn
eGg3ZDcvMmJjNzA1N2Y1OTQyZDg3NDI3Zjc1YzA5ZTk3ZjA2YTk3ZTFjMDU0NHxzZWVrLnZvaWNl
LXRydXRoLmNvbQ0KaHR0cDovL2sxMi1zY2hvb2xzLm9yZy9pbmRleC5waHAvY2FtcGFpZ25zL2Jy
NDY3OTZrNHY5ZDgvdHJhY2stdXJsL3RoNDgzZ2JneGg3ZDcvYzgxYmQ1ODBlOWNiZDljMDQ0ZDgx
NGQ5ZDQxM2FjMjM3YTdiZDMwN3x0di52b2ljZS10cnV0aC5jb20NCmh0dHA6Ly9rMTItc2Nob29s
cy5vcmcvaW5kZXgucGhwL2NhbXBhaWducy9icjQ2Nzk2azR2OWQ4L3RyYWNrLXVybC90aDQ4M2di
Z3hoN2Q3L2VlYTE2ZDM3Zjk4MDIxNGEzZWI3ZWNlZDcxZWFjYzZkYzZhZTc0MmN8cmFkaW8udm9p
Y2UtdHJ1dGguY29tDQpodHRwOi8vazEyLXNjaG9vbHMub3JnL2luZGV4LnBocC9jYW1wYWlnbnMv
YnI0Njc5Nms0djlkOC90cmFjay11cmwvdGg0ODNnYmd4aDdkNy8xMjIwOWUwODkwODI2OGZkNjZj
YWJhODY1OTQ5Y2JhMzBiNjNkY2I0fHN0YXRpb24udm9pY2UtdHJ1dGguY29tDQpodHRwOi8vazEy
LXNjaG9vbHMub3JnL2luZGV4LnBocC9jYW1wYWlnbnMvYnI0Njc5Nms0djlkOC90cmFjay11cmwv
dGg0ODNnYmd4aDdkNy9jYjhlMzNhYjg5ODBiZDMyOWJlOWVmMWU5MGM4MDc0OGFmMjExZGUyXQ0K
dG8gc2VlIGFsbCB0aGUgcHJvb2YhDQpHb2QncyB3b3JkIHdhcm5zIHVzIGluIHRoZSBsYXN0IGRh
eXMgdGhhdCBhIGZhbHNlIHByb3BoZXQgd2lsbCByaXNlDQp1cCBwZXJmb3JtaW5nIG1pcmFjdWxv
dXMgc2lnbnMgdG8gZGVjZWl2ZSBtYW55IHRvIG9idGFpbiB0aGUgbWFyayBvZg0KdGhlIGJlYXN0
Og0KLi4uIkJ1dCB0aGUgYmVhc3Qgd2FzIGNhcHR1cmVkLCBhbmQgd2l0aCBpdCB0aGUgZmFsc2Ug
cHJvcGhldCB3aG8gaGFkDQpwZXJmb3JtZWQgdGhlIHNpZ25zIG9uIGl0cyBiZWhhbGYuIFdpdGgg
dGhlc2Ugc2lnbnMgaGUgaGFkIGRlbHVkZWQNCnRob3NlIHdobyBoYWQgcmVjZWl2ZWQgdGhlIG1h
cmsgb2YgdGhlIGJlYXN0IGFuZCB3b3JzaGlwZWQgaXRzIGltYWdlLg0KVGhlIHR3byBvZiB0aGVt
IHdlcmUgdGhyb3duIGFsaXZlIGludG8gdGhlIGZpZXJ5IGxha2Ugb2YgYnVybmluZw0Kc3VsZnVy
IiAoUmV2ZWxhdGlvbiAxOToyMCBOSVYpLi4uDQpBdCBhbGwgY29zdHMsIERPIE5PVCBUQUtFIElU
IQ0KIlRoZW4gYSB0aGlyZCBhbmdlbCBmb2xsb3dlZCB0aGVtLCBzYXlpbmcgd2l0aCBhIGxvdWQg
dm9pY2UsICJJZg0KYW55b25lIHdvcnNoaXBzIHRoZSBiZWFzdCBhbmQgaGlzIGltYWdlLCBhbmQg
cmVjZWl2ZXMgaGlzIG1hcmsgb24gaGlzDQpmb3JlaGVhZCBvciBvbiBoaXMgaGFuZCwgaGUgaGlt
c2VsZiBzaGFsbCBhbHNvIGRyaW5rIG9mIHRoZSB3aW5lIG9mDQp0aGUgd3JhdGggb2YgR29kLCB3
aGljaCBpcyBwb3VyZWQgb3V0IGZ1bGwgc3RyZW5ndGggaW50byB0aGUgY3VwIG9mDQpIaXMgaW5k
aWduYXRpb24uIEhlIHNoYWxsIGJlIHRvcm1lbnRlZCB3aXRoIGZpcmUgYW5kIGJyaW1zdG9uZSBp
biB0aGUNCnByZXNlbmNlIG9mIHRoZSBob2x5IGFuZ2VscyBhbmQgaW4gdGhlIHByZXNlbmNlIG9m
IHRoZSBMYW1iLiBBbmQgdGhlDQpzbW9rZSBvZiB0aGVpciB0b3JtZW50IGFzY2VuZHMgZm9yZXZl
ciBhbmQgZXZlcjsgYW5kIHRoZXkgaGF2ZSBubyByZXN0DQpkYXkgb3IgbmlnaHQsIHdobyB3b3Jz
aGlwIHRoZSBiZWFzdCBhbmQgaGlzIGltYWdlLCBhbmQgd2hvZXZlcg0KcmVjZWl2ZXMgdGhlIG1h
cmsgb2YgaGlzIG5hbWUiIChSZXZlbGF0aW9uIDE0OjktMTEpLg0KV2UgYXJlIGxpdmluZyBpbiB2
ZXJ5IHByb3BoZXRpYyB0aW1lcyB3aXRoIG1ham9yIEJpYmxpY2FsIHByb3BoZWNpZXMNCmJlaW5n
IGZ1bGZpbGxlZC4NCldoZW4gRG9uYWxkIFRydW1wIHJlY29nbml6ZWQgSmVydXNhbGVtIGFzIGNh
cGl0YWwgb2YgSXNyYWVsIG9uDQpEZWNlbWJlciA2IDIwMTcsIHRoaXMgd2FzIGEgbGFyZ2Ugc3Rl
cCB0byBmdWxmaWxsIHRoZSBUaGlyZCBUZW1wbGUNCnByb3BoZXNpZWQgaW4gdGhlIHdvcmRzIG9m
IEdvZC4NCkdvZCdzIEhvbHkgc2NyaXB0dXJlcyB3YXJucyB1cyB0aGF0IHRoZSBBbnRpY2hyaXN0
IHdpbGwgc2VhdCBoaW1zZWxmDQppbiB0aGlzIHRlbXBsZToNCiIuLi5hbmQgdGhlIG1hbiBvZiBz
aW4gaXMgcmV2ZWFsZWQsIHRoZSBzb24gb2YgcGVyZGl0aW9uLCB3aG8gb3Bwb3Nlcw0KYW5kIGV4
YWx0cyBoaW1zZWxmIGFib3ZlIGFsbCB0aGF0IGlzIGNhbGxlZCBHb2Qgb3IgdGhhdCBpcyB3b3Jz
aGlwZWQsDQpzbyB0aGF0IGhlIHNpdHMgYXMgR29kIGluIHRoZSB0ZW1wbGUgb2YgR29kLCBzaG93
aW5nIGhpbXNlbGYgdGhhdCBoZQ0KaXMgR29kIiAoMiBUaGVzc2Fsb25pYW5zIDI6My00KS4NCldp
dGhpbiB0aGUgSXNsYW1pYyByZWxpZ2lvbiwgdGhleSBoYXZlIGEgbWFuIGNhbGxlZCB0aGUgTWFo
ZGksDQpyZWZlcnJlZCB0byBhcyB0aGVpciBtZXNzaWFoIHdobyB0aGV5J3JlIGF3YWl0aW5nIHRv
IGFwcGVhci4gVGhlcmUgYXJlDQphIG51bWJlciBvZiB0ZXN0aW1vbmllcyBmcm9tIHBlb3BsZSBv
bi1saW5lIHdobyBjb25zaWRlciB0aGlzIG1hbg0Kc2hhbGwgYmUgQmFyYWNrIE9iYW1hIHdobyBp
cyB0byBiZSB0aGUgYmlibGljYWwgQW50aWNocmlzdC4gSSBoYXZlIGhhZA0Kc3RyYW5nZSBkcmVh
bXMgY29uY2VybmluZyBPYmFtYS4gSGUgZ290IG9uIHN0YWdlIGRlY2xhcmluZyBoaW1zZWxmIHRv
DQpiZSBhIENocmlzdGlhbiB3aXRoIG5vIGFmZmlsaWF0aW9uIHRvIHRoZSBNdXNsaW0gcmVsaWdp
b24sIGhvd2V2ZXIgaXQNCndhcyBsYXRlciByZXZlYWxlZCBieSBoaXMgZmFtaWx5IHRoYXQgaGUg
Y2VydGFpbmx5IGlzIGEgZGV2b3V0IE11c2xpbS4NClNvIHdoYXQncyBpbiB0aGUgbmFtZT8gVGhl
IG1lYW5pbmcgb2Ygc29tZW9uZXMgbmFtZSBjYW4gc2F5IGEgbG90DQphYm91dCBhIHBlcnNvbi4g
R29kIHRocm91Z2hvdXQgaGlzdG9yeSBoYXMgZ2l2ZW4gbmFtZXMgdG8gcGVvcGxlIHRoYXQNCmhh
dmUgYSBzcGVjaWZpYyBtZWFuaW5nIHRpZWQgdG8gdGhlaXIgbGl2ZXMuIEhvdyBhYm91dCB0aGUg
bmFtZSBCYXJhY2sNCk9iYW1hPyBMZXQgdXMgdGFrZSBhIGxvb2sgYXQgd2hhdCBtYXkgYmUgaGlk
aW5nIGJlbmVhdGggdGhlIHN1cmZhY2UuLi4NCkplc3VzIHNheXMsICJBbmQgSGUgc2FpZCB0byB0
aGVtLCAnSSBzYXcgU2F0YW4gZmFsbCBsaWtlIGxpZ2h0bmluZw0KZnJvbSBoZWF2ZW4nIiAoTHVr
ZSAxMDoxOCkuDQpJbiBIZWJyZXcsIHRoZSBuYW1lICJCYXJhY2siIG1lYW5zICJsaWdodGluZyIs
IGFuZCB0aGUgdXNlIG9mICJCYW1hIg0KKFN0cm9uZ3MgSGVicmV3IHdvcmQgMTExNikgaXMgdXNl
ZCB0byByZWZlciB0byB0aGUgImhlaWdodHMiIG9mDQpoZWF2ZW4uDQrCoA0KVGhlIGRheSBmb2xs
b3dpbmcgdGhlIGVsZWN0aW9uIG9mIEJhcmFjayBPYmFtYSAoMTEvMDQvMDgpLCB0aGUNCndpbm5p
bmcgY2hvb3NlIDMgbG90dG8gbnVtYmVycyBpbiBJbGxpbm9pcyAoT2JhbWHigJlzIGRvbWVzdGlj
IHN0YXRlKQ0KZm9yIDExLzUvMDggd2VyZSA2NjYuDQpPYmFtYSB1c2UgdG8gYmUgYSBVLlMuIHNl
bmF0b3IgZm9yIElsbGlub2lzLCBhbmQgaGlzIHppcCBjb2RlIHdhcw0KNjA2MDYuDQpSZWdhcmRs
ZXNzLCB3aG9tc29ldmVyIHNlYXRzIGhpbXNlbGYgaW4gdGhlIFRoaXJkIFRlbXBsZSBpbg0KSmVy
dXNhbGVtLCBkZWNsYXJpbmcgaGltc2VsZiB0byBiZSBHb2QgSVMgVEhFIEFOVElDSFJJU1QuIE5F
VkVSDQpGT1JHRVQuDQpXaHkgZG8gd2UgbmVlZCBKZXN1cz8NCiJmb3IgYWxsIGhhdmUgc2lubmVk
IGFuZCBmYWxsIHNob3J0IG9mIHRoZSBnbG9yeSBvZiBHb2QiIChSb21hbnMNCjI6MjMpLg0KIkZv
ciB0aGUgd2FnZXMgb2Ygc2luIGlzIGRlYXRoLCBidXQgdGhlIGdpZnQgb2YgR29kIGlzIGV0ZXJu
YWwgbGlmZQ0KaW4gQ2hyaXN0IEplc3VzIG91ciBMb3JkIiAoUm9tYW5zIDY6MjMpLg0KT3VyIGdv
b2Qgd29ya3MgY2FuJ3Qgc2F2ZSBvdXIgc291bHMgZnJvbSBvdXIgc2lucy4gSWYgd2Ugc3RlcCBi
ZWZvcmUNCmEganVkZ2UgaW4gdGhlIGNvdXJ0IG9mIGxhdywgYmVpbmcgZ3VpbHR5IGZvciBjb21t
aXR0aW5nIGEgY3JpbWUsIHRoZQ0KanVkZ2Ugd29uJ3QganVkZ2UgdXMgYnkgdGhlIGdvb2QgdGhh
dCB3ZSd2ZSBkb25lLCBidXQgcmF0aGVyIHRoZQ0KY3JpbWVzIHdlJ3ZlIGNvbW1pdHRlZC4gSWYg
d2UgYXMgZmFsbGVuIGh1bWFuaXR5LCBjcmVhdGVkIGluIEdvZCdzDQppbWFnZSwgcG9zZSB0aGlz
IGtpbmQgb2YgbW9yYWwganVzdGljZSwgaG93IG11Y2ggZ3JlYXRlciBhIHBlcmZlY3QsDQpyaWdo
dGVvdXMsIGFuZCBIb2x5IGNyZWF0b3I/DQpHb2QgaGFzIGRlbGl2ZXJlZCB0byB1cyBIaXMgZXRo
aWNhbCByZWd1bGF0aW9uJ3MgYnkgbWVhbnMgb2YgdGhlIDEwDQpjb21tYW5kbWVudHMgcmVjZWl2
ZWQgYnkgTW9zZXMgYXQgTXQuIFNpYW5pLiBUaGVzZSBsZWdhbCBndWlkZWxpbmVzDQp3ZXJlIG5v
dCBnaXZlbiBzbyB3ZSBjYW4gYmUganVzdGlmaWVkLCBob3dldmVyIHNvIHRoYXQgd2UgbWF5IHNl
ZSB0aGUNCm5lZWQgZm9yIHRoZSBzYXZpb3VyLiBUaGV5IGFyZSB0aGUgbWlycm9yIG9mIEdvZCdz
IGNoYXJhY3RlciBvZiB3aGF0DQpIZSBoYXMgcHV0IGluIGV2ZXJ5IG9uZSBvZiB1cywgd2l0aCBv
dXIgY29uc2Npb3VzIGJlYXJpbmcgd2l0bmVzcyB0aGF0DQp3ZSBhbGwga25vdyB0aGF0IGl0J3Mg
d3JvbmcgdG8gc3RlYWwsIGxpZSwgZGlzaG9ub3Igb3VyIG1vdGhlciBhbmQNCmZhdGhlciwgYW5k
IHNvIG9uLg0KV2UgbWF5IGF0dGVtcHQgdG8gZm9sbG93IGFsbCB0aGUgZXRoaWNhbCBsYXdzIG9m
IHRoZSAxMCBjb21tYW5kbWVudHMsDQpob3dldmVyIHdlJ2xsIGluIG5vIHdheSBjYXRjaCB1cCB0
byB0aGVtIHRvIGJlIGp1c3RpZmllZCBiZWZvcmUgYSBIb2x5DQpHb2QuIFRoZSBzYW1lIHdvcmQg
b2YgdGhlIGxhdyBnaXZlbiB0byBNb3NlcyBiZWNhbWUgZmxlc2ggb3ZlciAyMDAwDQp5ZWFycyBh
Z28gd2l0aGluIHRoZSBib2R5IG9mIEplc3VzIENocmlzdC4gSGUgd2FzIGJyb3VnaHQgZm9ydGgg
dG8gYmUNCm91ciBqdXN0aWZpY2F0aW9uIGJ5IHBlcmZlY3RseSBmdWxmaWxsaW5nIHRoZSBjb21t
YW5kbWVudHMgb2YgR29kLA0KbGl2aW5nIGEgc2lubGVzcyBsaWZlIHRoYXQgc29sZWx5IEdvZCBt
YXkgYWNjb21wbGlzaC4NClRoZSBnYXAgYmV0d2VlbiB1cyBhbmQgdGhlIGxhdyBvZiBHb2QgY2Fu
IGluIG5vIHdheSBiZSByZWNvbmNpbGVkIGJ5DQpvdXIgdmVyeSBvd24gbWVyaXQsIGJ1dCB0aGUg
YXJtIG9mIEplc3VzIGlzIHN0cmV0Y2hlZCBvdXQgYnkgdGhlIGdyYWNlDQphbmQgbWVyY3kgb2Yg
R29kLiBBbmQgaWYgd2UgYXJlIHRvIHNlaXplIGhvbGQgb2YsIGJ5IG1lYW5zIG9mIGZhaXRoIGlu
DQpIaW0sIEhlJ2xsIHB1bGwgdXMgdXAgYmVpbmcgdGhlIG9uZSB0byBqdXN0aWZ5IHVzLiBBcyB3
aXRoaW4gdGhlIGNvdXJ0DQpvZiBsYXcsIGlmIHNvbWVib2R5IHN0ZXBzIGluIGFuZCBwYXlzIHlv
dXIgZGVidCwgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0DQp5b3UgYXJlIGd1aWx0eSwgdGhlIGp1ZGdl
IGNhbiBkbyB3aGF0IGlzIGxlZ2FsIGFuZCBqdXN0IGFuZCBhbGxvdyB5b3UNCnRvIGdvIGZyZWUu
IFRoYXQgaXMgd2hhdCBKZXN1cyBkaWQgbmVhcmx5IDIwMDAgeWVhcnMgYWdvIG9uIHRoZSBjcm9z
cy4NCkl0IHdhcyBhIGxlZ2FsIHRyYW5zYWN0aW9uIGJlaW5nIGZ1bGZpbGxlZCB3aXRoaW4gdGhl
IHNwaXJpdHVhbCByZWFsbQ0KYnkgdGhlIHNoZWRkaW5nIG9mIEhpcyBibG9vZCwgd2l0aCBIaXMg
bGFzdCB3b3JkcyBiZWluZywgIi4uLkl0IGlzDQpmaW5pc2hlZCEuLi4iIChKb2huIDE5OjMwKS4N
ClNvIHdoeSBkaWQgSmVzdXMgaGF2ZSB0byBkaWUgZm9yIHVzPw0KQmVjYXVzZSBHb2QgaXMgSG9s
eSBhbmQganVzdCwgdGhlIHdyYXRoIHRoYXQgYmVsb25ncyB0byB1cyBjb3VsZCBub3QNCmJlIG92
ZXJsb29rZWQuIFRocm91Z2ggdGhlIHBlcmZlY3QgcmlnaHRlb3VzbmVzcyBhbmQganVzdGljZSBv
ZiBHb2Qncw0KY2hhcmFjdGVyLCBpdCBtdXN0IGJlIGRlYWx0IHdpdGgsIGl0IG11c3QgYmUgcXVl
bmNoZWQgYW5kIHNhdGlzZmllZC4NCkZvciBHb2QgdGFrZXMgbm8gcGxlYXN1cmUgaW4gdGhlIGRl
YXRoIG9mIHRoZSB3aWNrZWQgKEV6ZWtpZWwgMTg6MjMpLg0KVGhhdCBpcyB3aHkgaW4gSXNhaWFo
IGNoYXB0ZXIgNTMsIHRoZSBwbGFjZSBpdCBzcGVha3Mgb2YgdGhlIGNvbWluZw0KTWVzc2lhaCBh
bmQgSGlzIHNvdWwgYmVpbmcgYSBzYWNyaWZpY2UgZm9yIG91ciBzaW5zLCB3aHkgaXQgc2F5cyBp
dA0KcGxlYXNlZCBHb2QgdG8gY3J1c2ggSGlzIG9ubHkgYmVnb3R0ZW4gU29uLg0KVGhhdCBpcyBk
dWUgdG8gdGhlIGZhY3QgdGhlIHdyYXRoIHRoYXQgd2UgZGVzZXJ2ZSB3YXMganVzdGlmaWVkIGJ5
DQpiZWluZyBwb3VyZWQgb3V0IHVwb24gSGlzIFNvbi4gRm9yIGlmIGl0IHdhcyBwb3VyZWQgb3V0
IG9uIHVzIHdobw0KZGVzZXJ2ZSBpdCwgd2UnZCBhbGwgZGllIGFuZCBnbyB0byBoZWxsLiBHb2Qg
Y3JlYXRlZCBhIG1lYW5zIG9mIGVzY2FwZQ0KYnkgcG91cmluZyBpdCBvdXQgb24gSGlzIFNvbiB3
aG8ncyBzb3VsIGNvdWxkIG5vdCBiZSBsZWZ0IGluIEhhZGVzLA0KaG93ZXZlciB3YXMgcmFpc2Vk
IGFuZCBzZWF0ZWQgYXQgdGhlIHJpZ2h0IGhhbmQgb2YgR29kIGluIHBvd2VyLg0KTm93IG9uY2Ug
d2UgcHV0IG9uIHRoZSBMb3JkIEplc3VzIENocmlzdCAoUm9tYW5zIDEzOjE0KSwgR29kIG5vDQps
b25nZXIgc2VlJ3MgdGhlIG1hbiBvciB3b21hbiB3aG8gZGVzZXJ2ZXMgSGlzIHdyYXRoLCBidXQg
cmF0aGVyIHRoZQ0KZ2xvcmlvdXMgaW1hZ2Ugb2YgSGlzIHBlcmZlY3QgU29uIHJlc2lkaW5nIGlu
IHVzLCBqdXN0aWZ5aW5nIHVzIGFzIGlmDQp3ZSBhY3F1aXJlZCB0aGUgd3JhdGggd2UgZGVzZXJ2
ZSwgbWFraW5nIGEgbWVhbnMgb2YgZXNjYXBlIGZyb20gdGhlDQpjdXJzZSBvZiBkZWF0aC4NCk5v
dyB3aGF0IHdlIG11c3QgZG8gaXMgdHVybiBmcm9tIG91ciBzaW5zIGFuZCB0cnVzdCBpbiB0aGUg
c2F2aW91ciwNCmNvbmZlc3NpbmcgYW5kIGZvcnNha2luZyBvdXIgc2lucy4gVGhhdCBpcyBub3Qg
anVzdCBhIGhlYWQga25vd2xlZGdlDQpvZiBiZWxpZXZpbmcgaW4gSmVzdXMsIGluc3RlYWQgcmVj
ZWl2aW5nIEhpcyB3b3JkcywgdGFraW5nIHRoZW0gdG8NCmhlYXJ0LiBJbiB3aGljaCB3ZSBubyBs
b25nZXIgbGl2ZSB0byBwcmFjdGljZSBzaW4sIGhvd2V2ZXIgdHVybiBmcm9tDQpvdXIgc2lucyBh
bmQgcHJhY3RpY2UgcmlnaHRlb3VzbmVzczoNCiJEbyB5b3Ugbm90IGtub3cgdGhhdCB0aGUgdW5y
aWdodGVvdXMgd2lsbCBub3QgaW5oZXJpdCB0aGUga2luZ2RvbSBvZg0KR29kPyBEbyBub3QgYmUg
ZGVjZWl2ZWQuIE5laXRoZXIgZm9ybmljYXRvcnMsIG5vciBpZG9sYXRlcnMsIG5vcg0KYWR1bHRl
cmVycywgbm9yIGhvbW9zZXh1YWxzLCBub3Igc29kb21pdGVzLCBub3IgdGhpZXZlcywgbm9yIGNv
dmV0b3VzLA0Kbm9yIGRydW5rYXJkcywgbm9yIHJldmlsZXJzLCBub3IgZXh0b3J0aW9uZXJzIHdp
bGwgaW5oZXJpdCB0aGUga2luZ2RvbQ0Kb2YgR29kLiBBbmQgc3VjaCB3ZXJlIHNvbWUgb2YgeW91
LiBCdXQgeW91IHdlcmUgd2FzaGVkLCBidXQgeW91IHdlcmUNCnNhbmN0aWZpZWQsIGJ1dCB5b3Ug
d2VyZSBqdXN0aWZpZWQgaW4gdGhlIG5hbWUgb2YgdGhlIExvcmQgSmVzdXMgYW5kDQpieSB0aGUg
U3Bpcml0IG9mIG91ciBHb2QiICgxIENvcmludGhpYW5zIDY6OS0xMSkuDQpCeSBkb2luZyBzbyB3
ZSB3aWxsIGJlY29tZSB0cmFuc2Zvcm1lZCBpbnRvIHRoZSBpbWFnZSBvZiBHb2QgYnkgbWVhbnMN
Cm9mIGZhaXRoIGluIEhpcyBTb24gQ2hyaXN0IEplc3VzIFdobydzIGluY2xpbmVkIHRvIGdpdmUg
dGhlIEhvbHkNClNwaXJpdCB0byB3aG9ldmVyIGFzayBvZiBIaW06DQoiTW9zdCBhc3N1cmVkbHks
IEkgKEplc3VzKSBzYXkgdG8geW91LCB1bmxlc3Mgb25lIGlzIGJvcm4gb2Ygd2F0ZXINCmFuZCB0
aGUgU3Bpcml0LCBoZSBjYW5ub3QgZW50ZXIgdGhlIGtpbmdkb20gb2YgR29kLiBUaGF0IHdoaWNo
IGlzIGJvcm4NCm9mIHRoZSBmbGVzaCBpcyBmbGVzaCwgYW5kIHRoYXQgd2hpY2ggaXMgYm9ybiBv
ZiB0aGUgU3Bpcml0IGlzIHNwaXJpdC4NCkRvIG5vdCBtYXJ2ZWwgdGhhdCBJIHNhaWQgdG8geW91
LCAnWW91IG11c3QgYmUgYm9ybiBhZ2Fpbi4nIChKb2huDQozOjUtNikuDQoiQnV0IHlvdSBhcmUg
bm90IGluIHRoZSBmbGVzaCBidXQgaW4gdGhlIFNwaXJpdCwgaWYgaW5kZWVkIHRoZSBTcGlyaXQN
Cm9mIEdvZCBkd2VsbHMgaW4geW91LiBOb3cgaWYgYW55b25lIGRvZXMgbm90IGhhdmUgdGhlIFNw
aXJpdCBvZg0KQ2hyaXN0LCBoZSBpcyBub3QgSGlzIiAoUm9tYW5zIDg6OSkuDQpXaGF0IGFyZSB5
b3Ugd2FpdGluZyBmb3I/IE91ciBGYXRoZXIgaW4gaGVhdmVuIG9ubHkgZGVzaXJlcyB0aGUgYmVz
dA0KZm9yIHVzLCByZXN0b3JpbmcgZXZlcnkgcGFydCB0aGlzIHdvcmxkIGhhcyBzdG9sZW4gZnJv
bSB1cy4gVGhhdCBpcw0Kd2hhdCBpdCBtZWFucyB0byBiZSAiaG9seSIuIFRvIGJlIG1hZGUgd2hv
bGUuDQpIZSBpcyByZWFkeSB0byBoZWFyIGZyb20geW91LiBUaGF0IEdvZCBnaXZlbiB0b25ndWUg
dG8gc3BlYWsNCmxhbmd1YWdlLCBieSB1c2luZyBmYWl0aCwgcHJheSB0byBIaW0sIGFzayBIaW0g
dG8gZm9yZ2l2ZSB5b3UgYnkNCmNvbmZlc3NpbmcgeW91ciBzaW5zIGFuZCBiZSB3aWxsaW5nIHRv
IGZvcnNha2UgdGhlbTsgdGhhdCB5b3UgYWNjZXB0DQp0aGUgc2FjcmlmaWNlIG9mIEhpcyBTb24g
SmVzdXMgb24gdGhlIGNyb3NzLCBhbmQgdGhhdCB5b3UgbmVlZCBIaXMNCkhvbHkgU3Bpcml0IGxp
dmluZyBpbnNpZGUgeW91IHJld29ya2luZyB5b3UgaW50byBhIGNoaWxkIG9mIEdvZC4NCkplc3Vz
IHNheXMsICJidXQgd2hvZXZlciBkcmlua3Mgb2YgdGhlIHdhdGVyIHRoYXQgSSBzaGFsbCBnaXZl
IGhpbQ0KKHRoZSBIb2x5IFNwaXJpdCkgd2lsbCBuZXZlciB0aGlyc3QuIEJ1dCB0aGUgd2F0ZXIg
dGhhdCBJIHNoYWxsIGdpdmUNCmhpbSB3aWxsIGJlY29tZSBpbiBoaW0gYSBmb3VudGFpbiBvZiB3
YXRlciBzcHJpbmdpbmcgdXAgaW50bw0KZXZlcmxhc3RpbmcgbGlmZS4iDQpEaWQgeW91IHJlYWxp
emUgdGhhdCBKZXN1cyBzcG9rZSBtb3JlIGFib3V0IGhlbGwgdGhhbiBhbnkgb25lIGluDQpHb2Qn
cyBob2x5IHdvcmQsIGV2ZW4gbW9yZSB0aGFuIEhlIHNwb2tlIGFib3V0IGhlYXZlbj8hIEZvciB0
aGlzIHZlcnkNCnJlYXNvbiBIZSB3YXMgYnJvdWdodCBmb3J0aCB0byBkaWUgZm9yIHVzLCB0byBk
ZWxpdmVyIHVzIGZyb20gdGhpcw0KcGxhY2UgdGhhdCB3ZSBkZXNlcnZlLg0KwqANCkhlIGRlc2Ny
aWJlcyBoZWxsIGFzIGEgcmVhbCBwbGFjZSB3aGVyZSwNCiJUaGVpciB3b3JtIGRvZXMgbm90IGRp
ZQ0KQW5kIHRoZSBmaXJlIGlzIG5vdCBxdWVuY2hlZCIgKE1hcmsgOTo0NCkuDQpBbmQgd2hlcmUs
DQoiVGhlcmUgd2lsbCBiZSB3ZWVwaW5nIGFuZCBnbmFzaGluZyBvZiB0ZWV0aC4uLiIgKEx1a2Ug
MTM6MjgpLg0KSmVzdXMgdGVsbHMgdXMgd2hvIHRvIGZlYXIsDQoiQW5kIGRvIG5vdCBmZWFyIHRo
b3NlIHdobyBraWxsIHRoZSBib2R5IGJ1dCBjYW5ub3Qga2lsbCB0aGUgc291bC4NCkJ1dCByYXRo
ZXIgZmVhciBIaW0gd2hvIGlzIGFibGUgdG8gZGVzdHJveSBib3RoIHNvdWwgYW5kIGJvZHkgaW4g
aGVsbCINCihNYXR0aGV3IDEwOjI4KS4NCiJOb3cgSSBzYXcgYSBuZXcgaGVhdmVuIGFuZCBhIG5l
dyBlYXJ0aCwgZm9yIHRoZSBmaXJzdCBoZWF2ZW4gYW5kIHRoZQ0KZmlyc3QgZWFydGggaGFkIHBh
c3NlZCBhd2F5LiBBbHNvIHRoZXJlIHdhcyBubyBtb3JlIHNlYS4gVGhlbiBJLCBKb2huLA0Kc2F3
IHRoZSBob2x5IGNpdHksIE5ldyBKZXJ1c2FsZW0sIGNvbWluZyBkb3duIG91dCBvZiBoZWF2ZW4g
ZnJvbSBHb2QsDQpwcmVwYXJlZCBhcyBhIGJyaWRlIGFkb3JuZWQgZm9yIGhlciBodXNiYW5kLiBB
bmQgSSBoZWFyZCBhIGxvdWQgdm9pY2UNCmZyb20gaGVhdmVuIHNheWluZywgJ0JlaG9sZCwgdGhl
IHRhYmVybmFjbGUgb2YgR29kIGlzIHdpdGggbWVuLCBhbmQgSGUNCndpbGwgZHdlbGwgd2l0aCB0
aGVtLCBhbmQgdGhleSBzaGFsbCBiZSBIaXMgcGVvcGxlLiBHb2QgSGltc2VsZiB3aWxsDQpiZSB3
aXRoIHRoZW0gYW5kIGJlIHRoZWlyIEdvZC4gQW5kIEdvZCB3aWxsIHdpcGUgYXdheSBldmVyeSB0
ZWFyIGZyb20NCnRoZWlyIGV5ZXM7IHRoZXJlIHNoYWxsIGJlIG5vIG1vcmUgZGVhdGgsIG5vciBz
b3Jyb3csIG5vciBjcnlpbmcuDQpUaGVyZSBzaGFsbCBiZSBubyBtb3JlIHBhaW4sIGZvciB0aGUg
Zm9ybWVyIHRoaW5ncyBoYXZlIHBhc3NlZCBhd2F5LicNClRoZW4gSGUgd2hvIHNhdCBvbiB0aGUg
dGhyb25lIHNhaWQsICdCZWhvbGQsIEkgbWFrZSBhbGwgdGhpbmdzIG5ldy4nDQpBbmQgSGUgc2Fp
ZCB0byBtZSwgJ1dyaXRlLCBmb3IgdGhlc2Ugd29yZHMgYXJlIHRydWUgYW5kIGZhaXRoZnVsLicN
CkFuZCBIZSBzYWlkIHRvIG1lLCAnSXQgaXMgZG9uZSEgSSBhbSB0aGUgQWxwaGEgYW5kIHRoZSBP
bWVnYSwgdGhlDQpCZWdpbm5pbmcgYW5kIHRoZSBFbmQuIEkgd2lsbCBnaXZlIG9mIHRoZSBmb3Vu
dGFpbiBvZiB0aGUgd2F0ZXIgb2YNCmxpZmUgZnJlZWx5IHRvIGhpbSB3aG8gdGhpcnN0cy4gSGUg
d2hvIG92ZXJjb21lcyBzaGFsbCBpbmhlcml0IGFsbA0KdGhpbmdzLCBhbmQgSSB3aWxsIGJlIGhp
cyBHb2QgYW5kIGhlIHNoYWxsIGJlIE15IHNvbi4gQnV0IHRoZQ0KY293YXJkbHksIHVuYmVsaWV2
aW5nLCBhYm9taW5hYmxlLCBtdXJkZXJlcnMsIHNleHVhbGx5IGltbW9yYWwsDQpzb3JjZXJlcnMs
IGlkb2xhdGVycywgYW5kIGFsbCBsaWFycyBzaGFsbCBoYXZlIHRoZWlyIHBhcnQgaW4gdGhlIGxh
a2UNCndoaWNoIGJ1cm5zIHdpdGggZmlyZSBhbmQgYnJpbXN0b25lLCB3aGljaCBpcyB0aGUgc2Vj
b25kIGRlYXRoLiciDQooUmV2ZWxhdGlvbiAyMToxLTgpLg0KV2l0aCBhbGwgb2YgdGhlIHdvcmxk
IHJlbGlnaW9ucywgaG93IGNhbiB3ZSBiZSBzdXJlIHRoZSBCaWJsZSBnb3QgaXQNCmFsbCByaWdo
dD8gVGhlIHNjaWVudGlmaWMgaW5mb3JtYXRpb24gaGFzIGVzdGFibGlzaGVkIGFuZCBjb250aW51
ZXMgdG8NCnN1cHBvcnQgdGhhdCB0aGUgdW5pdmVyc2Ugb25jZSBoYWQgYSBzdGFydGluZyBwb2lu
dCBpbiB3aGljaCBzcGFjZSwNCnRpbWUgYW5kIG1hdHRlciB3ZXJlIGNyZWF0ZWQuIE1hbnkga25v
dyB0aGlzIGFzIHRoZSBiaWcgYmFuZy4NCiJUaGUgbm9uLWJpYmxpY2FsIHJlbGlnaW9ucyB0ZWxs
IHVzIHRoYXQgZ29kIG9yIGdvZCdzIGNyZWF0ZSB3aXRoaW4NCnNwYWNlIGFuZCB0aW1lIHRoYXQg
ZXRlcm5hbGx5IGV4aXN0LiBUaGUgQmlibGUgc3RhbmRzIGFsb25lIGFuZCBzYXlzDQp0aGF0IHRp
bWUgYW5kIHNwYWNlIGRvbid0IGV4aXN0IHVudGlsIEdvZCBjcmVhdGVzIHRoZSB1bml2ZXJzZS4i
IC0NCkFzdHJvbm9tZXIgKFBoZCkgSHVnaCBSb3NzDQpUaGUgQmlibGUgbm90IG9ubHkgZ290IGl0
IGFsbCBjb3JyZWN0IHRoYXQgc3BhY2UsIHRpbWUgYW5kIG1hdHRlciBhbGwNCmNhbWUgaW50byBl
eGlzdGVuY2UgYXQgdGhlIHN0YXJ0IG9mIHRoZSB1bml2ZXJzZSwgaXQgYWRkaXRpb25hbGx5DQpz
dGF0ZXMgaW4gNyBkaXN0aW5jdCBwbGFjZXMgdGhhdCB0aGUgdW5pdmVyc2UgaXMgaW4gYSBjb250
aW51b3VzIHN0YXRlDQpvZiBleHBhbnNpb24gdGhvdXNhbmRzIG9mIHllYXJzIGJlZm9yZSBzY2ll
bnRpc3RzIGZvdW5kIG91dCB0aGVzZQ0KdGhpbmdzLg0KRGlkIHlvdSBrbm93IHRoYXQgdGhlIHJl
YWwgTm9haCdzIEFyayB3YXMgZm91bmQgd2hlcmUgdGhlIHNjcmlwdHVyZXMNCnRvbGQgdXMgaXQn
ZCBiZSB3aXRoIHRoZSBjb3JyZWN0IGRpbWVuc2lvbnM/IEFzIHdlbGwgYXMgcHJvb2YgZm9yIHRo
ZQ0KZGVzdHJ1Y3Rpb24gb2YgU29kb20gYW5kIEdvbW9ycmFoIGFuZCB0aGUgRXhvZHVzIGV2ZW50
IG9mIHRoZSBSZWQgU2VhDQpjcm9zc2luZz8NClRoZSBCaWJsZSBpcyB0aGUgbW9zdCB0cmFuc2xh
dGVkIGFuZCBzdHVkaWVkIGhpc3RvcmljYWwgYm9vayBpbiB0aGUNCmhpc3Rvcnkgb2YgdGhlIHdv
cmxkLCBwYWNrZWQgd2l0aCBwcmVkaWN0aXZlIHByb3BoZWNpZXMsIG1hdGNoaW5nIHdoYXQNCndl
IGZpbmQgd2l0aGluIHRoZSBib29rIG9mIG5hdHVyZS4gV291bGRuJ3QgeW91IGV4cGVjdCBHb2Qn
cyB3b3JkIHRvDQpiZSBzbz8NCkdvZCBsb3ZlcyB5b3UhDQpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpMaW51eC1udmRpbW0gbWFpbGluZyBsaXN0IC0tIGxp
bnV4LW52ZGltbUBsaXN0cy4wMS5vcmcKVG8gdW5zdWJzY3JpYmUgc2VuZCBhbiBlbWFpbCB0byBs
aW51eC1udmRpbW0tbGVhdmVAbGlzdHMuMDEub3JnCg==
