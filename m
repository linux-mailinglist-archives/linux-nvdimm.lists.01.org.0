Return-Path: <linux-nvdimm-bounces@lists.01.org>
X-Original-To: lists+linux-nvdimm@lfdr.de
Delivered-To: lists+linux-nvdimm@lfdr.de
Received: from ml01.01.org (ml01.01.org [198.145.21.10])
	by mail.lfdr.de (Postfix) with ESMTPS id ECD3D34290A
	for <lists+linux-nvdimm@lfdr.de>; Sat, 20 Mar 2021 00:06:16 +0100 (CET)
Received: from ml01.vlan13.01.org (localhost [IPv6:::1])
	by ml01.01.org (Postfix) with ESMTP id B5A9C100EAB47;
	Fri, 19 Mar 2021 16:06:14 -0700 (PDT)
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=151.80.195.99; helo=k12-teaching.live; envelope-from=jennel_j@k12-teaching.live; receiver=<UNKNOWN> 
Received: from k12-teaching.live (k12-teaching.live [151.80.195.99])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits))
	(No client certificate requested)
	by ml01.01.org (Postfix) with ESMTPS id C88A5100EBBA2
	for <linux-nvdimm@lists.01.org>; Fri, 19 Mar 2021 16:06:11 -0700 (PDT)
Received: from k12-teaching.live (localhost [127.0.0.1])
	by k12-teaching.live (Postfix) with ESMTPS id 0D1158E7F2
	for <linux-nvdimm@lists.01.org>; Fri, 19 Mar 2021 23:06:09 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=k12-teaching.live;
	s=202102; t=1616195169;
	bh=FPhMe8GXcyxY5vFiZElDqH0c3ZtpRHB0fyKpT0piUDc=;
	h=Date:Subject:From:Reply-To:To:List-Unsubscribe:List-Id:From;
	b=iKn9rxFRdUaHZduLFUCQKk6nVObgo+Kf+1QET7Rs58/5isf/0ukOa9vnLAvJU9WM6
	 i9NMXdIknF0FVa2E0Nc2F9sGVJNGetBCO/JrkBd4WfnnU6yQMsQxwukeAMD2krT7P+
	 B0SFZtlFqNwn4CLIX1NlgEOyDeVuw0Qhh4OCc5RnhAa+heKM6ToWuVMH/uVbENpFXh
	 NMidYx68VcZ6kZn7cEGl1vCAKPwzM5vM6hp3SITXxcjIKHu7weA50aveOrMC7joklc
	 30uHjj647Y1/dbxtlSzQs2ckXe2vRcfefZFLtwgVvx6a3HU0EI1dlqEWUCPxb7dBZx
	 gl33INE5o7CFA==
Message-ID: <51b368986965931ca5af87ae60476917@k12-teaching.live>
Date: Fri, 19 Mar 2021 23:06:09 +0000
Subject: Would you look this over?
From: Jennel Johnson <jennel_j@k12-teaching.live>
To: "linux-nvdimm@lists.01.org" <linux-nvdimm@lists.01.org>
MIME-Version: 1.0
X-Report-Abuse: Please report abuse for this campaign here:
 http://k12-teaching.live/index.php/campaigns/xg901yrfon4bd/report-abuse/lg9143jrjfd1d/lq943w2lbj610
X-Psjw-Tracking-Did: 0
X-Psjw-Subscriber-Uid: lq943w2lbj610
X-Psjw-Mailer: SwiftMailer - 5.4.x
X-Psjw-EBS: http://k12-teaching.live/index.php/lists/block-address
X-Psjw-Delivery-Sid: 1
X-Psjw-Customer-Uid: wo515xq4ha638
X-Psjw-Customer-Gid: 0
X-Psjw-Campaign-Uid: xg901yrfon4bd
Precedence: bulk
List-Unsubscribe-Post: List-Unsubscribe=One-Click
Feedback-ID: xg901yrfon4bd:lq943w2lbj610:lg9143jrjfd1d:wo515xq4ha638
Message-ID-Hash: VCZSSOVWKZITRMTWUFMIC5LUQK2337SW
X-Message-ID-Hash: VCZSSOVWKZITRMTWUFMIC5LUQK2337SW
X-MailFrom: jennel_j@k12-teaching.live
X-Mailman-Rule-Hits: nonmember-moderation
X-Mailman-Rule-Misses: dmarc-mitigation; no-senders; approved; emergency; loop; banned-address; member-moderation
X-Content-Filtered-By: Mailman/MimeDel 3.1.1
X-Mailman-Version: 3.1.1
Reply-To: Jennel Johnson <jennel_j@k12-teaching.live>
List-Id: "Linux-nvdimm developer list." <linux-nvdimm.lists.01.org>
Archived-At: <https://lists.01.org/hyperkitty/list/linux-nvdimm@lists.01.org/message/VCZSSOVWKZITRMTWUFMIC5LUQK2337SW/>
List-Archive: <https://lists.01.org/hyperkitty/list/linux-nvdimm@lists.01.org/>
List-Help: <mailto:linux-nvdimm-request@lists.01.org?subject=help>
List-Post: <mailto:linux-nvdimm@lists.01.org>
List-Subscribe: <mailto:linux-nvdimm-join@lists.01.org>
List-Unsubscribe: <mailto:linux-nvdimm-leave@lists.01.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

SSBob3BlIHlvdSBjb3VsZCBmaW5kIHRoZSB0aW1lIHRvIGxvb2sgdGhpcyBvdmVyLA0KSSB3YW50
IHRvIHNoYXJlIGEgbWVzc2FnZSB0aGF0IGhhcyBiZWVuIHNwcmVhZGluZyBhbGwgb3ZlciB0aGUN
CmludGVybmV0IHRoYXQgY29uY2VybnMgdGhlIHRpbWVzIHdlIGFyZSBsaXZpbmcgaW4uIFdoZXRo
ZXIgeW91IGJlbGlldmUNCmluIEdvZCBvciBub3QsIHRoaXMgaXMgYSBtdXN0IHJlYWQgbWVzc2Fn
ZSENCldlIGNhbiBzZWUgdGhyb3VnaG91dCB0aW1lIGhvdyB3ZSBoYXZlIGJlZW4gc2xvd2x5IGNv
bmRpdGlvbmVkIHRvDQpjb21lIHRvIHRoaXMgcG9pbnQgd2hlcmUgd2UgYXJlIG9uIHRoZSB2ZXJn
ZSBvZiBhIGNhc2hsZXNzIHNvY2lldHkuDQpXb3VsZCBpdCBzdXJwcmlzZSB5b3UgdG8ga25vdyB0
aGF0IHRoZSBCaWJsZSBmb3JldG9sZCBvZiB0aGlzIGV2ZW50Pw0KRG9uJ3QgYmVsaWV2ZSBtZT8g
VGhpcyBtYXkgYmUgdGhlIG1vc3QgaW1wb3JhbnQgbWVzc2FnZSB5b3Ugd2lsbCByZWFkDQppbiB0
aGVzZSB0aW1lcy4uLnBsZWFzZSBkbyBub3QgaWdub3JlIHRoaXMhDQpUaGlzIG1lc3NzYWdlIHJl
dmVhbHMgd2hhdCB0aGUgTWFyayBvZiB0aGUgQmVhc3QgaXMsIGFuZCB0aGUgbWVhbmluZw0KYmVo
aW5kIGNvdW50aW5nIGEgbnVtYmVyIHBlb3BsZSBoYXZlIGJlZW4gcG9uZGVyaW5nIGZvciBjZW50
dXJpZXMsDQo2NjYuIFRoaXMgbWVzc2FnZSBhbHNvIHNoYXJlcyB3aHkgQmFyYWNrIE9iYW1hIHdp
bGwgYmUgdGhlIEFudGljaHJpc3QNCmFzIHdlbGwgYXMgdGhlIGdvc3BlbCBtZXNzYWdlLiBUaGlz
IGlzIHRydWx5IGEgbWVzc2FnZSBmcm9tIEdvZCENCkluIHRoZSBSZXZlbGF0aW9uIG9mIEplc3Vz
IENocmlzdCBnaXZlbiB0byB0aGUgYXBvc3RsZSBKb2huLCB3ZSByZWFkOg0KLi4iSGUgKHRoZSBm
YWxzZSBwcm9waGV0IHdobyBkZWNlaXZlcyBtYW55IGJ5IGhpcyBtaXJhY2xlcykgY2F1c2VzDQph
bGwsIGJvdGggc21hbGwgYW5kIGdyZWF0LCByaWNoIGFuZCBwb29yLCBmcmVlIGFuZCBzbGF2ZSwg
dG8gcmVjZWl2ZSBhDQptYXJrIG9uIHRoZWlyIHJpZ2h0IGhhbmQgb3Igb24gdGhlaXIgZm9yZWhl
YWRzLCBhbmQgdGhhdCBubyBvbmUgbWF5DQpidXkgb3Igc2VsbCBleGNlcHQgb25lIHdobyBoYXMg
dGhlIG1hcmsgb3IgdGhlIG5hbWUgb2YgdGhlIGJlYXN0LCBvcg0KdGhlIG51bWJlciBvZiBoaXMg
bmFtZS4NCkhlcmUgaXMgd2lzZG9tLiBMZXQgaGltIHdobyBoYXMgdW5kZXJzdGFuZGluZyBjYWxj
dWxhdGUgdGhlIG51bWJlciBvZg0KdGhlIGJlYXN0LCBmb3IgaXQgaXMgdGhlIG51bWJlciBvZiBh
IG1hbjogSGlzIG51bWJlciBpcyA2NjYiDQooUmV2ZWxhdGlvbiAxMzoxNi0xOCBOS0pWKS4uLg0K
UmVmZXJyaW5nIHRvIHRoZSBsYXN0IGdlbmVyYXRpb24sIHRoaXMgY291bGQgb25seSBiZSBzcGVh
a2luZyBvZiBhDQpjYXNobGVzcyBtb25leSBzb2NpZXR5LCB3aGljaCB3ZSBoYXZlIHlldCB0byBz
ZWUsIGJ1dCBhcmUgaGVhZGluZw0KdG93YXJkcy4gV2h5PyBSZXZlbGF0aW9uIDEzOjE3IHRlbGxz
IHVzIHRoYXQgd2UgY2Fubm90IGJ1eSBvciBzZWxsDQp1bmxlc3Mgd2UgcmVjZWl2ZSB0aGUgbWFy
ayBvZiB0aGUgYmVhc3QgaW4gb3VyIHJpZ2h0LWhhbmQgb3IgZm9yZWhlYWQuDQpXZSBjb3VsZCBz
dGlsbCBidXkgb3Igc2VsbCBhbW9uZyBvbmUgYW5vdGhlciB3aXRob3V0IHJlY2VpdmluZyB0aGUN
Cm1hcmsgaWYgcGh5c2ljYWwgbW9uZXkgd2FzIHN0aWxsIGN1cnJlbmN5LiBJdCBsb2dpY2FsbHkg
ZGVkdWNlcyBpdHNlbGYNCnRvIHRoaXMgcmVhc29uLg0KVGhlc2UgdmVyc2VzIGNvdWxkIG5vdCBi
ZSByZWZlcnJpbmcgdG8gc29tZXRoaW5nIHNwaXJpdHVhbCBiZWNhdXNlDQp0aGUgd29yZCByZWZl
cmVuY2VzIHR3byBkaWZmZXJlbnQgcGh5c2ljYWwgbG9jYXRpb25zIChvdXIgcmlnaHQtaGFuZA0K
b3IgZm9yZWhlYWQpIHN0YXRpbmcgdGhlIG1hcmsgd2lsbCBiZSBvbiBvbmUgIk9SIiB0aGUgb3Ro
ZXIuIEl0IG9uY2UNCmFnYWluIGxvZ2ljYWxseSBkZWR1Y2VzIGl0c2VsZiB0byB0aGlzIHJlYXNv
bi4NCkhlcmUgaXMgd2hlcmUgaXQgcmVhbGx5IHN0YXJ0cyB0byBjb21lIHRvZ2V0aGVyLiBJdCBp
cyBzaG9ja2luZyBob3cNCmFjY3VyYXRlIHRoZSBCaWJsZSBpcyBjb25jZXJuaW5nIHRoZSBSRklE
IG1pY3JvY2hpcC4gVGhlc2UgYXJlIG5vdGVzDQpmcm9tIGEgbWFuIG5hbWVkIENhcmwgU2FuZGVy
cyB3aG8gd29ya2VkIHdpdGggYSB0ZWFtIG9mIGVuZ2luZWVycyB0bw0KaGVscCBkZXZlbG9wIHRo
aXMgbWljcm9jaGlwIGluIHRoZSBsYXRlIDE5NjAncy4NCkNhcmwgU2FuZGVycyBzYXQgaW4gc2V2
ZW50ZWVuIE5ldyBXb3JsZCBPcmRlciBtZWV0aW5ncyB3aXRoIGhlYWRzIG9mDQpzdGF0ZSBvZmZp
Y2lhbHMgc3VjaCBhcyBIZW5yeSBLaXNzaW5nZXIgYW5kIEJvYiBHYXRlcyBvZiB0aGUgQ0lBIHRv
DQp0YWxrIGFib3V0IHBsYW5zIG9uIGhvdyB0byBicmluZyBmb3J0aCB0aGlzIG9uZS13b3JsZCBz
eXN0ZW0uIFRoZQ0KZ292ZXJubWVudCBjb21taXNzaW9uZWQgTXIuIFNhbmRlcnMgdG8gaW52ZW50
IGEgbWljcm9jaGlwIGZvcg0KaWRlbnRpZnlpbmcgYW5kIGNvbnRyb2xsaW5nIHRoZSBwZW9wbGVz
IG9mIHRoZSBuYXRpb25zLWEgbWljcm9jaGlwDQp0aGF0IHdvdWxkIGJlIGluc2VydGVkIHVuZGVy
IHRoZSBza2luIHdpdGggYSBoeXBvZGVybWljIG5lZWRsZSAoYQ0KcXVpY2ssIGNvbnZlbmllbnQg
cHJvY2VzcyB0aGF0IHdvdWxkIGJlIHByb2dyZXNzaXZlbHkgYWNjZXB0ZWQgYnkgdGhlDQpwZW9w
bGUpLg0KTXIuIFNhbmRlcnMsIGFsb25nIHdpdGggYSB0ZWFtIG9mIGVuZ2luZWVycyBiZWhpbmQg
aGltLCB3aXRoIFVTIGdyYW50DQptb25pZXMgcHJvdmlkZWQgYnkgVVMgdGF4IGRvbGxhcnMsIHRv
b2sgb24gdGhpcyBwcm9qZWN0IGFuZCBwcm9kdWNlZCBhDQptaWNyb2NoaXAgdGhhdCdzIHBvd2Vy
ZWQgYnkgYSBsaXRoaXVtIGJhdHRlcnksIHJlY2hhcmdlYWJsZSBieSB3YXkgb2YNCnRoZSB0ZW1w
ZXJhdHVyZSBmbHVjdHVhdGlvbnMgaW4gb3VyIHNraW4uIFdpdGggb3V0IGhhdmluZyBrbm93bGVk
Z2Ugb2YNCnRoZSBob2x5IEJpYmxlIChDYXJsIFNhbmRlcnMgd2FzIG5vdCBhIGJlbGlldmVyIGF0
IHRoZSB0aW1lKSwgdGhlc2UNCm1lbiBzcGVudCBvbmUtYW5kLWEtaGFsZi1taWxsaW9uIGRvbGxh
cnMgZG9pbmcgcmVzZWFyY2ggb24gdGhlIGJlc3QNCmFuZCBtb3N0IGNvbnZlbmllbnQgc3BvdCB0
byBoYXZlIHRoZSBtaWNyb2NoaXAgcGxhY2VkIHVuZGVyIHRoZSBza2luLg0KVGhlc2UgcmVzZWFy
Y2hlcnMgZGV0ZXJtaW5lZCB0aGF0IHRoZSBmb3JlaGVhZCBhbmQgdGhlIGJhY2sgb2YgdGhlDQpo
YW5kICh0aGUgdHdvIHNwb3RzIFJldmVsYXRpb24gc2F5cyB0aGUgbWFyayB3aWxsIGJlIHJlY2Vp
dmVkKSBhcmUgbm90DQpvbmx5IHRoZSBtb3N0IGNvbnZlbmllbnQgc3BvdHMsIGhvd2V2ZXIgYXJl
IGFsc28gdGhlIG9ubHkgdmlhYmxlIHNwb3RzDQpmb3IgZmFzdCwgY29uc2lzdGVudCB0ZW1wZXJh
dHVyZSBmbHVjdHVhdGlvbnMgaW5zaWRlIHRoZSBza2luIHRvDQpyZWNoYXJnZSB0aGUgbGl0aGl1
bSBiYXR0ZXJ5LiBUaGUgbWljcm9jaGlwIGlzIGFyb3VuZCA3IG1pbGxpbWV0ZXJzIGluDQpsZW5n
dGgsIC43NSBtaWxsaW1ldGVycyBpbiBkaWFtZXRlciwgYWJvdXQgdGhlIGRpbWVuc2lvbnMgb2Yg
YSBncmFpbg0Kb2YgcmljZS4gSXQgaXMgY2FwYWJsZSBvZiBob2xkaW5nIHBhZ2VzIG9mIGluZm9y
bWF0aW9uIGFib3V0IHlvdS4gQWxsDQpvZiB5b3VyIGdlbmVyYWwgaW5mb3JtYXRpb24sIHdvcmsg
aGlzdG9yeSwgY3JpbWUgZGF0YSwgaGVhbHRoIGRhdGEsDQphbmQgZmluYW5jaWFsIGhpc3Rvcnkg
Y2FuIGJlIHNhdmVkIG9uIHRoaXMgY2hpcC4NCkNhcmwgU2FuZGVycyBiZWxpZXZlcyB0aGF0IHRo
aXMgbWljcm9jaGlwLCB3aGljaCBoZSByZWdyZXRmdWxseQ0KaGVscGVkIGRlc2lnbiwgaXMgdGhl
ICJtYXJrIiBzcG9rZSBvZiBpbiBSZXZlbGF0aW9uIDEzOjE2LTE4LiBUaGUNCm9yaWdpbmFsIEdy
ZWVrIHdvcmQgZm9yICJtYXJrIiBpcyAiY2hhcmFnbWEsIiB3aGljaCBpcyBkZWZpbmVkIGFzIGEN
CiJzY3JhdGNoIG9yIGV0Y2hpbmcuIiBJdCdzIGFsc28gaW50ZXJlc3RpbmcgdG8gb2JzZXJ2ZSB0
aGF0IHRoZSBudW1iZXINCjY2NiBpcyBpbiBmYWN0IGEgd29yZCBpbiB0aGUgb3JpZ2luYWwgR3Jl
ZWsgbGFuZ3VhZ2UuIFRoaXMgd29yZCBiZWluZw0KImNoaSB4aSBzdGlnbWEsIiB3aXRoIHRoZSBs
YXN0IHdvcmQsICJzdGlnbWEsIiBhbHNvIG1lYW5pbmcgInRvIHN0aWNrDQpvciBwcmljay4gQ2Fy
bCBiZWxpZXZlcyB0aGF0IGlzIGFsbHVkaW5nIHRvIHRoZSB1c2FnZSBvZiBhIGh5cG9kZXJtaWMN
Cm5lZWRsZSBiZWluZyBwb2tlZCBpbiB0aGUgaHVtYW4gZmxlc2ggdG8gaW5zZXJ0IHRoZSBtaWNy
b2NoaXAuIg0KQ2FybCBhc2tlZCBhIEJvc3RvbiBNZWRpY2FsIENlbnRlciBkb2N0b3Igd2hhdCB3
b3VsZCBoYXBwZW4gaWYgdGhlDQpsaXRoaXVtIGNvbnRhaW5lZCB3aXRoaW4gdGhlIFJGSUQgbWlj
cm9jaGlwIGxlYWtlZCBpbnRvIHRoZSBib2R5LiBUaGUNCmRvY3RvciByZXNwb25kZWQgdGhhdCBp
ZiB0aGUgbWljcm9jaGlwIGJyb2tlIGluc2lkZSBhIGh1bWFuIGJvZHksIHRoZQ0KbGl0aGl1bSB3
b3VsZCBjYXVzZSBhIHNldmVyZSBhbmQgcGFpbmZ1bCB3b3VuZCBmaWxsZWQgd2l0aCBwdXMuIFRo
aXMNCmlzIHdoYXQgdGhlIHNjcmlwdHVyZXMgb2YgUmV2ZWxhdGlvbiAxNjoyIGhhcyB0byBzYXk6
DQoiQW5kIHRoZSBmaXJzdCAoYW5nZWwpIHdlbnQgYW5kIHBvdXJlZCBvdXQgaGlzIGJvd2wgaW50
byB0aGUgbGFuZOKAlA0KYW5kIGEgYmFkIGFuZCBldmlsIHNvcmUgY2FtZSB1cG9uIHRoZSBwZW9w
bGUgaGF2aW5nIHRoZSBtYXJrIG9mIHRoZQ0KYmVhc3QgYW5kIHRoZSBvbmVzIGdpdmluZyB3b3Jz
aGlwIHRvIGhpcyBpbWFnZSIgKFJldmVsYXRpb24gMTY6Mg0KRExOVCkuDQpUSEUgSElEREVOIE1F
QU5JTkcgQkVISU5EIFRIRSBOVU1CRVIgNjY2IFJFVkVBTEVEIQ0KV2hhdCBJIGZpcnN0IHdhbnQg
dG8gbWVudGlvbiwgYmVmb3JlIEkgc2hhcmUgd2hhdCB0aGUgSG9seSBTcGlyaXQgaGFzDQpyZXZl
YWxlZCB0byBtZSBjb25jZXJuaW5nIHRoZSBudW1iZXIgb2YgdGhlIGJlYXN0LCBpcyB0aGF0IEdv
ZA0KY29uZmlybXMgaW4gdGhyZWVzLiBXZSBjYW4gc2VlIHRoaXMgdGhyb3VnaG91dCBzY3JpcHR1
cmU6DQoiRm9yIHRoZXJlIGFyZSB0aHJlZSB0aGF0IGJlYXIgd2l0bmVzcyBpbiBoZWF2ZW46IHRo
ZSBGYXRoZXIsIHRoZQ0KV29yZCwgYW5kIHRoZSBIb2x5IFNwaXJpdDsgYW5kIHRoZXNlIHRocmVl
IGFyZSBvbmUiICgxIEpvaG4gNTo3IE5LSlYpLg0KImFuZCB0aGF0IEhlIHdhcyBidXJpZWQsIGFu
ZCB0aGF0IEhlIHJvc2UgYWdhaW4gdGhlIHRoaXJkIGRheQ0KYWNjb3JkaW5nIHRvIHRoZSBTY3Jp
cHR1cmVzIiAoMSBDb3JpbnRoaWFucyAxNTo0IE5LSlYpLg0KIi4uLkhvbHksIGhvbHksIGhvbHks
IExvcmQgR29kIEFsbWlnaHR5LCBXaG8gd2FzIGFuZCBpcyBhbmQgaXMgdG8NCmNvbWUhIiAoUmV2
ZWxhdGlvbiA0OjggTktKVikuDQpUaGVyZSBhcmUgbWFueSBtb3JlIGV4YW1wbGVzLCBidXQgSSB0
aG91Z2h0IEkgd291bGQganVzdCBzaGFyZSB0aHJlZQ0Kb2YgdGhlbSB0byBtYWtlIHRoZSBwb2lu
dC4NCkV4YW1pbmluZyBSZXZlbGF0aW9uIDEzOjE2LDE3LDE4LCB0aGUgZmlyc3QgZ3JvdXAgb2Yg
dGhyZWUgSSB3b3VsZA0KbGlrZSB0byBwb2ludCBvdXQgaXMgdGhhdCB0aGUgbWFyayBvZiB0aGUg
YmVhc3QgaXMgZGVzY3JpYmVkIGluIHRocmVlDQpzZXBhcmF0ZSB2ZXJzZXMsIDE2LCAxNyBhbmQg
MTguDQpUaGUgbmV4dCB0aHJlZSBJIHNlZSBpcyBpbiB2ZXJzZSAxNiwgIkhlIGNhdXNlcyBhbGwu
Li4iIGlzIGZvbGxvd2VkDQpieSB0aHJlZSBjb250cmFzdGluZyBjYXRlZ29yaWVzIG9mIHBlb3Bs
ZSwNCjEgLSAiYm90aCBzbWFsbCBhbmQgZ3JlYXQsDQoyIC0gcmljaCBhbmQgcG9vciwNCjMgLSBm
cmVlIGFuZCBzbGF2ZS4uLiIuDQpUaGVuIHVudG8gdmVyc2UgMTcsIGl0IG9wZW5zIHdpdGgsICJh
bmQgdGhhdCBubyBvbmUgbWF5IGJ1eSBvciBzZWxsDQpleGNlcHQgb25lIHdobyBoYXMuLi4iLCBm
b2xsb3dlZCBieSB0aHJlZSBleHBsYW5hdGlvbnMgb2Ygd2hhdCBvbmUNCm11c3QgaGF2ZSB0byBi
dXkgb3Igc2VsbCwNCjEgLSAiLi4udGhlIG1hcmsNCjIgLSBvciB0aGUgbmFtZSBvZiB0aGUgYmVh
c3QsDQozIC0gb3IgdGhlIG51bWJlciBvZiBoaXMgbmFtZSIuDQpOb3cgdW50byB2ZXJzZSAxOCwg
d2UgcmVhZCAiTGV0IGhpbSB3aG8gaGFzIHVuZGVyc3RhbmRpbmcNCmNhbGN1bGF0ZS4uLiIsIHdo
aWNoIGlzIGZvbGxvd2VkIGJ5LMKgDQoxIC0gInRoZSBudW1iZXIgb2YgdGhlIGJlYXN0LA0KMiAt
IGZvciBpdCBpcyB0aGUgbnVtYmVyIG9mIGEgbWFuOg0KMyAtIEhpcyBudW1iZXIgaXMgNjY2Ii4N
ClRoZSBsYXN0IHRocmVlIEkgc2VlIGlzIHRoZSBudW1iZXIgIjYiIGJlaW5nIHVzZWQgdGhyZWUg
dGltZXMgaW4gYQ0Kcm93LiBUaGUgcmVhc29uIEknbSBtYWtpbmcgdGhpcyBwb2ludCBhYm91dCBH
b2QgY29uZmlybWluZyBpbiB0aHJlZSBpcw0KYmVjYXVzZSBpdCBpcyB0aGUga2V5IHRvIHVubG9j
a2luZyBob3cgdG8gY2FsY3VsYXRlIHRoZSBudW1iZXIgNjY2Lg0KVGhyb3VnaG91dCB0aGUgY2Vu
dHVyaWVzIHRoZXJlIGhhdmUgYmVlbiBwZW9wbGUgdHJ5aW5nIHRvIGNhbGN1bGF0ZQ0KbnVtYmVy
cyBiYXNlZCBvbiB0aXRsZXMgYW5kIG5hbWVzIHRoYXQgY29tZSB1cCB0byB0aGUgbnVtYmVyIDY2
NiB0bw0KaWRlbnRpZnkgb25lIHBlcnNvbiwgdGhlIEFudGljaHJpc3Q7IGJ1dCBmcm9tIFJldmVs
YXRpb24gMTM6MTgsIEkgZG8NCm5vdCBzZWUgd2hlcmUgR29kIGlzIHRlbGxpbmcgdXMgdG8gY291
bnQgdXAgdG8gNjY2LCBidXQgcmF0aGVyIHRvDQpjb3VudCB0aGUgbnVtYmVyIG9mIHRoZSBiZWFz
dC4gVGhpcyBudW1iZXIgaXMgaWRlbnRpZmllZCBhcyA2NjYuIFNvDQp0aGUgdmVyc2UgaXMgdGVs
bGluZyB1cyB0byBjb3VudCB0aGUgbnVtYmVyIDY2Ni4NCldoYXQgZG9lcyBpdCBtZWFuIHRvIGNv
dW50PyBJdCBtZWFucyB0byBhZGQgdXAuIFNvIGhvdyBjb3VsZCB3ZSBhZGQNCnVwIDY2Nj8gUmVt
ZW1iZXIgbXkgcHJldmlvdXMgcG9pbnQgYWJvdXQgR29kIGNvbmZpcm1pbmcgaW4gdGhyZWVzIGlz
DQprZXkgdG8gdW5sb2NraW5nIHRoZSBudW1iZXIgNjY2LiBTbyBsb2dpY2FsbHksIHdoYXQgd291
bGQgYmUgdGhlIGJlc3QNCndheSB0byBjb3VudCB0aGUgbnVtYmVyIDY2Nj8gVG8gY291bnQgaXQg
ZXF1YWxseSBieSB1c2luZyB0aGUgcnVsZSBvZg0KdGhyZWUgYmFzZWQgb2ZmIHRoZSBudW1iZXIu
DQpXZSBjYW5ub3QgY291bnQgaXQgZXF1YWxseSBhcyA2MDArNjArNiwgdGhpcyB3b3VsZCBhbHNv
IGJyaW5nIHVzIGJhY2sNCnRvIHRoZSBzdGFydC4NCldlIGNhbm5vdCBjb3VudCBpdCBhcyA2MDAr
NjAwKzYwMCwgb3IgNjArNjArNjAgYmVjYXVzZSB0aGVyZSBhcmUgbm8NCnplcm9lcyBpbiBiZXR3
ZWVuIG9yIGF0IHRoZSBlbmQgb2YgNjY2Lg0KVGhlIG9ubHkgbG9naWNhbCBvcHRpb24gaXMgNis2
KzY9MTguDQpXaGF0IGlzIGludGVyZXN0aW5nIGlzIHRoYXQgdGhlIHZlcnNlIHRoYXQgcmV2ZWFs
cyBmb3IgdXMgdG8gY291bnQNCnRoZSBudW1iZXIgaXRzZWxmIGlzIHZlcnNlIDE4ICh0aGVyZSBh
IHRvdGFsIG9mIDE4IHZlcnNlcyBpbg0KUmV2ZWxhdGlvbiBDaGFwdGVyIDEzKSwgYmVpbmcgdGhl
IHRoaXJkIHZlcnNlIG91dCBvZiB0aGUgdGhyZWUgdmVyc2VzDQp0aGF0IGRlc2NyaWJlIHRoZSBt
YXJrIG9mIHRoZSBiZWFzdCBpbiBSZXZlbGF0aW9uIDEzOjE2LDE3LDE4LiBXaGF0IGlzDQoxOCBk
aXZpZGVkIGJ5IDM/IDYuIFNvIDN4Nj0xOCwgb3IgNis2KzY9MTguDQpBbm90aGVyIGludGVyZXN0
aW5nIHBvaW50IGlzIHRoZSBvbmx5IHR3byBvdGhlciBjb21iaW5hdGlvbnMgKG1ha2luZw0KYSB0
b3RhbCBvZiB0aHJlZSBwb3NzaWJsZSBjb21iaW5hdGlvbnMpIGZvciBwbGFjaW5nIGEgIisiIHN5
bWJvbCBpbg0KYmV0d2VlbiA2NjYgYXJlOg0K4oCiIDY2KzY9NzIgYW5kIDYrNjY9NzIuDQrigKIg
QWRkIGJvdGggNzIncyB0b2dldGhlciBhbmQgeW91IGdldCAxNDQuDQpXaHkgdGhlIG51bWJlciAx
NDQgaXMgd29ydGggb3VyIGF0dGVudGlvbiBpcyBiZWNhdXNlIHRoZSB2ZXJzZQ0KZm9sbG93aW5n
IFJldmVsYXRpb24gMTM6MTggaXMgdGhlIGZpcnN0IHRpbWUgaW4gdGhlIEJpYmxlIHdoZXJlIHRo
ZQ0KMTQ0LDAwMCBhcmUgYmVpbmcgZGVzY3JpYmVkIGluIGRldGFpbDoNCiJUaGVuIEkgbG9va2Vk
LCBhbmQgYmVob2xkLCBhIExhbWIgc3RhbmRpbmcgb24gTW91bnQgWmlvbiwgYW5kIHdpdGgNCkhp
bSBvbmUgaHVuZHJlZCBhbmQgZm9ydHktZm91ciB0aG91c2FuZCwgaGF2aW5nIEhpcyBGYXRoZXLi
gJlzIG5hbWUNCndyaXR0ZW4gb24gdGhlaXIgZm9yZWhlYWRzLi4uIiAoUmV2ZWxhdGlvbiAxNDox
KS4NCk5vdyBpZiB5b3UgYWRkIHVwIGFsbCB0aHJlZSBudW1iZXJzIGZyb20gY291bnRpbmcgNjY2
IGJ5IG1vdmluZyB0aGUNCiIrIiBzeW1ib2wgYXJvdW5kLCBpdCB3b3VsZCBiZSA3Mis3MisxOD0x
NjIuIFdoYXQgaXMgY29tcGVsbGluZyBhYm91dA0KdGhlIG51bWJlciAxNjIsIGlzLCBpZiB5b3Ug
ZGl2aWRlIDE0NCwwMDAgYnkgMTYyLCB5b3UgZ2V0IDg4OC4gVGhlDQpuYW1lIG9mIEplc3VzIGlu
IEdyZWVrIGdlbWF0cmlhIGFkZHMgdXAgdG8gODg4LiBUaGUgTmV3IFRlc3RhbWVudCB3YXMNCm9y
aWdpbmFsbHkgd3JpdHRlbiBpbiB0aGUgR3JlZWsgbGFuZ3VhZ2UuIFJldmVsYXRpb24gMTQ6MSBu
b3Qgb25seQ0KbWVudGlvbnMgdGhlIDE0NCwwMDAsIGJ1dCBhbHNvIHRoZSBMYW1iIHdobyBpcyBK
ZXN1cy4NCk5vdyB3aGF0IGlzIGludGVyZXN0aW5nIGFib3V0IHRoZSBudW1iZXIgZm9yIEplc3Vz
LCA4ODgsIGlzIHRoYXQgaWYNCnlvdSBhcHBseSB0aGUgc2FtZSBmb3JtdWxhIHRoYXQgd2FzIHVz
ZWQgdG8gY291bnQgNjY2LCB5b3UgZ2V0DQo4KzgrOD0yNC4gV2h5IHRoZSBudW1iZXIgMjQ/IFJl
dmVsYXRpb24gY2hhcHRlciA0IHRlbGxzIHVzIHRoZXJlIGFyZQ0KMjQgZWxkZXJzIHNlYXRlZCBh
cm91bmQgdGhlIHRocm9uZSBvZiBHb2QuIFRoaXMgaXMgdGhlIHNhbWUgdGhyb25lDQp3aGVyZSBK
ZXN1cyBzaXRzLg0KTm93IGlmIHlvdSB0YWtlOg0K4oCiIDgrOCs4PTI0DQrigKIgOCs4OD05Ng0K
4oCiIDg4Kzg9OTYNCnlvdSBnZXQgMjQrOTYrOTY9MjE2Lg0KVGFrZSAxNDQsMDAwIGRpdmlkZWQg
YnkgMjE2IGFuZCB5b3UgZ2V0IDY2Ni4NClJlbWVtYmVyIHRoYXQgdGhpcyB3YXMgdGhlIHNhbWUg
ZXhhY3QgZm9ybXVsYSB3ZSB1c2VkIHRvIGNvdW50IHRoZQ0KbnVtYmVyIDY2NiB0aGF0IHVsdGlt
YXRlbHkgYnJvdWdodCBmb3J0aCB0aGUgbnVtYmVyIDg4OC4NCkhlcmUgaXMgYSBxdWljayByZWNh
cCB0byBkZW1vbnN0cmF0ZSBob3cgdGhpcyBmb3JtdWxhIGNvbmZpcm1zIGl0c2VsZg0KYXMgYmVp
bmcgdGhlIHRydWUgd2F5IHRvIGNvdW50IDY2NjoNCjE6IDYrNis2PTE4IMK7IDY2KzY9NzIgwrsg
Nis2Nj03MiDCuyAxOCs3Mis3Mj0xNjINCjI6IDE0NCwwMDAgZGl2aWRlZCBieSAxNjI9ODg4DQoz
OiA4KzgrOD0yNCDCuyA4OCs4PTk2IMK7IDgrODg9OTYgwrsgMjQrOTYrOTY9MjE2DQo0OiAxNDQs
MDAwIGRpdmlkZWQgYnkgMjE2PTY2Ng0KMTogNis2KzY9MTggwrsgNjYrNj03Mi4uLg0KQXMgeW91
IGNhbiBzZWUsIGl0IGlzIHBlcnBldHVhbC4gQW5kIHJlbWVtYmVyIHRoYXQgd2UgY29uc2lzdGVu
dGx5DQp1c2VkIGEgZm9ybXVsYSB0aGF0IHdvcmtlZCBpbiB0aHJlZXMgYmVpbmcgdGhlIG51bWJl
ciB0aGF0IEdvZCB1c2VzDQpmb3IgY29uZmlybWF0aW9uLg0KQnkgdXNpbmcgdGhlIHNhbWUgZm9y
bXVsYXRpb24gb2YgY291bnRpbmcgYnkgYWRkaW5nIHRoZSBwbHVzIHN5bWJvbA0KaW4gYmV0d2Vl
biB0aGUgbnVtYmVycywgd2h5IGRvIGFsbCB0aGVzZSBudW1iZXJzIHJlbGF0ZSBpbiBzdWNoIGEg
d2F5Pw0KVGhlIGJvb2sgb2YgUmV2ZWxhdGlvbiBjb250YWlucyB0aGUgdXNlIG9mIHRoZSBudW1i
ZXIgNyBpbiB2YXJpb3VzDQpmb3Jtcy4gRm9yIGluc3RhbmNlIDcgc2VhbHMsIDcgdHJ1bXBldHMs
IGFuZCA3IGJvd2xzLiBXaGF0IGlzDQppbnRlcmVzdGluZyBhYm91dCB0aGUgbnVtYmVyIDM3ICh0
aHJlZSBzZXZlbnMpIGlzIGlmIGlmIHlvdSBkaXZpZGUgYW55DQpudW1iZXIgdGhhdCBjb250YWlu
cyB0aGUgc2FtZSBzaW5nbGUgZGlnaXQgdGhyZWUgdGltZXMgaW4gYSByb3csIHN1Y2gNCmFzIDEx
MSB0byA5OTksIGl0IGNvbWVzIG91dCB0byB0aGUgdmFsdWUgb2YgaWYgeW91IHdlcmUgdG8gYWRk
IGFsbA0KdGhyZWUgbnVtYmVycyB1cC4gRm9yIGV4YW1wbGUgODg4IGRpdmlkZWQgYnkgMzcgZXF1
YWxzIDI0LiBTbw0KOCs4Kzg9MjQuIE9yIDY2NiBkaXZpZGVkIGJ5IDM3IGVxdWFscyAxOC4gU28g
Nis2KzY9MTguIENvdWxkIHRoaXMgYmUNCmFub3RoZXIgd2F5IG9mIEdvZCdzIHdvcmQgY29uZmly
bWluZyBpdHNlbGYgdGhhdCB0aGUgbXlzdGVyeSBiZWhpbmQNCmNhbGN1bGF0aW5nIHRoZSBudW1i
ZXIgNjY2IGluZGVlZCBpcyAxOD8NCkFub3RoZXIgaW50ZXJlc3RpbmcgcG9pbnQgdG8gb2JzZXJ2
ZSBpcyB0aGF0IGlmIHlvdSBhZGQgdXAgYWxsIHRoZQ0KbnVtYmVycyBmcm9tIDEgdG8gMzYgKDEr
MiszLi4uKzM2KSwgaXQgdG90YWxzIDY2Ni4gVGhlIG51bWJlciAzNiwgYXMNCmluIHRocmVlIHNp
eGVzPyBNYXkgdGhpcyBiZSBhIGhpbnQgdGhhdCB3ZSBtdXN0IGFkZCB1cCB0aHJlZSBzaXhlcw0K
cmF0aGVyIHRoYW4gcGVyY2VpdmluZyB0aGUgbnVtYmVyIGFzIHNpeC1odW5kcmVkIHNpeHR5IHNp
eD8NCk5vdyB3aGF0IGNvdWxkIHRoaXMgaW1wbHk/IFdlbGwgd2Uga25vdyBpbiB0aGlzIHdvcmxk
IHdlIGFyZQ0KcmVjb2duaXplZCBieSBudW1iZXJzIGluIHZhcmlvdXMgZm9ybXMuIFN0YXJ0aW5n
IGZyb20gb3VyIGJpcnRoDQpjZXJ0aWZpY2F0ZSB0byBvdXIgc29jaWFsIHNlY3VyaXR5IGNhcmQs
IGFzIHdlbGwgYXMgb3VyIGRyaXZlcnMNCmxpY2Vuc2UsIGJlaW5nIHJlY29nbml6ZWQgYmFzZWQg
b24gYSBzeXN0ZW0gb2YgcnVsZXIgc2hpcC4gU28gaXQgaXMNCmNvbmNlaXZhYmxlIHRoYXQgdGhp
cyBSRklEIGNoaXAgd2lsbCBjb250YWluIGEgYnJhbmQgbmV3DQppZGVudGlmaWNhdGlvbiB0aGF0
IGhhcyBhIGNvbXBsZXRlIHRvdGFsIG9mIDE4IGNoYXJhY3RlcnMuDQoiaGVyZSB0aGUgd2lzZG9t
IGlzLCB0aGUgb25lIGhhdmluZyB0aGUgbWluZCBsZXQgaGltIGNhbGN1bGF0ZSB0aGUNCm51bWJl
ciBvZiB0aGUgd2lsZCBiZWFzdCwgbnVtYmVyIGZvciAib2YgaHVtYW4iIGl0IGlzLCBhbmQgdGhl
IG51bWJlcg0Kb2YgaXQgNjY2IiAoUmV2ZWxhdGlvbiAxMzoxLCBHcmVlayBUcmFuc2xhdGlvbiku
DQpUaGUgR3JlZWsgd29yZCAiYW50aHLFjXBvcyIgYmVpbmcgdXNlZCBpbiB2ZXJzZSAxOCB3aGVy
ZSBpdCBzYXlzICJvZg0KaHVtYW4iIGlzIHRoZSBHcmVlayBzdHJvbmdzIGNvbmNvcmRhbmNlIEc0
NDQuIFRoZSBmaXJzdCB0d28NCmRlZmluaXRpb25zIG9mIHRoZSB3b3JkIGFyZSAiYSBodW1hbiBi
ZWluZywgd2hldGhlciBtYWxlIG9yIGZlbWFsZSIsDQphbmQsICJnZW5lcmljYWxseSwgdG8gaW5j
bHVkZSBhbGwgaHVtYW4gaW5kaXZpZHVhbHMiLiBDb3VsZCB0aGUgbnVtYmVyDQpvZiB0aGUgYmVh
c3QgYXBwbHkgdG8gYWxsIG1hbmtpbmQ/DQpJbiB0aGUgR3JlZWsgKHRoZSBOZXcgVGVzdGFtZW50
IHdhcyBvcmlnaW5hbGx5IHdyaXR0ZW4gaW4gdGhlIEdyZWVrDQpsYW5ndWFnZSksIGFuZCBvdGhl
ciB0cmFuc2xhdGlvbnMsIHlvdSB3aWxsIG5vdGljZSB0aGUgYmVhc3QgaXMNCmRlc2NyaWJlZCBh
cyBhbiAiaXQiLCBpbnN0ZWFkIG9mICJoaW0iLiBUaGUgcmVhc29uIEknbSBtYWtpbmcgdGhpcw0K
cG9pbnQgaXMgYmVjYXVzZSB3aGVuIGEgdHJhbnNsYXRpb24gc2F5cyAiSGlzIG51bWJlciBpcyA2
NjYiLCB0aGlzDQp3b3VsZCBpbXBseSBhIHNpbmd1bGFyIHBlcnNvbiwgdGhlIEFudGljaHJpc3Qu
IEJ1dCBieSBzYXlpbmcgInRoZQ0KbnVtYmVyIG9mIGl0IDY2NiIsIGltcGxpZXMgdGhhdCBpdCBp
cyBvZiB0aGUgYmVhc3Qgc3lzdGVtIGFzIGEgd2hvbGUuDQpXZSBjYW4ga25vdyB0aGUgbnVtYmVy
IG9mIHRoZSBiZWFzdCBjYW5ub3QgYmUgdG8gaWRlbnRpZnkgcHJvZHVjdHMNCihsaWtlIGEgbmV3
IGJhcmNvZGUpIHRvIGJ1eSBvciBzZWxsIGJlY2F1c2Ugc2NyaXB0dXJlIHNheXMgd2UgY2Fubm90
DQpidXkgb3Igc2VsbCB3aXRob3V0IHRoZSBudW1iZXIgb2YgdGhlIGJlYXN0LiBXaGF0IGFtIEkg
Z2V0dGluZyBhdD8NClRoZXJlIHdpbGwgYmUgaW5zdGFuY2VzIHdoZXJlIHlvdSBjb3VsZCBidXkg
c29tZXRoaW5nIHNvbWVvbmUgbWFkZQ0KdGhlbXNlbHZlcyBhbmQgaXQgd291bGRuJ3QgaGF2ZSBh
IHN0b3JlIGJyYW5kZWQgaWRlbnRpZmljYXRpb24gb24gaXQuDQpCdXQgZm9yIHRoaXMgbnVtYmVy
IHRvIGJlIGluIG91ciBjaGlwcywgdGhhdCBpcyB3aGVyZSBpdCBtdXN0IGJlIHRvDQpjb25jbHVk
ZSB1bHRpbWF0ZWx5IHRoYXQgd2UgY2Fubm90IGJ1eSBvciBzZWxsIHdpdGhvdXQgaGF2aW5nIHRo
ZQ0KbnVtYmVyIG9mIHRoZSBiZWFzdC4gQXMgcHJldmlvdXNseSBtZW50aW9uZWQgaW4gUmV2ZWxh
dGlvbiAxMzoxOCwgdGhlDQpudW1iZXIgb2YgdGhlIGJlYXN0ICg2KzYrNj0xOCkgaXMgYSAiaHVt
YW4gbnVtYmVyIiwgZGVmaW5pdGlvbg0KImdlbmVyaWNhbGx5LCB0byBpbmNsdWRlIGFsbCBodW1h
biBpbmRpdmlkdWFscyIuDQpNYXkgdGhpcyBiZSB0aGUgdGl0bGUgb2YgdGhlIGJlYXN0LCB0aGUg
bnVtYmVyIG9mIGl0cyBuYW1lPyBUaGUNCm9uZS13b3JsZCBiZWFzdCBzeXN0ZW0gdGhhdCBpcyBy
ZWNvZ25pemVkIGJ5IDE4IGNoYXJhY3RlcnM/IFRoaXMgbWlnaHQNCmZpdCB0aGUgc2NyaXB0dXJl
cyB0aGF0IHNwZWFrcyBvZiBhIG1hcmsgdGhhdCB3ZSBtdXN0IGhhdmUgdG8gYnV5IG9yDQpzZWxs
IGluIG91ciByaWdodC1oYW5kIG9yIGZvcmVoZWFkLCBhbmQgdGhhdCBpdCBhZGRpdGlvbmFsbHkg
Y2Fycmllcw0KdGhlIG51bWJlciBvZiB0aGUgYmVhc3QsIGluIHRoZSBjb3Vyc2Ugb2YgYSBmdXR1
cmUgY2FzaGxlc3MgbW9uZXkNCnNvY2lldHkuDQpHbyB0bzogaHR0cDovL2JpYmxlLWZyZWVkb20u
b3JnDQpodHRwOi8vazEyLXRlYWNoaW5nLmxpdmUvaW5kZXgucGhwL2NhbXBhaWduc1tDQU1QQUlH
Tl9VSUQvdHJhY2stdXJsL2xxOTQzdzJsYmo2MTAvNjUzNzllNjdmNTBhYjdjMDE3OWMwM2M1ZGY2
YmM4MGE4ZTM5NTQ5YnxodHRwOi8vdm9pY2UtdHJ1dGgub3JnDQpodHRwOi8vazEyLXRlYWNoaW5n
LmxpdmUvaW5kZXgucGhwL2NhbXBhaWducy94ZzkwMXlyZm9uNGJkL3RyYWNrLXVybC9scTk0M3cy
bGJqNjEwLzdhNzcyMDczNjE2M2FhMmIwYWVjYzRhNWZhYjViZTE1MWM3ZjBmOWV8aHR0cDovL3Jl
dm9sdXRpb25iaWJsZS5vcmcNCmh0dHA6Ly9rMTItdGVhY2hpbmcubGl2ZS9pbmRleC5waHAvY2Ft
cGFpZ25zL3hnOTAxeXJmb240YmQvdHJhY2stdXJsL2xxOTQzdzJsYmo2MTAvMTc4ZTE5YmE4YmI1
MzliMmYzMTU3NDM5ZWVlM2U4ZTE2ZmQ5OGI5Y10NCnRvIHNlZSBhbGwgdGhlIHByb29mIQ0KIldo
eSBkaWQgdGhlIEJpZGVuIGNhbXBhaWduIGNob29zZSAzMDMzMD8gMjAyMCBkaXZpZGVkIGJ5IDY2
NiA9DQozLjAzMzAgV2hvIGJlbGlldmVzIHRoaXMgdG8gYmUgYSBjb2luY2lkZW5jZT8gT2N0b2Jl
ciAyMDIwIElzYWlhaCA1Mzo2DQpTb21lb25lIHNhaWQgd2UgYXJlIGJlaW5nIHdoaXBzYXdlZCBp
biAyMDIwLiBUcnVseSBhIGdyZWF0IGRpdmlzaW9uIGlzDQp0YWtpbmcgcGxhY2UgYmV0d2VlbiBn
b29kIGFuZCBldmls4oCUYm90aCBzeW1ib2xpY2FsbHkgYW5kIGxpdGVyYWxseQ0KKHJpb3RzLCB1
bnJlc3QsIHBvbGl0aWNzKS4gSWYgeW91IHRha2UgdGhlIGN1cnJlbnQgeWVhciAyMDIwIGFuZA0K
ZGl2aWRlIGl0IGJ5IHRoZSBudW1iZXIgNjY2IChrbm93biBmb3IgaXRzIHNhdGFuaWMgaW1wbGlj
YXRpb25zKSB5b3UNCndpbGwgZ2V0IHRoZSBudW1iZXIgMzAzMzAgKHJlcGVhdGVkKS4gVGhpcyBu
dW1iZXIgMzAzMzAgaGFwcGVucyB0byBiZQ0KdGhlIG51bWJlciB1c2VkIHRvIHZvdGUgZm9yIEpv
ZSBCaWRlbiBhbmQgS2FtYWxhIEhhcnJpcy4gRnJlYWt5Pw0KU3VwZXJuYXR1cmFsPyBPZGQgZm9y
IHN1cmUuIFdoYXRldmVyIHRoaXMgbWVhbnMsIGl0IGRvZXNu4oCZdCBzZWVtDQpnb29kIHRvIG1l
LiBGaXJzdCwgd2h5IHdvdWxkIGFueW9uZSBrbm93aW5nbHkgY2hvb3NlIHRob3NlIHBhcnRpY3Vs
YXINCm51bWJlcnMgZm9yIHRoZWlyIGNhbXBhaWduPyBJZiB0aGV5IHdlcmVu4oCZdCBrbm93aW5n
bHkgY2hvc2VuLCB0aGVuDQppdCBhcHBlYXJzIHRvIGJlIGEgc3VwZXJuYXR1cmFsIGFjdCBieSB0
aGUgZXZpbCBvbmUgaGltc2VsZiBhbmQgSQ0Kd291bGQgd2FudCB0byBjaGFuZ2UgdGhvc2UgbnVt
YmVycyBBU0FQLiBBbmQgaWYgdGhlIG51bWJlcnMgd2VyZQ0KY2hvc2VuIGtub3dpbmcgdGhlaXIg
c2lnbmlmaWNhbmNlLCBhcmUgeW91IHNhdGFuaWM/IElzIHRoaXMgY2FtcGFpZ24NCnNhdGFuaWM/
IEVpdGhlciB3YXkgSSBkbyBub3QgYmVsaWV2ZSB0aGlzIGlzIGEgY29pbmNpZGVuY2UuIEFuZCBv
bmUNCnRoaW5nIGlzIGNlcnRhaW4sIDIwMjAgaXMgdHJ1bHkgYmVpbmcgZGl2aWRlZCBieSBTYXRh
bi4gSGUgaXMgdGhlDQptYXN0ZXIgZGVjZWl2ZXIgYW5kIHNwcmVhZGVyIG9mIGNoYW9zLiBKZXN1
cyBjYWxscyBoaW0gdGhlIGZhdGhlciBvZg0KbGllcy4iDQpTbyBJIGxvb2tlZCB1cCB0aGlzIG51
bWJlciAzMDMzMCBjb25jZXJuaW5nIEpvZSBCaWRlbiwgYW5kIEkgZm91bmQNCnRoaXMgaW5mb3Jt
YXRpb246wqANCklmIHlvdSBzZW5kIGEgdGV4dCB0byB0aGF0IG51bWJlciAoYXQgdGhhdCB0aW1l
KSwgeW91IHdvdWxkIGdldCBhDQpyZXNwb25zZSBhc2tpbmcgdG8gc3VwcG9ydCBKb2UncyBjYW1w
YWlnbiB0byB0YWtlIGRvd24gRG9uYWxkIFRydW1wLA0Kd2l0aCBvbmUgcGFydCBpbiBjYXBzIHNh
eWluZyAiQ0hJUCBJTiA+PiIgcG9pbnRpbmcgdG8gYSBsaW5rIHRvIGdvIGFuZA0KZG9uYXRlLg0K
IkNISVAgSU4iPyBPYmFtYSBoYXMgdXNlZCB0aGlzIHBocmFzZSBpbiB0aGUgcGFzdCBvbiBoaXMg
dHdpdHRlciBhbmQNCnBlb3BsZSBiZWxpZXZlIGl0IGlzIGEgc3VibGltaW5hbCBtZXNzYWdlIHRv
IHJlY2VpdmUgdGhlIG1hcmsgb2YgdGhlDQpiZWFzdCwgdGhhdCBpcyB0byBzYXkgdGhlIGltcGxh
bnRhYmxlIFJGSUQgbWljcm9DSElQIHRoYXQgd2lsbCBnbyBJTg0Kb3VyIGJvZHkuDQpHb2QncyB3
b3JkIHdhcm5zIHVzIGluIHRoZSBsYXN0IGRheXMgdGhhdCBhIGZhbHNlIHByb3BoZXQgd2lsbCBy
aXNlDQp1cCBwZXJmb3JtaW5nIG1pcmFjbGVzIGRlY2VpdmluZyBtYW55IHRvIGFjcXVpcmUgdGhp
cyBtYXJrOg0KLi4iQW5kIHRoZSBiZWFzdCB3YXMgdGFrZW4sIGFuZCB3aXRoIGhpbSB0aGUgZmFs
c2UgcHJvcGhldCB0aGF0DQp3cm91Z2h0IHRoZSBzaWducyBpbiBoaXMgc2lnaHQsIHdoZXJld2l0
aCBoZSBkZWNlaXZlZCB0aGVtIHRoYXQgaGFkDQpyZWNlaXZlZCB0aGUgbWFyayBvZiB0aGUgYmVh
c3QgYW5kIHRoZW0gdGhhdCB3b3JzaGlwcGVkIGhpcyBpbWFnZToNCnRoZXkgdHdvIHdlcmUgY2Fz
dCBhbGl2ZSBpbnRvIHRoZSBsYWtlIG9mIGZpcmUgdGhhdCBidXJuZXRoIHdpdGgNCmJyaW1zdG9u
ZSIgKFJldmVsYXRpb24gMTk6MjAgQVNWKS4uDQpBdCBhbGwgY29zdHMsIERPIE5PVCBUQUtFIElU
IQ0KIlRoZW4gYSB0aGlyZCBhbmdlbCBmb2xsb3dlZCB0aGVtLCBzYXlpbmcgd2l0aCBhIGxvdWQg
dm9pY2UsICJJZg0KYW55b25lIHdvcnNoaXBzIHRoZSBiZWFzdCBhbmQgaGlzIGltYWdlLCBhbmQg
cmVjZWl2ZXMgaGlzIG1hcmsgb24gaGlzDQpmb3JlaGVhZCBvciBvbiBoaXMgaGFuZCwgaGUgaGlt
c2VsZiBzaGFsbCBhbHNvIGRyaW5rIG9mIHRoZSB3aW5lIG9mDQp0aGUgd3JhdGggb2YgR29kLCB3
aGljaCBpcyBwb3VyZWQgb3V0IGZ1bGwgc3RyZW5ndGggaW50byB0aGUgY3VwIG9mDQpIaXMgaW5k
aWduYXRpb24uIEhlIHNoYWxsIGJlIHRvcm1lbnRlZCB3aXRoIGZpcmUgYW5kIGJyaW1zdG9uZSBp
biB0aGUNCnByZXNlbmNlIG9mIHRoZSBob2x5IGFuZ2VscyBhbmQgaW4gdGhlIHByZXNlbmNlIG9m
IHRoZSBMYW1iLiBBbmQgdGhlDQpzbW9rZSBvZiB0aGVpciB0b3JtZW50IGFzY2VuZHMgZm9yZXZl
ciBhbmQgZXZlcjsgYW5kIHRoZXkgaGF2ZSBubyByZXN0DQpkYXkgb3IgbmlnaHQsIHdobyB3b3Jz
aGlwIHRoZSBiZWFzdCBhbmQgaGlzIGltYWdlLCBhbmQgd2hvZXZlcg0KcmVjZWl2ZXMgdGhlIG1h
cmsgb2YgaGlzIG5hbWUiIChSZXZlbGF0aW9uIDE0OjktMTEpLg0KV2UgYXJlIGR3ZWxsaW5nIGlu
IHZlcnkgcHJvcGhldGljIHRpbWVzIHdpdGggdmVyeSBpbXBvcnRhbnQgQmlibGljYWwNCnByb3Bo
ZWNpZXMgYmVpbmcgZnVsZmlsbGVkLg0KV2hlbiBEb25hbGQgVHJ1bXAgYWNrbm93bGVkZ2VkIEpl
cnVzYWxlbSBhcyBjYXBpdGFsIG9mIElzcmFlbCBvbg0KRGVjZW1iZXIgNnRoIG9mICcxNywgdGhp
cyB3YXMgYSBodWdlIHN0ZXAgdG8gYnJpbmcgZm9ydGggdGhlIFRoaXJkDQpUZW1wbGUgcHJvcGhl
c2llZCBpbiB0aGUgQmlibGUuDQpUaGUgQmlibGUgdGVsbHMgdXMgdGhhdCB0aGUgQW50aWNocmlz
dCB3aWxsIHNlYXQgaGltc2VsZiBpbiB0aGlzDQp0ZW1wbGU6DQoiLi4uYW5kIHRoZSBtYW4gb2Yg
c2luIGlzIHJldmVhbGVkLCB0aGUgc29uIG9mIHBlcmRpdGlvbiwgd2hvIG9wcG9zZXMNCmFuZCBl
eGFsdHMgaGltc2VsZiBhYm92ZSBhbGwgdGhhdCBpcyBjYWxsZWQgR29kIG9yIHRoYXQgaXMgd29y
c2hpcGVkLA0Kc28gdGhhdCBoZSBzaXRzIGFzIEdvZCBpbiB0aGUgdGVtcGxlIG9mIEdvZCwgc2hv
d2luZyBoaW1zZWxmIHRoYXQgaGUNCmlzIEdvZCIgKDIgVGhlc3NhbG9uaWFucyAyOjMtNCkuDQpX
aXRoaW4gdGhlIElzbGFtaWMgZmFpdGgsIHRoZXJlIGlzIGEgZmlndXJlIHJlZmVycmVkIHRvIGFz
IHRoZSBNYWhkaSwNCnJlZmVycmVkIHRvIGFzIHRoZWlyIG1lc3NpYWggd2hvIHRoZXkncmUgZWFn
ZXJseSB3YWl0aW5nIHRvIGFwcGVhci4NClRoZXJlIGFyZSB2YXJpb3VzIHRlc3RpbW9uaWVzIGZy
b20gaW5kaXZpZHVhbHMgb24gbGluZSB3aG8gYmVsaWV2ZQ0KdGhpcyBtYW4gc2hhbGwgYmUgQmFy
YWNrIE9iYW1hIHdobyBtYXkgYmUgdGhlIGJpYmxpY2FsIEFudGljaHJpc3QuIEkNCmhhdmUgaGFk
IHVudXN1YWwgZHJlYW1zIGNvbmNlcm5pbmcgaGltLiBIZSBjYW1lIG9uIHN0YWdlIGRlY2xhcmlu
Zw0KaGltc2VsZiB0byBiZSBhIENocmlzdGlhbiB3aXRoIG5vIGFmZmlsaWF0aW9uIHRvIHRoZSBN
dXNsaW0gcmVsaWdpb24sDQpidXQgd2FzIGxhdGVyIHJldmVhbGVkIGJ5IGhpcyBvd24gZmFtaWx5
IG1lbWJlcnMgdGhhdCBoZSBpbmRlZWQgaXMgYQ0KcmVsaWdpb3VzIE11c2xpbS4NClNvIHdoYXQn
cyBpbiB0aGUgbmFtZT8gVGhlIG1lYW5pbmcgb2Ygc29tZW9uZXMgbmFtZSBjYW4gc2F5IGEgbG90
DQphYm91dCBhIHBlcnNvbi4gR29kIHRocm91Z2hvdXQgaGlzdG9yeSBoYXMgZ2l2ZW4gbmFtZXMg
dG8gcGVvcGxlIHRoYXQNCmhhdmUgYSBzcGVjaWZpYyBtZWFuaW5nIHRpZWQgdG8gdGhlaXIgbGl2
ZXMuIEhvdyBhYm91dCB0aGUgbmFtZSBCYXJhY2sNCk9iYW1hPyBMZXQgdXMgdGFrZSBhIGxvb2sg
YXQgd2hhdCBtYXkgYmUgaGlkaW5nIGJlbmVhdGggdGhlIHN1cmZhY2UuLi4NCkplc3VzIHNheXMs
ICJBbmQgSGUgc2FpZCB0byB0aGVtLCAnSSBzYXcgU2F0YW4gZmFsbCBsaWtlIGxpZ2h0bmluZw0K
ZnJvbSBoZWF2ZW4nIiAoTHVrZSAxMDoxOCkuDQpJbiBIZWJyZXcsIHRoZSB3b3JkICJCYXJhY2si
IG1lYW5zICJsaWdodGluZyIsIGFuZCB0aGUgdXNhZ2Ugb2YNCiJCYW1hIiAoU3Ryb25ncyBIZWJy
ZXcgcGhyYXNlIDExMTYpIGlzIHVzZWQgdG8gbWVhbiB0aGUgImhlaWdodHMiIG9mDQpoZWF2ZW4u
DQrCoA0KVGhlIGRheSBhZnRlciB0aGUgZWxlY3Rpb24gb2YgQmFyYWNrIE9iYW1hICgxMS8wNC8w
OCksIHRoZSBwcmV2YWlsaW5nDQpjaG9vc2UgMyBsb3R0byBudW1iZXJzIGluIElsbGlub2lzIChP
YmFtYeKAmXMgZG9tZXN0aWMgc3RhdGUpIGZvcg0KMTEvNS8wOCB3ZXJlIDY2Ni4NCk9iYW1hIHdh
cyBmb3JtZXJseSBhIFUuUy4gc2VuYXRvciBmb3IgSWxsaW5vaXMsIGFuZCBoaXMgemlwIGNvZGUg
d2FzDQo2MDYwNi4NClJlZ2FyZGxlc3MsIHdob21zb2V2ZXIgc2VhdHMgdGhlbXNlbHZlcyBpbiB0
aGUgZnV0dXJlIFRoaXJkIFRlbXBsZQ0KdGhhdCBpcyB0byBiZSBidWlsdCBpbiBKZXJ1c2FsZW0s
IGRlY2xhcmluZyB0aGVtc2VsdmVzIHRvIGJlIEdvZCBJUw0KVEhFIEFOVElDSFJJU1QuIERPIE5P
VCBCRSBMRUFEIEFTVFJBWS4NCldoeSBkbyB3ZSBuZWVkIEplc3VzPw0KImZvciBhbGwgaGF2ZSBz
aW5uZWQgYW5kIGZhbGwgc2hvcnQgb2YgdGhlIGdsb3J5IG9mIEdvZCIgKFJvbWFucw0KMjoyMyku
DQoiRm9yIHRoZSB3YWdlcyBvZiBzaW4gaXMgZGVhdGgsIGJ1dCB0aGUgZ2lmdCBvZiBHb2QgaXMg
ZXRlcm5hbCBsaWZlDQppbiBDaHJpc3QgSmVzdXMgb3VyIExvcmQiIChSb21hbnMgNjoyMykuDQpP
dXIgb3duIHdvcmtzIGNhbm5vdCBzYXZlIHVzIGZyb20gb3VyIHNpbnMuIElmIHdlIHN0ZXAgaW4g
ZnJvbnQgb2YgYQ0KanVkZ2UgaW4gdGhlIGNvdXJ0IG9mIGxhdywgYmVpbmcgZ3VpbHR5IG9mIGEg
Y3JpbWUsIHRoZSBqdWRnZSB3b24ndA0KanVkZ2UgdXMgYnkgdGhlIGdvb2QgdGhhdCB3ZSBoYXZl
IGFjY29tcGxpc2hlZCwgYnV0IHJhdGhlciB0aGUgY3JpbWVzDQp3ZSBoYXZlIGNvbW1pdHRlZC4g
SWYgd2UgYXMgZmFsbGVuIGh1bWFuaXR5LCBjcmVhdGVkIGluIEdvZCdzIGltYWdlLA0KcG9zZSB0
aGlzIGtpbmQgb2YgbW9yYWwganVzdGljZSwgaG93IG11Y2ggbW9yZSBhIHBlcmZlY3QsIHJpZ2h0
ZW91cywNCmFuZCBIb2x5IGNyZWF0b3I/DQpHb2QgaGFzIGRlbGl2ZXJlZCB0byB1cyBIaXMgbW9y
YWwgcmVndWxhdGlvbidzIGJ5IG1lYW5zIG9mIHRoZSB0ZW4NCmNvbW1hbmRtZW50cyBoYW5kZWQg
dG8gTW9zZXMgYXQgTXQuIFNpYW5pLiBUaGVzZSBsZWdhbCBndWlkZWxpbmVzIHdlcmUNCm5vdCBn
aXZlbiBzbyB3ZSBtYXkgYmUganVzdGlmaWVkLCBidXQgaW4gb3JkZXIgdGhhdCB3ZSBtaWdodCBz
ZWUgdGhlDQpuZWVkIGZvciB0aGUgc2F2aW91ci4gVGhleSdyZSB0aGUgbWlycm9yIG9mIEdvZCdz
IGNoYXJhY3RlciBvZiB3aGF0IEhlDQpoYXMgcHV0IGluIGVhY2ggb2YgdXMsIHdpdGggb3VyIGNv
bnNjaW91cyBiZWFyaW5nIHdpdG5lc3MgdGhhdCB3ZSBrbm93DQp0aGF0IGl0IGlzIHdyb25nIHRv
IHN0ZWFsLCBsaWUsIGRpc2hvbm9yIG91ciBkYWQgYW5kIG1vbSwgYW5kIHNvDQpmb3J0aC4NCldl
IG1heSBhdHRlbXB0IHRvIGZvbGxvdyBhbGwgdGhlIG1vcmFsIGd1aWRlbGluZXMgb2YgdGhlIHRl
bg0KY29tbWFuZG1lbnRzLCBidXQgd2UnbGwgbmV2ZXIgY2F0Y2ggdXAgdG8gdGhlbSB0byBiZSBq
dXN0aWZpZWQgYmVmb3JlDQphIEhvbHkgR29kLiBUaGUgc2FtZSB3b3JkIG9mIHRoZSBsYXcgcmVj
ZWl2ZWQgYnkgTW9zZXMgYmVjYW1lIGZsZXNoDQpvdmVyIDIwMDAgeWVhcnMgYWdvIGluc2lkZSB0
aGUgYm9keSBvZiBKZXN1cyBDaHJpc3QuIEhlIHdhcyBicm91Z2h0DQpmb3J0aCB0byBiZSBvdXIg
anVzdGlmaWNhdGlvbiBieSBwZXJmZWN0bHkgZnVsZmlsbGluZyB0aGUgbGF3LCBsaXZpbmcNCmEg
c2lubGVzcyBsaWZlIHRoYXQgb25seSBHb2QgY291bGQgZnVsZmlsbC4NClRoZSBkaXN0YW5jZSBi
ZXR3ZWVuIHVzIGFuZCB0aGUgbGF3IG9mIEdvZCBjYW4gbmV2ZXIgYmUgcmVjb25jaWxlZCBieQ0K
b3VyIG93biBwZXJzb25hbCBtZXJpdCwgYnV0IHRoZSBhcm0gb2YgSmVzdXMgaXMgc3RyZXRjaGVk
IG91dCBieSB0aGUNCmdyYWNlIGFuZCBtZXJjeSBvZiBHb2QuIEFuZCBpZiB3ZSBhcmUgdG8gZ3Jh
YiBvbiwgYnkgbWVhbnMgb2YgZmFpdGggaW4NCkhpbSwgSGUgd2lsbCBwdWxsIHVzIGZvcndhcmQg
YmVpbmcgdGhlIG9uZSB0byBqdXN0aWZ5IHVzLiBBcyBpbnNpZGUNCnRoZSBjb3VydCBvZiBsYXcs
IGlmIHNvbWVvbmUgc3RlcHMgaW4gYW5kIHBheXMgeW91ciBmaW5lLCBkZXNwaXRlIHRoZQ0KZmFj
dCB0aGF0IHlvdSdyZSBndWlsdHksIHRoZSBqdWRnZSBjYW4gZG8gd2hhdCBpcyBsZWdhbCBhbmQg
anVzdCBhbmQNCmFsbG93IHlvdSB0byBnbyBmcmVlLiBUaGF0IGlzIHdoYXQgSmVzdXMgZGlkIG5l
YXJseSAyMDAwIHllYXJzIGluIHRoZQ0KcGFzdCBvbiB0aGUgY3Jvc3MuIEl0IHdhcyBhIGxlZ2Fs
IHRyYW5zYWN0aW9uIGJlaW5nIGZ1bGZpbGxlZCBpbnNpZGUNCnRoZSBzcGlyaXR1YWwgcmVhbG0g
YnkgdGhlIHNoZWRkaW5nIG9mIEhpcyBibG9vZCwgd2l0aCBIaXMgbGFzdCB3b3Jkcw0KYmVpbmcs
ICIuLi5JdCBpcyBmaW5pc2hlZCEuLi4iIChKb2huIDE5OjMwKS4NCk5vdyB3aHkgZGlkIEplc3Vz
IGhhdmUgdG8gZGllIGZvciB1cz8NCkJlY2F1c2UgR29kIGlzIEhvbHkgYW5kIGp1c3QsIHRoZSB3
cmF0aCB0aGF0IHdlIGRlc2VydmUgY291bGQgbm90IGJlDQpvdmVybG9va2VkLiBUaHJvdWdoIHRo
ZSBwZXJmZWN0IHJpZ2h0ZW91c25lc3MgYW5kIGp1c3RpY2Ugb2YgR29kJ3MNCmNoYXJhY3Rlciwg
aXQgbXVzdCBiZSBkZWFsdCB3aXRoLCBpdCBtdXN0IGJlIHF1ZW5jaGVkIGFuZCBzYXRpc2ZpZWQu
DQpGb3IgR29kIHRha2VzIG5vIHBsZWFzdXJlIGluIHRoZSBkZW1pc2Ugb2YgdGhlIHdpY2tlZCAo
RXpla2llbA0KMTg6MjMpLiBUaGF0IGlzIHdoeSBpbiBJc2FpYWggY2hhcHRlciA1MywgdGhlIHBs
YWNlIGl0IHNwZWFrcyBvZiB0aGUNCmNvbWluZyBNZXNzaWFoIGFuZCBIaXMgc291bCBiZWluZyBh
IHNhY3JpZmljZSBmb3Igb3VyIHNpbnMsIHdoeSBpdA0Kc2F5cyBpdCBwbGVhc2VkIEdvZCB0byBj
cnVzaCBIaXMgb25seSBiZWdvdHRlbiBTb24uDQpUaGF0IGlzIGJlY2F1c2UgdGhlIHdyYXRoIHRo
YXQgd2UgZGVzZXJ2ZSB3YXMganVzdGlmaWVkIGJ5IGJlaW5nDQpwb3VyZWQgb3V0IHVwb24gSGlz
IFNvbi4gRm9yIGlmIGl0IHdhcyBwb3VyZWQgb3V0IG9uIHVzIHdobyd2ZSBlYXJuZWQNCml0LCB3
ZSdkIGFsbCBkaWUgYW5kIGdvIHRvIGhlbGwuIEdvZCBjcmVhdGVkIGEgd2F5IG9mIGVzY2FwZSBi
eQ0KcG91cmluZyBpdCBvdXQgb24gSGlzIFNvbiB3aG8ncyBzb3VsIGNvdWxkIG5vdCBzdGF5IGlu
IEhhZGVzLCBidXQgd2FzDQpyYWlzZWQgYW5kIHNlYXRlZCBvbiB0aGUgcmlnaHQgaGFuZCBvZiBH
b2QgaW4gcG93ZXIuDQpTbyBub3cgYWZ0ZXIgd2UgcHV0IG9uIHRoZSBMb3JkIEplc3VzIENocmlz
dCAoUm9tYW5zIDEzOjE0KSwgR29kIG5vDQpsb25nZXIgc2VlJ3MgdGhlIG1hbiBvciB3b21hbiB3
aG8gZGVzZXJ2ZXMgSGlzIHdyYXRoLCBidXQgdGhlIGdsb3Jpb3VzDQppbWFnZSBvZiBIaXMgcGVy
ZmVjdCBTb24gZHdlbGxpbmcgaW4gdXMsIGp1c3RpZnlpbmcgdXMgYXMgaWYgd2UNCm9idGFpbmVk
IHRoZSB3cmF0aCB3ZSBkZXNlcnZlLCBtYWtpbmcgYSB3YXkgb2YgZXNjYXBlIGZyb20gdGhlIGN1
cnNlDQpvZiBkZWF0aC4NCk5vdyB3aGF0IHdlIG11c3QgZG8gaXMgcmVwZW50IGFuZCB0cnVzdCBp
biB0aGUgc2F2aW91ciwgY29uZmVzc2luZw0KYW5kIGZvcnNha2luZyBvdXIgc2lucy4gVGhhdCBp
cyBub3QganVzdCBhIGhlYWQga25vd2xlZGdlIG9mIGJlbGlldmluZw0KaW4gSmVzdXMsIGJ1dCBy
YXRoZXIgcmVjZWl2aW5nIEhpcyB3b3JkcywgdGFraW5nIHRoZW0gdG8gaGVhcnQuIEluDQp3aGlj
aCB3ZSBubyBsb25nZXIgbGl2ZSB0byBwcmFjdGljZSBzaW4sIGJ1dCB0dXJuIGZyb20gb3VyIHNp
bnMgYW5kDQpwcmFjdGljZSByaWdodGVvdXNuZXNzOg0KIkRvIHlvdSBub3Qga25vdyB0aGF0IHRo
ZSB1bnJpZ2h0ZW91cyB3aWxsIG5vdCBpbmhlcml0IHRoZSBraW5nZG9tIG9mDQpHb2Q/IERvIG5v
dCBiZSBkZWNlaXZlZC4gTmVpdGhlciBmb3JuaWNhdG9ycywgbm9yIGlkb2xhdGVycywgbm9yDQph
ZHVsdGVyZXJzLCBub3IgaG9tb3NleHVhbHMsIG5vciBzb2RvbWl0ZXMsIG5vciB0aGlldmVzLCBu
b3IgY292ZXRvdXMsDQpub3IgZHJ1bmthcmRzLCBub3IgcmV2aWxlcnMsIG5vciBleHRvcnRpb25l
cnMgd2lsbCBpbmhlcml0IHRoZSBraW5nZG9tDQpvZiBHb2QuIEFuZCBzdWNoIHdlcmUgc29tZSBv
ZiB5b3UuIEJ1dCB5b3Ugd2VyZSB3YXNoZWQsIGJ1dCB5b3Ugd2VyZQ0Kc2FuY3RpZmllZCwgYnV0
IHlvdSB3ZXJlIGp1c3RpZmllZCBpbiB0aGUgbmFtZSBvZiB0aGUgTG9yZCBKZXN1cyBhbmQNCmJ5
IHRoZSBTcGlyaXQgb2Ygb3VyIEdvZCIgKDEgQ29yaW50aGlhbnMgNjo5LTExKS4NCkJ5IGRvaW5n
IHNvIHdlIG1heSBiZWNvbWUgdHJhbnNmb3JtZWQgaW50byB0aGUgaW1hZ2Ugb2YgR29kIGJ5IG1l
YW5zDQpvZiBmYWl0aCBpbiBIaXMgU29uIENocmlzdCBKZXN1cyBXaG8gaXMgd2lsbGluZyB0byBn
aXZlIHRoZSBIb2x5DQpTcGlyaXQgdG8gd2hvZXZlciBhc2sgb2YgSGltOg0KIk1vc3QgYXNzdXJl
ZGx5LCBJIChKZXN1cykgc2F5IHRvIHlvdSwgdW5sZXNzIG9uZSBpcyBib3JuIG9mIHdhdGVyDQph
bmQgdGhlIFNwaXJpdCwgaGUgY2Fubm90IGVudGVyIHRoZSBraW5nZG9tIG9mIEdvZC4gVGhhdCB3
aGljaCBpcyBib3JuDQpvZiB0aGUgZmxlc2ggaXMgZmxlc2gsIGFuZCB0aGF0IHdoaWNoIGlzIGJv
cm4gb2YgdGhlIFNwaXJpdCBpcyBzcGlyaXQuDQpEbyBub3QgbWFydmVsIHRoYXQgSSBzYWlkIHRv
IHlvdSwgJ1lvdSBtdXN0IGJlIGJvcm4gYWdhaW4uJyAoSm9obg0KMzo1LTYpLg0KIkJ1dCB5b3Ug
YXJlIG5vdCBpbiB0aGUgZmxlc2ggYnV0IGluIHRoZSBTcGlyaXQsIGlmIGluZGVlZCB0aGUgU3Bp
cml0DQpvZiBHb2QgZHdlbGxzIGluIHlvdS4gTm93IGlmIGFueW9uZSBkb2VzIG5vdCBoYXZlIHRo
ZSBTcGlyaXQgb2YNCkNocmlzdCwgaGUgaXMgbm90IEhpcyIgKFJvbWFucyA4OjkpLg0KV2hhdCBh
cmUgeW91IHdhaXRpbmcgZm9yPyBPdXIgRmF0aGVyIGluIGhlYXZlbiBvbmx5IHdhbnRzIHRoZSBi
ZXN0DQpmb3IgdXMgYWxsLCByZXN0b3JpbmcgZXZlcnl0aGluZyB0aGlzIHdvcmxkIGhhcyBzdG9s
ZW4gZnJvbSB1cy4gVGhhdA0KaXMgd2hhdCBpdCBtZWFucyB0byBiZSAiaG9seSIuIFRvIGJlIG1h
ZGUgd2hvbGUuDQpIZSdzIHJlYWR5IHRvIGhlYXIgZnJvbSB5b3UuIFRoYXQgR29kIGdpdmVuIHRv
bmd1ZSB0byBzcGVhayBsYW5ndWFnZSwNCnRocm91Z2ggZmFpdGgsIHByYXkgdG8gSGltLCBhc2sg
SGltIHRvIGZvcmdpdmUgeW91IGJ5IGNvbmZlc3NpbmcgeW91cg0Kc2lucyBhbmQgYmUgd2lsbGlu
ZyB0byBmb3JzYWtlIHRoZW07IHRoYXQgeW91IHJlY2VpdmUgdGhlIHNhY3JpZmljZSBvZg0KSGlz
IFNvbiBKZXN1cyBvbiB0aGUgY3Jvc3MsIGFuZCB0aGF0IHlvdSBuZWVkIEhpcyBIb2x5IFNwaXJp
dCBkd2VsbGluZw0KaW5zaWRlIHlvdSByZXdvcmtpbmcgeW91IGludG8gYSBjaGlsZCBvZiB0aGUg
bGl2aW5nIEdvZC4NCkplc3VzIHNheXMsICJidXQgd2hvZXZlciBkcmlua3Mgb2YgdGhlIHdhdGVy
IHRoYXQgSSBzaGFsbCBnaXZlIGhpbQ0KKHRoZSBIb2x5IFNwaXJpdCkgd2lsbCBuZXZlciB0aGly
c3QuIEJ1dCB0aGUgd2F0ZXIgdGhhdCBJIHNoYWxsIGdpdmUNCmhpbSB3aWxsIGJlY29tZSBpbiBo
aW0gYSBmb3VudGFpbiBvZiB3YXRlciBzcHJpbmdpbmcgdXAgaW50bw0KZXZlcmxhc3RpbmcgbGlm
ZS4iDQpEaWQgeW91IHJlYWxpemUgdGhhdCBKZXN1cyBzcG9rZSBtb3JlIGFib3V0IGhlbGwgdGhh
biBhbnkgb25lIGluDQpHb2QncyBob2x5IHdvcmQsIGV2ZW4gbW9yZSB0aGFuIEhlIHNwb2tlIGFi
b3V0IGhlYXZlbj8hIEZvciB0aGlzIHZlcnkNCmNhdXNlIEhlIHdhcyBicm91Z2h0IGZvcnRoIHRv
IGRpZSBmb3IgdXMsIHRvIHJlc2N1ZSB1cyBmcm9tIHRoaXMgcGxhY2UNCnRoYXQgd2UgZGVzZXJ2
ZS4NCsKgDQpIZSBkZXNjcmliZXMgaGVsbCBhcyBhIGFjdHVhbCBwbGFjZSB3aGVyZSwNCiJUaGVp
ciB3b3JtIGRvZXMgbm90IGRpZQ0KQW5kIHRoZSBmaXJlIGlzIG5vdCBxdWVuY2hlZCIgKE1hcmsg
OTo0NCkuDQpBbmQgd2hlcmUsDQoiVGhlcmUgd2lsbCBiZSB3ZWVwaW5nIGFuZCBnbmFzaGluZyBv
ZiB0ZWV0aC4uLiIgKEx1a2UgMTM6MjgpLg0KSmVzdXMgdGVsbHMgdXMgd2hvIHRvIGZlYXIsDQoi
QW5kIGRvIG5vdCBmZWFyIHRob3NlIHdobyBraWxsIHRoZSBib2R5IGJ1dCBjYW5ub3Qga2lsbCB0
aGUgc291bC4NCkJ1dCByYXRoZXIgZmVhciBIaW0gd2hvIGlzIGFibGUgdG8gZGVzdHJveSBib3Ro
IHNvdWwgYW5kIGJvZHkgaW4gaGVsbCINCihNYXR0aGV3IDEwOjI4KS4NCiJOb3cgSSBzYXcgYSBu
ZXcgaGVhdmVuIGFuZCBhIG5ldyBlYXJ0aCwgZm9yIHRoZSBmaXJzdCBoZWF2ZW4gYW5kIHRoZQ0K
Zmlyc3QgZWFydGggaGFkIHBhc3NlZCBhd2F5LiBBbHNvIHRoZXJlIHdhcyBubyBtb3JlIHNlYS4g
VGhlbiBJLCBKb2huLA0Kc2F3IHRoZSBob2x5IGNpdHksIE5ldyBKZXJ1c2FsZW0sIGNvbWluZyBk
b3duIG91dCBvZiBoZWF2ZW4gZnJvbSBHb2QsDQpwcmVwYXJlZCBhcyBhIGJyaWRlIGFkb3JuZWQg
Zm9yIGhlciBodXNiYW5kLiBBbmQgSSBoZWFyZCBhIGxvdWQgdm9pY2UNCmZyb20gaGVhdmVuIHNh
eWluZywgJ0JlaG9sZCwgdGhlIHRhYmVybmFjbGUgb2YgR29kIGlzIHdpdGggbWVuLCBhbmQgSGUN
CndpbGwgZHdlbGwgd2l0aCB0aGVtLCBhbmQgdGhleSBzaGFsbCBiZSBIaXMgcGVvcGxlLiBHb2Qg
SGltc2VsZiB3aWxsDQpiZSB3aXRoIHRoZW0gYW5kIGJlIHRoZWlyIEdvZC4gQW5kIEdvZCB3aWxs
IHdpcGUgYXdheSBldmVyeSB0ZWFyIGZyb20NCnRoZWlyIGV5ZXM7IHRoZXJlIHNoYWxsIGJlIG5v
IG1vcmUgZGVhdGgsIG5vciBzb3Jyb3csIG5vciBjcnlpbmcuDQpUaGVyZSBzaGFsbCBiZSBubyBt
b3JlIHBhaW4sIGZvciB0aGUgZm9ybWVyIHRoaW5ncyBoYXZlIHBhc3NlZCBhd2F5LicNClRoZW4g
SGUgd2hvIHNhdCBvbiB0aGUgdGhyb25lIHNhaWQsICdCZWhvbGQsIEkgbWFrZSBhbGwgdGhpbmdz
IG5ldy4nDQpBbmQgSGUgc2FpZCB0byBtZSwgJ1dyaXRlLCBmb3IgdGhlc2Ugd29yZHMgYXJlIHRy
dWUgYW5kIGZhaXRoZnVsLicNCkFuZCBIZSBzYWlkIHRvIG1lLCAnSXQgaXMgZG9uZSEgSSBhbSB0
aGUgQWxwaGEgYW5kIHRoZSBPbWVnYSwgdGhlDQpCZWdpbm5pbmcgYW5kIHRoZSBFbmQuIEkgd2ls
bCBnaXZlIG9mIHRoZSBmb3VudGFpbiBvZiB0aGUgd2F0ZXIgb2YNCmxpZmUgZnJlZWx5IHRvIGhp
bSB3aG8gdGhpcnN0cy4gSGUgd2hvIG92ZXJjb21lcyBzaGFsbCBpbmhlcml0IGFsbA0KdGhpbmdz
LCBhbmQgSSB3aWxsIGJlIGhpcyBHb2QgYW5kIGhlIHNoYWxsIGJlIE15IHNvbi4gQnV0IHRoZQ0K
Y293YXJkbHksIHVuYmVsaWV2aW5nLCBhYm9taW5hYmxlLCBtdXJkZXJlcnMsIHNleHVhbGx5IGlt
bW9yYWwsDQpzb3JjZXJlcnMsIGlkb2xhdGVycywgYW5kIGFsbCBsaWFycyBzaGFsbCBoYXZlIHRo
ZWlyIHBhcnQgaW4gdGhlIGxha2UNCndoaWNoIGJ1cm5zIHdpdGggZmlyZSBhbmQgYnJpbXN0b25l
LCB3aGljaCBpcyB0aGUgc2Vjb25kIGRlYXRoLiciDQooUmV2ZWxhdGlvbiAyMToxLTgpLg0KX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KTGludXgtbnZkaW1t
IG1haWxpbmcgbGlzdCAtLSBsaW51eC1udmRpbW1AbGlzdHMuMDEub3JnClRvIHVuc3Vic2NyaWJl
IHNlbmQgYW4gZW1haWwgdG8gbGludXgtbnZkaW1tLWxlYXZlQGxpc3RzLjAxLm9yZwo=
